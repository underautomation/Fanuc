<?xml version="1.0"?>
<doc>
    <assembly>
        <name>UnderAutomation.Fanuc</name>
    </assembly>
    <members>
        <member name="M:UnderAutomation.Fanuc.FanucRobot.Connect(UnderAutomation.Fanuc.ConnectParameters)">
            <summary>
            Initialize a conenction to the robot with specified parameters
            </summary>
            <param name="parameters"></param>
        </member>
        <member name="M:UnderAutomation.Fanuc.FanucRobot.Disconnect">
            <summary>
            Disconnect all services connected to the robot
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.FanucRobot.RegisterLicense(System.String,System.String)">
            <summary>
            If you have a license And a key, please call this static method to register the product And exit the trial period
            ou can register a product even if the trial period has ended
            </summary>
            <param name="licensee">Your organization name</param>
            <param name="key">The associated key supplied by UnderAutomation</param>
            <returns>Information about the supplied license</returns>
        </member>
        <member name="P:UnderAutomation.Fanuc.FanucRobot.LicenseInfo">
            <summary>
            Return information about your license
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.Files.VariableFiles">
            <summary>
            Provides functions to read and decode Fanuc FTP variable files *.va
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.VariableFiles.ReadAavmmain">
            <summary>
            Reads and parse aavmmain.va variable file via FTP
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.VariableFiles.ReadBicsetup">
            <summary>
            Reads and parse bicsetup.va variable file via FTP
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.VariableFiles.ReadCbparam">
            <summary>
            Reads and parse cbparam.va variable file via FTP
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.VariableFiles.ReadCellio">
            <summary>
            Reads and parse cellio.va variable file via FTP
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.VariableFiles.ReadComset">
            <summary>
            Reads and parse comset.va variable file via FTP
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.VariableFiles.ReadDiocfgsv">
            <summary>
            Reads and parse diocfgsv.va variable file via FTP
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.VariableFiles.ReadGemdata">
            <summary>
            Reads and parse gemdata.va variable file via FTP
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.VariableFiles.ReadHtcolrec">
            <summary>
            Reads and parse htcolrec.va variable file via FTP
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.VariableFiles.ReadHttpkcl">
            <summary>
            Reads and parse httpkcl.va variable file via FTP
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.VariableFiles.ReadIrcCounter">
            <summary>
            Reads and parse irc_counter.va variable file via FTP
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.VariableFiles.ReadIrcMsg">
            <summary>
            Reads and parse irc_msg.va variable file via FTP
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.VariableFiles.ReadIrcStatus">
            <summary>
            Reads and parse irc_status.va variable file via FTP
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.VariableFiles.ReadIrcStlabel">
            <summary>
            Reads and parse irc_stlabel.va variable file via FTP
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.VariableFiles.ReadKlaction">
            <summary>
            Reads and parse klaction.va variable file via FTP
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.VariableFiles.ReadMixlogic">
            <summary>
            Reads and parse mixlogic.va variable file via FTP
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.VariableFiles.ReadMtparam">
            <summary>
            Reads and parse mtparam.va variable file via FTP
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.VariableFiles.ReadNumreg">
            <summary>
            Reads and parse numreg.va variable file via FTP
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.VariableFiles.ReadPalreg">
            <summary>
            Reads and parse palreg.va variable file via FTP
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.VariableFiles.ReadPosreg">
            <summary>
            Reads and parse posreg.va variable file via FTP
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.VariableFiles.ReadStrreg">
            <summary>
            Reads and parse strreg.va variable file via FTP
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.VariableFiles.ReadSwiupdt">
            <summary>
            Reads and parse swiupdt.va variable file via FTP
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.VariableFiles.ReadSycldint">
            <summary>
            Reads and parse sycldint.va variable file via FTP
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.VariableFiles.ReadSymotn">
            <summary>
            Reads and parse symotn.va variable file via FTP
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.VariableFiles.ReadSynosave">
            <summary>
            Reads and parse synosave.va variable file via FTP
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.VariableFiles.ReadSysframe">
            <summary>
            Reads and parse sysframe.va variable file via FTP
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.VariableFiles.ReadSysfsac">
            <summary>
            Reads and parse sysfsac.va variable file via FTP
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.VariableFiles.ReadSyshost">
            <summary>
            Reads and parse syshost.va variable file via FTP
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.VariableFiles.ReadSysmacro">
            <summary>
            Reads and parse sysmacro.va variable file via FTP
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.VariableFiles.ReadSysmast">
            <summary>
            Reads and parse sysmast.va variable file via FTP
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.VariableFiles.ReadSyspass">
            <summary>
            Reads and parse syspass.va variable file via FTP
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.VariableFiles.ReadSysservo">
            <summary>
            Reads and parse sysservo.va variable file via FTP
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.VariableFiles.ReadSystem">
            <summary>
            Reads and parse system.va variable file via FTP
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.VariableFiles.ReadSysuif">
            <summary>
            Reads and parse sysuif.va variable file via FTP
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.VariableFiles.ReadTpsnap">
            <summary>
            Reads and parse tpsnap.va variable file via FTP
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.VariableFiles.ReadVcmrinit">
            <summary>
            Reads and parse vcmrinit.va variable file via FTP
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.VariableFiles.ReadFile``1">
            <summary>
            Reads and parse a variable file on the Fanuc robot
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile">
            <summary>
            Describes the Fanuc variable file aavmmain.va
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.#ctor">
            <summary>
            Creates a new instance of AavmmainFile that describes the Fanuc variable file aavmmain.va
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.I">
            <summary>
            Value of variable I
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.RobGrp">
            <summary>
            Value of variable ROB_GRP
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.NumAxis">
            <summary>
            Value of variable NUM_AXIS
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.PsRobGrp">
            <summary>
            Value of variable PS_ROB_GRP
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.CondNum">
            <summary>
            Value of variable COND_NUM
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.ResErr">
            <summary>
            Value of variable RES_ERR
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.ResErrStr">
            <summary>
            Value of variable RES_ERR_STR
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.ParamName">
            <summary>
            Value of variable PARAM_NAME
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.DataType">
            <summary>
            Value of variable DATA_TYPE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.DmyInt">
            <summary>
            Value of variable DMY_INT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.DmyReal">
            <summary>
            Value of variable DMY_REAL
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.DmyStr">
            <summary>
            Value of variable DMY_STR
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.DmyStr2">
            <summary>
            Value of variable DMY_STR2
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.DmyStat">
            <summary>
            Value of variable DMY_STAT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.VfbMat">
            <summary>
            Value of variable VFB_MAT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.ResErr1">
            <summary>
            Value of variable RES_ERR1
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.ResEr1Thsd">
            <summary>
            Value of variable RES_ER1_THSD
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.VtcpX1Thsd">
            <summary>
            Value of variable VTCP_X1_THSD
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.VtcpZ1Thsd">
            <summary>
            Value of variable VTCP_Z1_THSD
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.TagtX1Thsd">
            <summary>
            Value of variable TAGT_X1_THSD
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.TagtZ1Thsd">
            <summary>
            Value of variable TAGT_Z1_THSD
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.ResErr2">
            <summary>
            Value of variable RES_ERR2
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.ResEr2Thsd">
            <summary>
            Value of variable RES_ER2_THSD
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.VtcpX2Thsd">
            <summary>
            Value of variable VTCP_X2_THSD
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.VtcpZ2Thsd">
            <summary>
            Value of variable VTCP_Z2_THSD
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.TagtX2Thsd">
            <summary>
            Value of variable TAGT_X2_THSD
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.TagtZ2Thsd">
            <summary>
            Value of variable TAGT_Z2_THSD
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.Device">
            <summary>
            Value of variable DEVICE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.FileName">
            <summary>
            Value of variable FILE_NAME
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.LogPort">
            <summary>
            Value of variable LOG_PORT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.AavmStep">
            <summary>
            Value of variable AAVM_STEP
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.MastCoun0">
            <summary>
            Value of variable MAST_COUN0
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.MastCoun02">
            <summary>
            Value of variable MAST_COUN0_2
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.ExtMct0">
            <summary>
            Value of variable EXT_MCT0
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.JposData">
            <summary>
            Value of variable JPOS_DATA
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.CmpJpos">
            <summary>
            Value of variable CMP_JPOS
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.MastAxis">
            <summary>
            Value of variable MAST_AXIS
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.TmpAxis">
            <summary>
            Value of variable TMP_AXIS
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.ErVtcpx">
            <summary>
            Value of variable ER_VTCPX
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.ErVtcpz">
            <summary>
            Value of variable ER_VTCPZ
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.ErTargtx">
            <summary>
            Value of variable ER_TARGTX
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.ErTargty">
            <summary>
            Value of variable ER_TARGTY
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.ErTargtz">
            <summary>
            Value of variable ER_TARGTZ
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.ErVtcpx1">
            <summary>
            Value of variable ER_VTCPX1
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.ErVtcpz1">
            <summary>
            Value of variable ER_VTCPZ1
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.ErTargtx1">
            <summary>
            Value of variable ER_TARGTX1
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.ErTargtz1">
            <summary>
            Value of variable ER_TARGTZ1
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.ErVtcpx2">
            <summary>
            Value of variable ER_VTCPX2
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.ErVtcpz2">
            <summary>
            Value of variable ER_VTCPZ2
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.ErTargtx2">
            <summary>
            Value of variable ER_TARGTX2
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.ErTargtz2">
            <summary>
            Value of variable ER_TARGTZ2
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.DualNum">
            <summary>
            Value of variable DUAL_NUM
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.SAxisNum">
            <summary>
            Value of variable S_AXIS_NUM
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.TppRun">
            <summary>
            Value of variable TPP_RUN
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.StepSu1">
            <summary>
            Value of variable STEP_SU1
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.StepSu2">
            <summary>
            Value of variable STEP_SU2
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.StepSu3">
            <summary>
            Value of variable STEP_SU3
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.StepSu4">
            <summary>
            Value of variable STEP_SU4
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.MinNumDots">
            <summary>
            Value of variable MIN_NUM_DOTS
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.PixSizeLow">
            <summary>
            Value of variable PIX_SIZE_LOW
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.PixSizHigh">
            <summary>
            Value of variable PIX_SIZ_HIGH
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.AspectLow">
            <summary>
            Value of variable ASPECT_LOW
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.IsAutoexpo">
            <summary>
            Value of variable IS_AUTOEXPO
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.AeContLow">
            <summary>
            Value of variable AE_CONT_LOW
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.AeContAve">
            <summary>
            Value of variable AE_CONT_AVE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.AeNumRetry">
            <summary>
            Value of variable AE_NUM_RETRY
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.AavmmainFile.AeRadiRatio">
            <summary>
            Value of variable AE_RADI_RATIO
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.Files.BicsetupFile">
            <summary>
            Describes the Fanuc variable file bicsetup.va
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.BicsetupFile.#ctor">
            <summary>
            Creates a new instance of BicsetupFile that describes the Fanuc variable file bicsetup.va
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.BicsetupFile.BicName">
            <summary>
            Value of variable BIC_NAME
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.Files.CbparamFile">
            <summary>
            Describes the Fanuc variable file cbparam.va
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.CbparamFile.#ctor">
            <summary>
            Creates a new instance of CbparamFile that describes the Fanuc variable file cbparam.va
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.CbparamFile.Payload1">
            <summary>
            Value of variable PAYLOAD1
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.CbparamFile.Payload1X">
            <summary>
            Value of variable PAYLOAD1_X
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.CbparamFile.Payload1Y">
            <summary>
            Value of variable PAYLOAD1_Y
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.CbparamFile.Payload1Z">
            <summary>
            Value of variable PAYLOAD1_Z
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.CbparamFile.Payload1Ix">
            <summary>
            Value of variable PAYLOAD1_IX
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.CbparamFile.Payload1Iy">
            <summary>
            Value of variable PAYLOAD1_IY
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.CbparamFile.Payload1Iz">
            <summary>
            Value of variable PAYLOAD1_IZ
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.CbparamFile.Payload2">
            <summary>
            Value of variable PAYLOAD2
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.CbparamFile.Payload2X">
            <summary>
            Value of variable PAYLOAD2_X
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.CbparamFile.Payload2Y">
            <summary>
            Value of variable PAYLOAD2_Y
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.CbparamFile.Payload2Z">
            <summary>
            Value of variable PAYLOAD2_Z
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.CbparamFile.Payload2Ix">
            <summary>
            Value of variable PAYLOAD2_IX
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.CbparamFile.Payload2Iy">
            <summary>
            Value of variable PAYLOAD2_IY
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.CbparamFile.Payload2Iz">
            <summary>
            Value of variable PAYLOAD2_IZ
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.CbparamFile.TframeX">
            <summary>
            Value of variable TFRAME_X
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.CbparamFile.TframeY">
            <summary>
            Value of variable TFRAME_Y
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.CbparamFile.TframeZ">
            <summary>
            Value of variable TFRAME_Z
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.CbparamFile.SeCtrlmode">
            <summary>
            Value of variable SE_CTRLMODE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.CbparamFile.DataC1">
            <summary>
            Value of variable DATA_C1
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.CbparamFile.DataC2">
            <summary>
            Value of variable DATA_C2
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.CbparamFile.DataC3">
            <summary>
            Value of variable DATA_C3
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.CbparamFile.DataC4">
            <summary>
            Value of variable DATA_C4
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.CbparamFile.DataC5">
            <summary>
            Value of variable DATA_C5
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.CbparamFile.DataC6">
            <summary>
            Value of variable DATA_C6
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.CbparamFile.DataC7">
            <summary>
            Value of variable DATA_C7
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.CbparamFile.DataC8">
            <summary>
            Value of variable DATA_C8
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.CbparamFile.DataC9">
            <summary>
            Value of variable DATA_C9
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.CbparamFile.DataC10">
            <summary>
            Value of variable DATA_C10
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.Files.CellioFile">
            <summary>
            Describes the Fanuc variable file cellio.va
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.CellioFile.#ctor">
            <summary>
            Creates a new instance of CellioFile that describes the Fanuc variable file cellio.va
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.CellioFile.cellOption">
            <summary>
            Value of variable $CELL_OPTION
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.CellioFile.styleComnt">
            <summary>
            Value of variable $STYLE_COMNT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.CellioFile.styleCount">
            <summary>
            Value of variable $STYLE_COUNT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.CellioFile.styleEnab">
            <summary>
            Value of variable $STYLE_ENAB
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.CellioFile.styleMenu">
            <summary>
            Value of variable $STYLE_MENU
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.CellioFile.styleName">
            <summary>
            Value of variable $STYLE_NAME
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.Files.ComsetFile">
            <summary>
            Describes the Fanuc variable file comset.va
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.ComsetFile.#ctor">
            <summary>
            Creates a new instance of ComsetFile that describes the Fanuc variable file comset.va
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.ComsetFile.Searchcase">
            <summary>
            Value of variable SEARCHCASE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.ComsetFile.Ifc">
            <summary>
            Value of variable IFC
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.ComsetFile.Url">
            <summary>
            Value of variable URL
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.ComsetFile.Respfile">
            <summary>
            Value of variable RESPFILE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.ComsetFile.Scomment">
            <summary>
            Value of variable SCOMMENT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.ComsetFile.Sindx">
            <summary>
            Value of variable SINDX
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.ComsetFile.Srealflag">
            <summary>
            Value of variable SREALFLAG
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.ComsetFile.Sfc">
            <summary>
            Value of variable SFC
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.ComsetFile.Svalue">
            <summary>
            Value of variable SVALUE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.ComsetFile.Scopystr">
            <summary>
            Value of variable SCOPYSTR
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.ComsetFile.NStatus">
            <summary>
            Value of variable N_STATUS
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.ComsetFile.IcommentLen">
            <summary>
            Value of variable ICOMMENT_LEN
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.ComsetFile.Iretsize">
            <summary>
            Value of variable IRETSIZE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.ComsetFile.Frvrc">
            <summary>
            Value of variable FRVRC
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.ComsetFile.Searchfile">
            <summary>
            Value of variable SEARCHFILE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.ComsetFile.Searchcancel">
            <summary>
            Value of variable SEARCHCANCEL
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.ComsetFile.RegAlmfc">
            <summary>
            Value of variable REG_ALMFC
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.ComsetFile.PregAlmfc">
            <summary>
            Value of variable PREG_ALMFC
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.ComsetFile.DiAlmfc">
            <summary>
            Value of variable DI_ALMFC
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.ComsetFile.DoAlmfc">
            <summary>
            Value of variable DO_ALMFC
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.ComsetFile.FlagAlmfc">
            <summary>
            Value of variable FLAG_ALMFC
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.Files.DiocfgsvFile">
            <summary>
            Describes the Fanuc variable file diocfgsv.va
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.DiocfgsvFile.#ctor">
            <summary>
            Creates a new instance of DiocfgsvFile that describes the Fanuc variable file diocfgsv.va
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.DiocfgsvFile.CfgFileVer">
            <summary>
            Value of variable CFG_FILE_VER
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.DiocfgsvFile.AsgLogPt">
            <summary>
            Value of variable ASG_LOG_PT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.DiocfgsvFile.AsgLogPn">
            <summary>
            Value of variable ASG_LOG_PN
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.DiocfgsvFile.AsgNPts">
            <summary>
            Value of variable ASG_N_PTS
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.DiocfgsvFile.AsgRackNo">
            <summary>
            Value of variable ASG_RACK_NO
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.DiocfgsvFile.AsgSlotNo">
            <summary>
            Value of variable ASG_SLOT_NO
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.DiocfgsvFile.AsgPhyPt">
            <summary>
            Value of variable ASG_PHY_PT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.DiocfgsvFile.AsgPhyPn">
            <summary>
            Value of variable ASG_PHY_PN
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.DiocfgsvFile.NameLogPt">
            <summary>
            Value of variable NAME_LOG_PT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.DiocfgsvFile.NameLogPn">
            <summary>
            Value of variable NAME_LOG_PN
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.DiocfgsvFile.NameName">
            <summary>
            Value of variable NAME_NAME
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.DiocfgsvFile.NameName2">
            <summary>
            Value of variable NAME_NAME2
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.DiocfgsvFile.ModeLogPt">
            <summary>
            Value of variable MODE_LOG_PT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.DiocfgsvFile.ModeFrstPn">
            <summary>
            Value of variable MODE_FRST_PN
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.DiocfgsvFile.ModeLastPn">
            <summary>
            Value of variable MODE_LAST_PN
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.DiocfgsvFile.ModeMode">
            <summary>
            Value of variable MODE_MODE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.DiocfgsvFile.AisRackNo">
            <summary>
            Value of variable AIS_RACK_NO
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.DiocfgsvFile.AisSlotNo">
            <summary>
            Value of variable AIS_SLOT_NO
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.DiocfgsvFile.AisSequence">
            <summary>
            Value of variable AIS_SEQUENCE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.DiocfgsvFile.DevRack">
            <summary>
            Value of variable DEV_RACK
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.DiocfgsvFile.DevSlot">
            <summary>
            Value of variable DEV_SLOT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.DiocfgsvFile.DevModId">
            <summary>
            Value of variable DEV_MOD_ID
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.DiocfgsvFile.DevDataType">
            <summary>
            Value of variable DEV_DATA_TYPE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.DiocfgsvFile.DevParam1">
            <summary>
            Value of variable DEV_PARAM1
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.DiocfgsvFile.DevParam2">
            <summary>
            Value of variable DEV_PARAM2
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.DiocfgsvFile.DevComment">
            <summary>
            Value of variable DEV_COMMENT
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.Files.GemdataFile">
            <summary>
            Describes the Fanuc variable file gemdata.va
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.GemdataFile.#ctor">
            <summary>
            Creates a new instance of GemdataFile that describes the Fanuc variable file gemdata.va
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.GemdataFile.AnswerDelay">
            <summary>
            Value of variable ANSWER_DELAY
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.GemdataFile.DebugMsg">
            <summary>
            Value of variable DEBUG_MSG
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.GemdataFile.WaitAct">
            <summary>
            Value of variable WAIT_ACT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.GemdataFile.WaitTime">
            <summary>
            Value of variable WAIT_TIME
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.Files.HtcolrecFile">
            <summary>
            Describes the Fanuc variable file htcolrec.va
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.HtcolrecFile.#ctor">
            <summary>
            Creates a new instance of HtcolrecFile that describes the Fanuc variable file htcolrec.va
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.HtcolrecFile.ColRec">
            <summary>
            Value of variable COL_REC
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.HtcolrecFile.ColDbg">
            <summary>
            Value of variable COL_DBG
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.HtcolrecFile.AbortDelay">
            <summary>
            Value of variable ABORT_DELAY
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.Files.HttpkclFile">
            <summary>
            Describes the Fanuc variable file httpkcl.va
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.HttpkclFile.#ctor">
            <summary>
            Creates a new instance of HttpkclFile that describes the Fanuc variable file httpkcl.va
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.HttpkclFile.Cmds">
            <summary>
            Value of variable CMDS
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.HttpkclFile.Url">
            <summary>
            Value of variable URL
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.HttpkclFile.Newcmd">
            <summary>
            Value of variable NEWCMD
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.HttpkclFile.FirstToken">
            <summary>
            Value of variable FIRST_TOKEN
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.HttpkclFile.Status">
            <summary>
            Value of variable STATUS
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.HttpkclFile.Found">
            <summary>
            Value of variable FOUND
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.HttpkclFile.IllFlg">
            <summary>
            Value of variable ILL_FLG
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.HttpkclFile.I">
            <summary>
            Value of variable I
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.Files.IrcCounterFile">
            <summary>
            Describes the Fanuc variable file irc_counter.va
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.IrcCounterFile.#ctor">
            <summary>
            Creates a new instance of IrcCounterFile that describes the Fanuc variable file irc_counter.va
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.IrcCounterFile.AttachFiles">
            <summary>
            Value of variable ATTACH_FILES
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.IrcCounterFile.CounterMode">
            <summary>
            Value of variable COUNTER_MODE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.IrcCounterFile.CurTime">
            <summary>
            Value of variable CUR_TIME
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.IrcCounterFile.CurTimeStr">
            <summary>
            Value of variable CUR_TIME_STR
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.IrcCounterFile.DbgRc">
            <summary>
            Value of variable DBG_RC
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.IrcCounterFile.FileName">
            <summary>
            Value of variable FILE_NAME
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.IrcCounterFile.Pkrcxmlfile">
            <summary>
            Value of variable PKRCXMLFILE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.IrcCounterFile.SendEmail">
            <summary>
            Value of variable SEND_EMAIL
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.IrcCounterFile.SndPriority">
            <summary>
            Value of variable SND_PRIORITY
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.IrcCounterFile.Status">
            <summary>
            Value of variable STATUS
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.IrcCounterFile.ThrDuration">
            <summary>
            Value of variable THR_DURATION
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.IrcCounterFile.ThrPrvtime">
            <summary>
            Value of variable THR_PRVTIME
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.IrcCounterFile.TppGencall">
            <summary>
            Value of variable TPP_GENCALL
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.Files.IrcMsgFile">
            <summary>
            Describes the Fanuc variable file irc_msg.va
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.IrcMsgFile.#ctor">
            <summary>
            Creates a new instance of IrcMsgFile that describes the Fanuc variable file irc_msg.va
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.IrcMsgFile.AttachFiles">
            <summary>
            Value of variable ATTACH_FILES
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.IrcMsgFile.CurTime">
            <summary>
            Value of variable CUR_TIME
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.IrcMsgFile.CurTimeStr">
            <summary>
            Value of variable CUR_TIME_STR
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.IrcMsgFile.DbgRc">
            <summary>
            Value of variable DBG_RC
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.IrcMsgFile.FileName">
            <summary>
            Value of variable FILE_NAME
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.IrcMsgFile.Pkrcxmlfile">
            <summary>
            Value of variable PKRCXMLFILE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.IrcMsgFile.SendEmail">
            <summary>
            Value of variable SEND_EMAIL
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.IrcMsgFile.SndPriority">
            <summary>
            Value of variable SND_PRIORITY
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.IrcMsgFile.Status">
            <summary>
            Value of variable STATUS
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.IrcMsgFile.ThrDuration">
            <summary>
            Value of variable THR_DURATION
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.IrcMsgFile.ThrPrvtime">
            <summary>
            Value of variable THR_PRVTIME
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.IrcMsgFile.TppGencall">
            <summary>
            Value of variable TPP_GENCALL
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.Files.IrcStatusFile">
            <summary>
            Describes the Fanuc variable file irc_status.va
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.IrcStatusFile.#ctor">
            <summary>
            Creates a new instance of IrcStatusFile that describes the Fanuc variable file irc_status.va
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.IrcStatusFile.AttachFiles">
            <summary>
            Value of variable ATTACH_FILES
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.IrcStatusFile.CurTime">
            <summary>
            Value of variable CUR_TIME
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.IrcStatusFile.CurTimeStr">
            <summary>
            Value of variable CUR_TIME_STR
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.IrcStatusFile.DbgRc">
            <summary>
            Value of variable DBG_RC
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.IrcStatusFile.FileName">
            <summary>
            Value of variable FILE_NAME
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.IrcStatusFile.Pkrcxmlfile">
            <summary>
            Value of variable PKRCXMLFILE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.IrcStatusFile.SendEmail">
            <summary>
            Value of variable SEND_EMAIL
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.IrcStatusFile.SndPriority">
            <summary>
            Value of variable SND_PRIORITY
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.IrcStatusFile.Status">
            <summary>
            Value of variable STATUS
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.IrcStatusFile.ThrDuration">
            <summary>
            Value of variable THR_DURATION
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.IrcStatusFile.ThrPrvtime">
            <summary>
            Value of variable THR_PRVTIME
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.IrcStatusFile.TppGencall">
            <summary>
            Value of variable TPP_GENCALL
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.Files.IrcStlabelFile">
            <summary>
            Describes the Fanuc variable file irc_stlabel.va
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.IrcStlabelFile.#ctor">
            <summary>
            Creates a new instance of IrcStlabelFile that describes the Fanuc variable file irc_stlabel.va
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.IrcStlabelFile.AttachFiles">
            <summary>
            Value of variable ATTACH_FILES
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.IrcStlabelFile.CurTime">
            <summary>
            Value of variable CUR_TIME
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.IrcStlabelFile.CurTimeStr">
            <summary>
            Value of variable CUR_TIME_STR
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.IrcStlabelFile.DbgRc">
            <summary>
            Value of variable DBG_RC
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.IrcStlabelFile.FileName">
            <summary>
            Value of variable FILE_NAME
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.IrcStlabelFile.Pkrcxmlfile">
            <summary>
            Value of variable PKRCXMLFILE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.IrcStlabelFile.SendEmail">
            <summary>
            Value of variable SEND_EMAIL
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.IrcStlabelFile.SndPriority">
            <summary>
            Value of variable SND_PRIORITY
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.IrcStlabelFile.Status">
            <summary>
            Value of variable STATUS
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.IrcStlabelFile.ThrDuration">
            <summary>
            Value of variable THR_DURATION
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.IrcStlabelFile.ThrPrvtime">
            <summary>
            Value of variable THR_PRVTIME
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.IrcStlabelFile.TppGencall">
            <summary>
            Value of variable TPP_GENCALL
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.Files.KlactionFile">
            <summary>
            Describes the Fanuc variable file klaction.va
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.KlactionFile.#ctor">
            <summary>
            Creates a new instance of KlactionFile that describes the Fanuc variable file klaction.va
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.KlactionFile.DataType">
            <summary>
            Value of variable DATA_TYPE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.KlactionFile.IntValue">
            <summary>
            Value of variable INT_VALUE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.KlactionFile.RealValue">
            <summary>
            Value of variable REAL_VALUE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.KlactionFile.StringValue">
            <summary>
            Value of variable STRING_VALUE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.KlactionFile.Status">
            <summary>
            Value of variable STATUS
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.KlactionFile.ParamOk">
            <summary>
            Value of variable PARAM_OK
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.Files.MixlogicFile">
            <summary>
            Describes the Fanuc variable file mixlogic.va
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.MixlogicFile.#ctor">
            <summary>
            Creates a new instance of MixlogicFile that describes the Fanuc variable file mixlogic.va
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.MixlogicFile.dryrunSub">
            <summary>
            Value of variable $DRYRUN_SUB
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.Files.MtparamFile">
            <summary>
            Describes the Fanuc variable file mtparam.va
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.MtparamFile.#ctor">
            <summary>
            Creates a new instance of MtparamFile that describes the Fanuc variable file mtparam.va
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.MtparamFile.DefItm">
            <summary>
            Value of variable DEF_ITM
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.MtparamFile.IntlAct">
            <summary>
            Value of variable INTL_ACT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.MtparamFile.IntlRun">
            <summary>
            Value of variable INTL_RUN
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.MtparamFile.DueOnce">
            <summary>
            Value of variable DUE_ONCE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.MtparamFile.DefItm2">
            <summary>
            Value of variable DEF_ITM2
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.MtparamFile.IntlAct2">
            <summary>
            Value of variable INTL_ACT2
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.MtparamFile.IntlRun2">
            <summary>
            Value of variable INTL_RUN2
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.MtparamFile.DueOnce2">
            <summary>
            Value of variable DUE_ONCE2
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.MtparamFile.DefItmI">
            <summary>
            Value of variable DEF_ITM_I
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.MtparamFile.IntlActI">
            <summary>
            Value of variable INTL_ACT_I
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.MtparamFile.IntlRunI">
            <summary>
            Value of variable INTL_RUN_I
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.MtparamFile.DueOnceI">
            <summary>
            Value of variable DUE_ONCE_I
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.MtparamFile.IntellGrs">
            <summary>
            Value of variable INTELL_GRS
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.MtparamFile.CoulombN">
            <summary>
            Value of variable COULOMB_N
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.MtparamFile.CoulombN0">
            <summary>
            Value of variable COULOMB_N0
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.MtparamFile.Viscosity">
            <summary>
            Value of variable VISCOSITY
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.MtparamFile.AMotor">
            <summary>
            Value of variable A_MOTOR
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.MtparamFile.AFriction">
            <summary>
            Value of variable A_FRICTION
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.MtparamFile.ADissip">
            <summary>
            Value of variable A_DISSIP
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.MtparamFile.AOther1">
            <summary>
            Value of variable A_OTHER1
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.MtparamFile.AOther2">
            <summary>
            Value of variable A_OTHER2
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.MtparamFile.AOther3">
            <summary>
            Value of variable A_OTHER3
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.MtparamFile.AOther4">
            <summary>
            Value of variable A_OTHER4
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.MtparamFile.AOther5">
            <summary>
            Value of variable A_OTHER5
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.MtparamFile.AOther6">
            <summary>
            Value of variable A_OTHER6
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.MtparamFile.AExponent">
            <summary>
            Value of variable A_EXPONENT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.MtparamFile.Distance">
            <summary>
            Value of variable DISTANCE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.MtparamFile.MaxVMotor">
            <summary>
            Value of variable MAX_V_MOTOR
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.MtparamFile.CoeffOff">
            <summary>
            Value of variable COEFF_OFF
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.MtparamFile.SgRate">
            <summary>
            Value of variable SG_RATE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.MtparamFile.TGrsLim">
            <summary>
            Value of variable T_GRS_LIM
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.MtparamFile.FormulaId">
            <summary>
            Value of variable FORMULA_ID
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.MtparamFile.TGrsThre">
            <summary>
            Value of variable T_GRS_THRE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.MtparamFile.GrsLife">
            <summary>
            Value of variable GRS_LIFE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.MtparamFile.Weight1">
            <summary>
            Value of variable WEIGHT_1
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.MtparamFile.Weight2">
            <summary>
            Value of variable WEIGHT_2
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.MtparamFile.Weight3">
            <summary>
            Value of variable WEIGHT_3
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.MtparamFile.Weight4">
            <summary>
            Value of variable WEIGHT_4
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.MtparamFile.Weight5">
            <summary>
            Value of variable WEIGHT_5
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.MtparamFile.Theta1">
            <summary>
            Value of variable THETA_1
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.MtparamFile.Theta2">
            <summary>
            Value of variable THETA_2
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.MtparamFile.Theta3">
            <summary>
            Value of variable THETA_3
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.MtparamFile.Theta4">
            <summary>
            Value of variable THETA_4
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.MtparamFile.Theta5">
            <summary>
            Value of variable THETA_5
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.MtparamFile.Limit">
            <summary>
            Value of variable LIMIT
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.Files.NumregFile">
            <summary>
            Describes the Fanuc variable file numreg.va
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.NumregFile.#ctor">
            <summary>
            Creates a new instance of NumregFile that describes the Fanuc variable file numreg.va
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.NumregFile.numreg">
            <summary>
            Value of variable $NUMREG
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.NumregFile.maxregnum">
            <summary>
            Value of variable $MAXREGNUM
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.Files.PalregFile">
            <summary>
            Describes the Fanuc variable file palreg.va
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.PalregFile.#ctor">
            <summary>
            Creates a new instance of PalregFile that describes the Fanuc variable file palreg.va
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.PalregFile.palregnum">
            <summary>
            Value of variable $PALREGNUM
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.PalregFile.palreg">
            <summary>
            Value of variable $PALREG
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.Files.PosregFile">
            <summary>
            Describes the Fanuc variable file posreg.va
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.PosregFile.#ctor">
            <summary>
            Creates a new instance of PosregFile that describes the Fanuc variable file posreg.va
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.PosregFile.posreg">
            <summary>
            Value of variable $POSREG
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.PosregFile.maxpregnum">
            <summary>
            Value of variable $MAXPREGNUM
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.Files.StrregFile">
            <summary>
            Describes the Fanuc variable file strreg.va
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.StrregFile.#ctor">
            <summary>
            Creates a new instance of StrregFile that describes the Fanuc variable file strreg.va
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.StrregFile.strreg">
            <summary>
            Value of variable $STRREG
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.StrregFile.maxsregnum">
            <summary>
            Value of variable $MAXSREGNUM
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.Files.SwiupdtFile">
            <summary>
            Describes the Fanuc variable file swiupdt.va
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.SwiupdtFile.#ctor">
            <summary>
            Creates a new instance of SwiupdtFile that describes the Fanuc variable file swiupdt.va
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SwiupdtFile.RunOnce">
            <summary>
            Value of variable RUN_ONCE
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.Files.SycldintFile">
            <summary>
            Describes the Fanuc variable file sycldint.va
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.SycldintFile.#ctor">
            <summary>
            Creates a new instance of SycldintFile that describes the Fanuc variable file sycldint.va
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SycldintFile.erseverity">
            <summary>
            Value of variable $ERSEVERITY
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SycldintFile.loadDevice">
            <summary>
            Value of variable $LOAD_DEVICE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SycldintFile.pwrUpRtn">
            <summary>
            Value of variable $PWR_UP_RTN
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SycldintFile.tpabrtUsed">
            <summary>
            Value of variable $TPABRT_USED
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.Files.SymotnFile">
            <summary>
            Describes the Fanuc variable file symotn.va
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.SymotnFile.#ctor">
            <summary>
            Creates a new instance of SymotnFile that describes the Fanuc variable file symotn.va
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SymotnFile.motaskData">
            <summary>
            Value of variable $MOTASK_DATA
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SymotnFile.plstGrpmad">
            <summary>
            Value of variable $PLST_GRPMAD
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SymotnFile.plstParnum">
            <summary>
            Value of variable $PLST_PARNUM
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SymotnFile.plstSchmad">
            <summary>
            Value of variable $PLST_SCHMAD
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SymotnFile.plstSchnum">
            <summary>
            Value of variable $PLST_SCHNUM
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SymotnFile.plstUpdnum">
            <summary>
            Value of variable $PLST_UPDNUM
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.Files.SynosaveFile">
            <summary>
            Describes the Fanuc variable file synosave.va
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.SynosaveFile.#ctor">
            <summary>
            Creates a new instance of SynosaveFile that describes the Fanuc variable file synosave.va
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SynosaveFile.aimageBack">
            <summary>
            Value of variable $AIMAGE_BACK
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SynosaveFile.autoupdtSt">
            <summary>
            Value of variable $AUTOUPDT_ST
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SynosaveFile.blt">
            <summary>
            Value of variable $BLT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SynosaveFile.daqGfdUse">
            <summary>
            Value of variable $DAQ_GFD_USE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SynosaveFile.device">
            <summary>
            Value of variable $DEVICE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SynosaveFile.dfmtn0No">
            <summary>
            Value of variable $DFMTN0_NO
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SynosaveFile.distbfData">
            <summary>
            Value of variable $DISTBF_DATA
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SynosaveFile.fastClock">
            <summary>
            Value of variable $FAST_CLOCK
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SynosaveFile.fileBasept">
            <summary>
            Value of variable $FILE_BASEPT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SynosaveFile.fileMaxsec">
            <summary>
            Value of variable $FILE_MAXSEC
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SynosaveFile.imsaveDone">
            <summary>
            Value of variable $IMSAVE_DONE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SynosaveFile.kclRpcout">
            <summary>
            Value of variable $KCL_RPCOUT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SynosaveFile.lastpauspos">
            <summary>
            Value of variable $LASTPAUSPOS
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SynosaveFile.masterEnb">
            <summary>
            Value of variable $MASTER_ENB
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SynosaveFile.nullCycle">
            <summary>
            Value of variable $NULL_CYCLE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SynosaveFile.padjSchnum">
            <summary>
            Value of variable $PADJ_SCHNUM
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SynosaveFile.startupDbg">
            <summary>
            Value of variable $STARTUP_DBG
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SynosaveFile.tickRate">
            <summary>
            Value of variable $TICK_RATE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SynosaveFile.vdate">
            <summary>
            Value of variable $VDATE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SynosaveFile.version">
            <summary>
            Value of variable $VERSION
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.Files.SysframeFile">
            <summary>
            Describes the Fanuc variable file sysframe.va
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.SysframeFile.#ctor">
            <summary>
            Creates a new instance of SysframeFile that describes the Fanuc variable file sysframe.va
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SysframeFile.cellFloor">
            <summary>
            Value of variable $CELL_FLOOR
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SysframeFile.mnuframe">
            <summary>
            Value of variable $MNUFRAME
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SysframeFile.mnuframenum">
            <summary>
            Value of variable $MNUFRAMENUM
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SysframeFile.mnutool">
            <summary>
            Value of variable $MNUTOOL
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SysframeFile.mnutoolnum">
            <summary>
            Value of variable $MNUTOOLNUM
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.Files.SysfsacFile">
            <summary>
            Describes the Fanuc variable file sysfsac.va
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.SysfsacFile.#ctor">
            <summary>
            Creates a new instance of SysfsacFile that describes the Fanuc variable file sysfsac.va
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SysfsacFile.fsacDefLv">
            <summary>
            Value of variable $FSAC_DEF_LV
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SysfsacFile.fsacEnable">
            <summary>
            Value of variable $FSAC_ENABLE
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.Files.SyshostFile">
            <summary>
            Describes the Fanuc variable file syshost.va
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.SyshostFile.#ctor">
            <summary>
            Creates a new instance of SyshostFile that describes the Fanuc variable file syshost.va
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SyshostFile.dnsLocDom">
            <summary>
            Value of variable $DNS_LOC_DOM
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SyshostFile.ethFltr">
            <summary>
            Value of variable $ETH_FLTR
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.Files.SysmacroFile">
            <summary>
            Describes the Fanuc variable file sysmacro.va
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.SysmacroFile.#ctor">
            <summary>
            Creates a new instance of SysmacroFile that describes the Fanuc variable file sysmacro.va
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SysmacroFile.macrolduimt">
            <summary>
            Value of variable $MACROLDUIMT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SysmacroFile.macromaxdri">
            <summary>
            Value of variable $MACROMAXDRI
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SysmacroFile.macroMaxnu">
            <summary>
            Value of variable $MACRO_MAXNU
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SysmacroFile.macrspdimsk">
            <summary>
            Value of variable $MACRSPDIMSK
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SysmacroFile.macrspsumsk">
            <summary>
            Value of variable $MACRSPSUMSK
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SysmacroFile.macrtpdsbex">
            <summary>
            Value of variable $MACRTPDSBEX
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.Files.SysmastFile">
            <summary>
            Describes the Fanuc variable file sysmast.va
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.SysmastFile.#ctor">
            <summary>
            Creates a new instance of SysmastFile that describes the Fanuc variable file sysmast.va
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.Files.SyspassFile">
            <summary>
            Describes the Fanuc variable file syspass.va
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.SyspassFile.#ctor">
            <summary>
            Creates a new instance of SyspassFile that describes the Fanuc variable file syspass.va
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.Files.SysservoFile">
            <summary>
            Describes the Fanuc variable file sysservo.va
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.SysservoFile.#ctor">
            <summary>
            Creates a new instance of SysservoFile that describes the Fanuc variable file sysservo.va
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.Files.SystemFile">
            <summary>
            Describes the Fanuc variable file system.va
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.SystemFile.#ctor">
            <summary>
            Creates a new instance of SystemFile that describes the Fanuc variable file system.va
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.accMaxlmt">
            <summary>
            Value of variable $ACC_MAXLMT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.accMinlmt">
            <summary>
            Value of variable $ACC_MINLMT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.accPreExe">
            <summary>
            Value of variable $ACC_PRE_EXE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.acUpdate">
            <summary>
            Value of variable $AC_UPDATE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.aiocnvNum">
            <summary>
            Value of variable $AIOCNV_NUM
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.aiocnvUse">
            <summary>
            Value of variable $AIOCNV_USE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.angtol">
            <summary>
            Value of variable $ANGTOL
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.application">
            <summary>
            Value of variable $APPLICATION
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.apActive">
            <summary>
            Value of variable $AP_ACTIVE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.apAutomode">
            <summary>
            Value of variable $AP_AUTOMODE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.apChgaponl">
            <summary>
            Value of variable $AP_CHGAPONL
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.apCurtool">
            <summary>
            Value of variable $AP_CURTOOL
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.apDoClean">
            <summary>
            Value of variable $AP_DO_CLEAN
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.apDoClenm">
            <summary>
            Value of variable $AP_DO_CLENM
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.apDspdryrn">
            <summary>
            Value of variable $AP_DSPDRYRN
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.apHide">
            <summary>
            Value of variable $AP_HIDE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.apMaxapp">
            <summary>
            Value of variable $AP_MAXAPP
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.apMaxax">
            <summary>
            Value of variable $AP_MAXAX
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.apPlugged">
            <summary>
            Value of variable $AP_PLUGGED
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.apPrcDsbm">
            <summary>
            Value of variable $AP_PRC_DSBM
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.apProcDsb">
            <summary>
            Value of variable $AP_PROC_DSB
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.apSegfChk">
            <summary>
            Value of variable $AP_SEGF_CHK
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.apSegChkm">
            <summary>
            Value of variable $AP_SEG_CHKM
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.apSelap">
            <summary>
            Value of variable $AP_SELAP
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.apTotalax">
            <summary>
            Value of variable $AP_TOTALAX
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.apUsenum">
            <summary>
            Value of variable $AP_USENUM
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.argdispmmck">
            <summary>
            Value of variable $ARGDISPMMCK
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.argdispmode">
            <summary>
            Value of variable $ARGDISPMODE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.argWord">
            <summary>
            Value of variable $ARG_WORD
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.autoinit">
            <summary>
            Value of variable $AUTOINIT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.automessage">
            <summary>
            Value of variable $AUTOMESSAGE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.automodeDo">
            <summary>
            Value of variable $AUTOMODE_DO
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.automodeOv">
            <summary>
            Value of variable $AUTOMODE_OV
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.autopauspos">
            <summary>
            Value of variable $AUTOPAUSPOS
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.autoppostsk">
            <summary>
            Value of variable $AUTOPPOSTSK
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.autoupdtmod">
            <summary>
            Value of variable $AUTOUPDTMOD
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.auxwzdEnb">
            <summary>
            Value of variable $AUXWZD_ENB
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.auxwzdStat">
            <summary>
            Value of variable $AUXWZD_STAT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.background">
            <summary>
            Value of variable $BACKGROUND
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.backupName">
            <summary>
            Value of variable $BACKUP_NAME
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.bckNoDel">
            <summary>
            Value of variable $BCK_NO_DEL
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.bgeUnusend">
            <summary>
            Value of variable $BGE_UNUSEND
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.bwdAbort">
            <summary>
            Value of variable $BWD_ABORT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.bwdItrRtn">
            <summary>
            Value of variable $BWD_ITR_RTN
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.bwdNonstop">
            <summary>
            Value of variable $BWD_NONSTOP
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.ceOption">
            <summary>
            Value of variable $CE_OPTION
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.ceRiaId">
            <summary>
            Value of variable $CE_RIA_ID
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.checkconfig">
            <summary>
            Value of variable $CHECKCONFIG
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.collectEnb">
            <summary>
            Value of variable $COLLECT_ENB
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.crtDefprog">
            <summary>
            Value of variable $CRT_DEFPROG
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.crtInuser">
            <summary>
            Value of variable $CRT_INUSER
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.crtKeyTbl">
            <summary>
            Value of variable $CRT_KEY_TBL
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.crtLckuser">
            <summary>
            Value of variable $CRT_LCKUSER
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.crtUsestat">
            <summary>
            Value of variable $CRT_USESTAT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.crAutoDo">
            <summary>
            Value of variable $CR_AUTO_DO
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.crIndtEnb">
            <summary>
            Value of variable $CR_INDT_ENB
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.crT1Do">
            <summary>
            Value of variable $CR_T1_DO
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.crT2Do">
            <summary>
            Value of variable $CR_T2_DO
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.cstop">
            <summary>
            Value of variable $CSTOP
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.ctrlDelete">
            <summary>
            Value of variable $CTRL_DELETE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.ctScreen">
            <summary>
            Value of variable $CT_SCREEN
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.custManual">
            <summary>
            Value of variable $CUST_MANUAL
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.dbcondtrig">
            <summary>
            Value of variable $DBCONDTRIG
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.dbnumlim">
            <summary>
            Value of variable $DBNUMLIM
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.dbAwaytrig">
            <summary>
            Value of variable $DB_AWAYTRIG
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.dbAwayAlm">
            <summary>
            Value of variable $DB_AWAY_ALM
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.dbCondtyp">
            <summary>
            Value of variable $DB_CONDTYP
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.dbMindist">
            <summary>
            Value of variable $DB_MINDIST
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.dbMontime">
            <summary>
            Value of variable $DB_MONTIME
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.dbMontyp">
            <summary>
            Value of variable $DB_MONTYP
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.dbMotnend">
            <summary>
            Value of variable $DB_MOTNEND
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.dbTolerenc">
            <summary>
            Value of variable $DB_TOLERENC
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.dcsVersion">
            <summary>
            Value of variable $DCS_VERSION
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.defprogEnb">
            <summary>
            Value of variable $DEFPROG_ENB
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.defpulse">
            <summary>
            Value of variable $DEFPULSE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.defAcclim">
            <summary>
            Value of variable $DEF_ACCLIM
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.defWrstjnt">
            <summary>
            Value of variable $DEF_WRSTJNT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.devIndex">
            <summary>
            Value of variable $DEV_INDEX
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.devPath">
            <summary>
            Value of variable $DEV_PATH
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.dhcpClntid">
            <summary>
            Value of variable $DHCP_CLNTID
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.distbfTts">
            <summary>
            Value of variable $DISTBF_TTS
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.distbfVer">
            <summary>
            Value of variable $DISTBF_VER
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.dmaurst">
            <summary>
            Value of variable $DMAURST
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.dsblGpmsk">
            <summary>
            Value of variable $DSBL_GPMSK
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.dumpOption">
            <summary>
            Value of variable $DUMP_OPTION
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.dutrCfg">
            <summary>
            Value of variable $DUTR_CFG
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.dutrCpmes">
            <summary>
            Value of variable $DUTR_CPMES
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.dutyTemp">
            <summary>
            Value of variable $DUTY_TEMP
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.dutyUnit">
            <summary>
            Value of variable $DUTY_UNIT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.editorOptn">
            <summary>
            Value of variable $EDITOR_OPTN
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.emgdiStat">
            <summary>
            Value of variable $EMGDI_STAT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.errorProg">
            <summary>
            Value of variable $ERROR_PROG
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.errorTable">
            <summary>
            Value of variable $ERROR_TABLE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.errsevNum">
            <summary>
            Value of variable $ERRSEV_NUM
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.erAutoEnb">
            <summary>
            Value of variable $ER_AUTO_ENB
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.erNofltr">
            <summary>
            Value of variable $ER_NOFLTR
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.erNohis">
            <summary>
            Value of variable $ER_NOHIS
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.erSevNoau">
            <summary>
            Value of variable $ER_SEV_NOAU
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.etcpVer">
            <summary>
            Value of variable $ETCP_VER
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.extlogReq">
            <summary>
            Value of variable $EXTLOG_REQ
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.extlogSiz">
            <summary>
            Value of variable $EXTLOG_SIZ
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.extstksiz">
            <summary>
            Value of variable $EXTSTKSIZ
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.exttol">
            <summary>
            Value of variable $EXTTOL
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.extBwdSel">
            <summary>
            Value of variable $EXT_BWD_SEL
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.eStopDo">
            <summary>
            Value of variable $E_STOP_DO
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.factoryTun">
            <summary>
            Value of variable $FACTORY_TUN
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.featAdd">
            <summary>
            Value of variable $FEAT_ADD
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.featDemoin">
            <summary>
            Value of variable $FEAT_DEMOIN
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.featIndex">
            <summary>
            Value of variable $FEAT_INDEX
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.fileFrsprt">
            <summary>
            Value of variable $FILE_FRSPRT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.fno">
            <summary>
            Value of variable $FNO
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.frmChktyp">
            <summary>
            Value of variable $FRM_CHKTYP
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.fromchkMin">
            <summary>
            Value of variable $FROMCHK_MIN
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.ftpDefOw">
            <summary>
            Value of variable $FTP_DEF_OW
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.ftpDircomp">
            <summary>
            Value of variable $FTP_DIRCOMP
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.genovEnb">
            <summary>
            Value of variable $GENOV_ENB
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.hostname">
            <summary>
            Value of variable $HOSTNAME
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.hostPdusiz">
            <summary>
            Value of variable $HOST_PDUSIZ
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.hscdQupd">
            <summary>
            Value of variable $HSCD_QUPD
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.hscdUpdtyp">
            <summary>
            Value of variable $HSCD_UPDTYP
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.idlCpuPct">
            <summary>
            Value of variable $IDL_CPU_PCT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.idlMinPct">
            <summary>
            Value of variable $IDL_MIN_PCT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.ignrIoerr">
            <summary>
            Value of variable $IGNR_IOERR
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.inptSimDo">
            <summary>
            Value of variable $INPT_SIM_DO
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.instalScrn">
            <summary>
            Value of variable $INSTAL_SCRN
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.intpmodntol">
            <summary>
            Value of variable $INTPMODNTOL
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.intpPrty">
            <summary>
            Value of variable $INTP_PRTY
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.invistpEnb">
            <summary>
            Value of variable $INVISTP_ENB
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.iomaster">
            <summary>
            Value of variable $IOMASTER
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.iosramcache">
            <summary>
            Value of variable $IOSRAMCACHE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.ioAutoCfg">
            <summary>
            Value of variable $IO_AUTO_CFG
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.ioAutoUop">
            <summary>
            Value of variable $IO_AUTO_UOP
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.ioCmtOpt">
            <summary>
            Value of variable $IO_CMT_OPT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.ioCycle">
            <summary>
            Value of variable $IO_CYCLE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.ioDefNum">
            <summary>
            Value of variable $IO_DEF_NUM
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.ioIpche">
            <summary>
            Value of variable $IO_IPCHE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.ioRtryCnt">
            <summary>
            Value of variable $IO_RTRY_CNT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.ioScrnUpd">
            <summary>
            Value of variable $IO_SCRN_UPD
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.isdtIsolc">
            <summary>
            Value of variable $ISDT_ISOLC
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.j23DspEnb">
            <summary>
            Value of variable $J23_DSP_ENB
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.jobprocEnb">
            <summary>
            Value of variable $JOBPROC_ENB
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.jogInAuto">
            <summary>
            Value of variable $JOG_IN_AUTO
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.jposrecEnb">
            <summary>
            Value of variable $JPOSREC_ENB
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.kanjiMask">
            <summary>
            Value of variable $KANJI_MASK
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.karelEnb">
            <summary>
            Value of variable $KAREL_ENB
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.kclLinNum">
            <summary>
            Value of variable $KCL_LIN_NUM
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.keylogging">
            <summary>
            Value of variable $KEYLOGGING
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.language">
            <summary>
            Value of variable $LANGUAGE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.loctol">
            <summary>
            Value of variable $LOCTOL
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.logErItm">
            <summary>
            Value of variable $LOG_ER_ITM
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.logErSev">
            <summary>
            Value of variable $LOG_ER_SEV
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.logErTyp">
            <summary>
            Value of variable $LOG_ER_TYP
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.logRecRst">
            <summary>
            Value of variable $LOG_REC_RST
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.logTpkey">
            <summary>
            Value of variable $LOG_TPKEY
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.longnamEnb">
            <summary>
            Value of variable $LONGNAM_ENB
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.lupsDigit">
            <summary>
            Value of variable $LUPS_DIGIT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.luLoadprog">
            <summary>
            Value of variable $LU_LOADPROG
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.maxualrmnum">
            <summary>
            Value of variable $MAXUALRMNUM
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.maxDigPrt">
            <summary>
            Value of variable $MAX_DIG_PRT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.mdLdxdisab">
            <summary>
            Value of variable $MD_LDXDISAB
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.memoApname">
            <summary>
            Value of variable $MEMO_APNAME
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.mmetpu">
            <summary>
            Value of variable $MMETPU
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.mndspAdcol">
            <summary>
            Value of variable $MNDSP_ADCOL
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.mndspCmnt">
            <summary>
            Value of variable $MNDSP_CMNT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.mndspFncmn">
            <summary>
            Value of variable $MNDSP_FNCMN
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.mndspFstli">
            <summary>
            Value of variable $MNDSP_FSTLI
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.mndspPoscf">
            <summary>
            Value of variable $MNDSP_POSCF
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.mndspPrpmt">
            <summary>
            Value of variable $MNDSP_PRPMT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.mnsingChk">
            <summary>
            Value of variable $MNSING_CHK
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.modaqDev">
            <summary>
            Value of variable $MODAQ_DEV
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.modaqHsize">
            <summary>
            Value of variable $MODAQ_HSIZE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.modaqTask">
            <summary>
            Value of variable $MODAQ_TASK
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.modaqType">
            <summary>
            Value of variable $MODAQ_TYPE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.monitorMsg">
            <summary>
            Value of variable $MONITOR_MSG
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.mplName">
            <summary>
            Value of variable $MPL_NAME
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.mskcfmap">
            <summary>
            Value of variable $MSKCFMAP
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.mskconrel">
            <summary>
            Value of variable $MSKCONREL
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.mskexcfenb">
            <summary>
            Value of variable $MSKEXCFENB
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.mskexcffnc">
            <summary>
            Value of variable $MSKEXCFFNC
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.mskjogovlim">
            <summary>
            Value of variable $MSKJOGOVLIM
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.mskkey">
            <summary>
            Value of variable $MSKKEY
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.mskkeyPanl">
            <summary>
            Value of variable $MSKKEY_PANL
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.mskrunovlim">
            <summary>
            Value of variable $MSKRUNOVLIM
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.msksfspdtyp">
            <summary>
            Value of variable $MSKSFSPDTYP
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.msksign">
            <summary>
            Value of variable $MSKSIGN
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.mskt1motlim">
            <summary>
            Value of variable $MSKT1MOTLIM
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.msqzEdit">
            <summary>
            Value of variable $MSQZ_EDIT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.mtArcEnb">
            <summary>
            Value of variable $MT_ARC_ENB
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.mtMnMode">
            <summary>
            Value of variable $MT_MN_MODE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.mtSplEnb">
            <summary>
            Value of variable $MT_SPL_ENB
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.muapCplenb">
            <summary>
            Value of variable $MUAP_CPLENB
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.nocheck">
            <summary>
            Value of variable $NOCHECK
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.noWaitLn">
            <summary>
            Value of variable $NO_WAIT_LN
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.numRspace">
            <summary>
            Value of variable $NUM_RSPACE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.odrdspEnb">
            <summary>
            Value of variable $ODRDSP_ENB
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.offsetCart">
            <summary>
            Value of variable $OFFSET_CART
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.offsetDis">
            <summary>
            Value of variable $OFFSET_DIS
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.ofsAtMark">
            <summary>
            Value of variable $OFS_AT_MARK
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.openFiles">
            <summary>
            Value of variable $OPEN_FILES
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.optionIo">
            <summary>
            Value of variable $OPTION_IO
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.optmPrg">
            <summary>
            Value of variable $OPTM_PRG
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.orgDsbl">
            <summary>
            Value of variable $ORG_DSBL
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.orienttol">
            <summary>
            Value of variable $ORIENTTOL
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.outSimDo">
            <summary>
            Value of variable $OUT_SIM_DO
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.ovrdPexe">
            <summary>
            Value of variable $OVRD_PEXE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.ovrdRate">
            <summary>
            Value of variable $OVRD_RATE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.palPosChk">
            <summary>
            Value of variable $PAL_POS_CHK
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.paramMenu">
            <summary>
            Value of variable $PARAM_MENU
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.pauseProg">
            <summary>
            Value of variable $PAUSE_PROG
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.pccrt">
            <summary>
            Value of variable $PCCRT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.pccrtHost">
            <summary>
            Value of variable $PCCRT_HOST
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.pctp">
            <summary>
            Value of variable $PCTP
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.pctpHost">
            <summary>
            Value of variable $PCTP_HOST
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.pcTimeout">
            <summary>
            Value of variable $PC_TIMEOUT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.pgdebug">
            <summary>
            Value of variable $PGDEBUG
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.pginpFlmsk">
            <summary>
            Value of variable $PGINP_FLMSK
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.pginpFltr">
            <summary>
            Value of variable $PGINP_FLTR
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.pginpPgatr">
            <summary>
            Value of variable $PGINP_PGATR
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.pginpPgchk">
            <summary>
            Value of variable $PGINP_PGCHK
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.pginpType">
            <summary>
            Value of variable $PGINP_TYPE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.pginpWord">
            <summary>
            Value of variable $PGINP_WORD
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.pglog">
            <summary>
            Value of variable $PGLOG
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.pgtracelen">
            <summary>
            Value of variable $PGTRACELEN
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.plidKnowM">
            <summary>
            Value of variable $PLID_KNOW_M
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.ploadbanfwd">
            <summary>
            Value of variable $PLOADBANFWD
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.plstOvld">
            <summary>
            Value of variable $PLST_OVLD
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.plsCmpLim">
            <summary>
            Value of variable $PLS_CMP_LIM
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.plsErChk">
            <summary>
            Value of variable $PLS_ER_CHK
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.plsErLim">
            <summary>
            Value of variable $PLS_ER_LIM
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.plsErRst">
            <summary>
            Value of variable $PLS_ER_RST
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.plMod">
            <summary>
            Value of variable $PL_MOD
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.plModSt">
            <summary>
            Value of variable $PL_MOD_ST
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.plThrInrt">
            <summary>
            Value of variable $PL_THR_INRT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.plThrMass">
            <summary>
            Value of variable $PL_THR_MASS
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.plThrMmnt">
            <summary>
            Value of variable $PL_THR_MMNT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.pnsCurLin">
            <summary>
            Value of variable $PNS_CUR_LIN
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.pnsEndCur">
            <summary>
            Value of variable $PNS_END_CUR
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.pnsEndExe">
            <summary>
            Value of variable $PNS_END_EXE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.pnsNumber">
            <summary>
            Value of variable $PNS_NUMBER
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.pnsOption">
            <summary>
            Value of variable $PNS_OPTION
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.pnsProgram">
            <summary>
            Value of variable $PNS_PROGRAM
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.pnsTaskId">
            <summary>
            Value of variable $PNS_TASK_ID
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.priority">
            <summary>
            Value of variable $PRIORITY
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.productId">
            <summary>
            Value of variable $PRODUCT_ID
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.proggrpTgl">
            <summary>
            Value of variable $PROGGRP_TGL
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.prohibitDo">
            <summary>
            Value of variable $PROHIBIT_DO
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.prportNum">
            <summary>
            Value of variable $PRPORT_NUM
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.prCartrep">
            <summary>
            Value of variable $PR_CARTREP
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.pskstat">
            <summary>
            Value of variable $PSKSTAT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.pslgversion">
            <summary>
            Value of variable $PSLGVERSION
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.purgeEnbl">
            <summary>
            Value of variable $PURGE_ENBL
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.pwfIo">
            <summary>
            Value of variable $PWF_IO
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.pwrNormal">
            <summary>
            Value of variable $PWR_NORMAL
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.pwrSemi">
            <summary>
            Value of variable $PWR_SEMI
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.rbtif">
            <summary>
            Value of variable $RBTIF
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.rcvtmout">
            <summary>
            Value of variable $RCVTMOUT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.rdioType">
            <summary>
            Value of variable $RDIO_TYPE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.refposmaxno">
            <summary>
            Value of variable $REFPOSMAXNO
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.remote">
            <summary>
            Value of variable $REMOTE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.replRange">
            <summary>
            Value of variable $REPL_RANGE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.resmDryprg">
            <summary>
            Value of variable $RESM_DRYPRG
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.resumeProg">
            <summary>
            Value of variable $RESUME_PROG
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.reExecEnb">
            <summary>
            Value of variable $RE_EXEC_ENB
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.rgspdPrexe">
            <summary>
            Value of variable $RGSPD_PREXE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.rgtdbPrexe">
            <summary>
            Value of variable $RGTDB_PREXE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.rgtrmPrexe">
            <summary>
            Value of variable $RGTRM_PREXE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.riAirpurge">
            <summary>
            Value of variable $RI_AIRPURGE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.rmtMaster">
            <summary>
            Value of variable $RMT_MASTER
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.robotIsolc">
            <summary>
            Value of variable $ROBOT_ISOLC
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.robotName">
            <summary>
            Value of variable $ROBOT_NAME
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.robCateg">
            <summary>
            Value of variable $ROB_CATEG
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.robOrdNum">
            <summary>
            Value of variable $ROB_ORD_NUM
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.rpcTimeout">
            <summary>
            Value of variable $RPC_TIMEOUT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.rs232Nport">
            <summary>
            Value of variable $RS232_NPORT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.rsmavailnum">
            <summary>
            Value of variable $RSMAVAILNUM
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.rspaceMode">
            <summary>
            Value of variable $RSPACE_MODE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.rspcworkAd">
            <summary>
            Value of variable $RSPCWORK_AD
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.rsr">
            <summary>
            Value of variable $RSR
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.rsrIntval">
            <summary>
            Value of variable $RSR_INTVAL
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.rsrOption">
            <summary>
            Value of variable $RSR_OPTION
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.safDoPuls">
            <summary>
            Value of variable $SAF_DO_PULS
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.scanTime">
            <summary>
            Value of variable $SCAN_TIME
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.selDefault">
            <summary>
            Value of variable $SEL_DEFAULT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.selHotstrt">
            <summary>
            Value of variable $SEL_HOTSTRT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.semipowerfl">
            <summary>
            Value of variable $SEMIPOWERFL
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.semipwfdo">
            <summary>
            Value of variable $SEMIPWFDO
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.serviceKl">
            <summary>
            Value of variable $SERVICE_KL
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.servicePrg">
            <summary>
            Value of variable $SERVICE_PRG
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.servDev">
            <summary>
            Value of variable $SERV_DEV
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.servMail">
            <summary>
            Value of variable $SERV_MAIL
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.servOutput">
            <summary>
            Value of variable $SERV_OUTPUT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.servSave">
            <summary>
            Value of variable $SERV_SAVE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.servType">
            <summary>
            Value of variable $SERV_TYPE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.shftovEnb">
            <summary>
            Value of variable $SHFTOV_ENB
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.showRegUi">
            <summary>
            Value of variable $SHOW_REG_UI
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.siUnitEnb">
            <summary>
            Value of variable $SI_UNIT_ENB
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.slcRetry">
            <summary>
            Value of variable $SLC_RETRY
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.smonAlias">
            <summary>
            Value of variable $SMON_ALIAS
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.smonDefprog">
            <summary>
            Value of variable $SMON_DEFPROG
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.smonRecall">
            <summary>
            Value of variable $SMON_RECALL
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.softKbCfg">
            <summary>
            Value of variable $SOFT_KB_CFG
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.sopinSim">
            <summary>
            Value of variable $SOPIN_SIM
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.srvnordyDo">
            <summary>
            Value of variable $SRVNORDY_DO
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.srvqstpDsb">
            <summary>
            Value of variable $SRVQSTP_DSB
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.stopOnErr">
            <summary>
            Value of variable $STOP_ON_ERR
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.stopPtn">
            <summary>
            Value of variable $STOP_PTN
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.stringPrm">
            <summary>
            Value of variable $STRING_PRM
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.svprgCount">
            <summary>
            Value of variable $SVPRG_COUNT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.svprgEnb">
            <summary>
            Value of variable $SVPRG_ENB
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.svprmEnb">
            <summary>
            Value of variable $SVPRM_ENB
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.sysdebug">
            <summary>
            Value of variable $SYSDEBUG
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.sysdspPass">
            <summary>
            Value of variable $SYSDSP_PASS
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.systskmem">
            <summary>
            Value of variable $SYSTSKMEM
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.t1svgunspd">
            <summary>
            Value of variable $T1SVGUNSPD
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.taDispEnb">
            <summary>
            Value of variable $TA_DISP_ENB
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.thrtablenum">
            <summary>
            Value of variable $THRTABLENUM
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.timebfTts">
            <summary>
            Value of variable $TIMEBF_TTS
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.timebfVer">
            <summary>
            Value of variable $TIMEBF_VER
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.timerNum">
            <summary>
            Value of variable $TIMER_NUM
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.tmiChan">
            <summary>
            Value of variable $TMI_CHAN
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.tmiDbglvl">
            <summary>
            Value of variable $TMI_DBGLVL
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.tmiEtherad">
            <summary>
            Value of variable $TMI_ETHERAD
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.tmiRouter">
            <summary>
            Value of variable $TMI_ROUTER
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.tmiSnmask">
            <summary>
            Value of variable $TMI_SNMASK
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.toolofsDis">
            <summary>
            Value of variable $TOOLOFS_DIS
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.tpeDetail">
            <summary>
            Value of variable $TPE_DETAIL
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.tpoffLim">
            <summary>
            Value of variable $TPOFF_LIM
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.tponSvoff">
            <summary>
            Value of variable $TPON_SVOFF
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.tpvtcompat">
            <summary>
            Value of variable $TPVTCOMPAT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.tpDefprog">
            <summary>
            Value of variable $TP_DEFPROG
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.tpDisplay">
            <summary>
            Value of variable $TP_DISPLAY
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.tpInstMsk">
            <summary>
            Value of variable $TP_INST_MSK
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.tpInuser">
            <summary>
            Value of variable $TP_INUSER
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.tpLckuser">
            <summary>
            Value of variable $TP_LCKUSER
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.tpQuickmen">
            <summary>
            Value of variable $TP_QUICKMEN
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.tpScreen">
            <summary>
            Value of variable $TP_SCREEN
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.tpUserscrn">
            <summary>
            Value of variable $TP_USERSCRN
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.tpUsestat">
            <summary>
            Value of variable $TP_USESTAT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.ualrmMsg">
            <summary>
            Value of variable $UALRM_MSG
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.ualrmSev">
            <summary>
            Value of variable $UALRM_SEV
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.uiDefprog">
            <summary>
            Value of variable $UI_DEFPROG
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.uiInuser">
            <summary>
            Value of variable $UI_INUSER
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.uiPostype">
            <summary>
            Value of variable $UI_POSTYPE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.uiQuickmen">
            <summary>
            Value of variable $UI_QUICKMEN
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.uiScreen">
            <summary>
            Value of variable $UI_SCREEN
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.uiState">
            <summary>
            Value of variable $UI_STATE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.uiUserscrn">
            <summary>
            Value of variable $UI_USERSCRN
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.uopCrm5">
            <summary>
            Value of variable $UOP_CRM5
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.update">
            <summary>
            Value of variable $UPDATE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.useuframe">
            <summary>
            Value of variable $USEUFRAME
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.usrtolAbrt">
            <summary>
            Value of variable $USRTOL_ABRT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.usrtolEnb">
            <summary>
            Value of variable $USRTOL_ENB
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.usrtolMsk">
            <summary>
            Value of variable $USRTOL_MSK
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.usrtolName">
            <summary>
            Value of variable $USRTOL_NAME
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.usrEvnt">
            <summary>
            Value of variable $USR_EVNT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.visiontmout">
            <summary>
            Value of variable $VISIONTMOUT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.waitrelease">
            <summary>
            Value of variable $WAITRELEASE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.waittmout">
            <summary>
            Value of variable $WAITTMOUT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.waitActive">
            <summary>
            Value of variable $WAIT_ACTIVE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.waitRdisp">
            <summary>
            Value of variable $WAIT_RDISP
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.SystemFile.zzz">
            <summary>
            Value of variable $ZZZ
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.Files.SysuifFile">
            <summary>
            Describes the Fanuc variable file sysuif.va
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.SysuifFile.#ctor">
            <summary>
            Creates a new instance of SysuifFile that describes the Fanuc variable file sysuif.va
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.Files.TpsnapFile">
            <summary>
            Describes the Fanuc variable file tpsnap.va
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.TpsnapFile.#ctor">
            <summary>
            Creates a new instance of TpsnapFile that describes the Fanuc variable file tpsnap.va
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.TpsnapFile.Day">
            <summary>
            Value of variable DAY
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.TpsnapFile.DayStr">
            <summary>
            Value of variable DAY_STR
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.TpsnapFile.DevPathStr">
            <summary>
            Value of variable DEV_PATH_STR
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.TpsnapFile.DevStr">
            <summary>
            Value of variable DEV_STR
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.TpsnapFile.Entry">
            <summary>
            Value of variable ENTRY
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.TpsnapFile.Hour">
            <summary>
            Value of variable HOUR
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.TpsnapFile.HourStr">
            <summary>
            Value of variable HOUR_STR
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.TpsnapFile.LangStr">
            <summary>
            Value of variable LANG_STR
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.TpsnapFile.Min">
            <summary>
            Value of variable MIN
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.TpsnapFile.MinStr">
            <summary>
            Value of variable MIN_STR
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.TpsnapFile.Month">
            <summary>
            Value of variable MONTH
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.TpsnapFile.MonthStr">
            <summary>
            Value of variable MONTH_STR
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.TpsnapFile.PngStr">
            <summary>
            Value of variable PNG_STR
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.TpsnapFile.Sec">
            <summary>
            Value of variable SEC
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.TpsnapFile.SecStr">
            <summary>
            Value of variable SEC_STR
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.TpsnapFile.Status">
            <summary>
            Value of variable STATUS
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.TpsnapFile.TimeInt">
            <summary>
            Value of variable TIME_INT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.TpsnapFile.TimeStr">
            <summary>
            Value of variable TIME_STR
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.TpsnapFile.TimeStr2">
            <summary>
            Value of variable TIME_STR2
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.TpsnapFile.TInt">
            <summary>
            Value of variable T_INT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.TpsnapFile.TStr">
            <summary>
            Value of variable T_STR
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.TpsnapFile.Year">
            <summary>
            Value of variable YEAR
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.TpsnapFile.YearStr">
            <summary>
            Value of variable YEAR_STR
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.Files.VcmrinitFile">
            <summary>
            Describes the Fanuc variable file vcmrinit.va
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Files.VcmrinitFile.#ctor">
            <summary>
            Creates a new instance of VcmrinitFile that describes the Fanuc variable file vcmrinit.va
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.VcmrinitFile.SelectGrp">
            <summary>
            Value of variable SELECT_GRP
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.VcmrinitFile.ArgStr">
            <summary>
            Value of variable ARG_STR
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.VcmrinitFile.DataType">
            <summary>
            Value of variable DATA_TYPE
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.VcmrinitFile.DmyInt">
            <summary>
            Value of variable DMY_INT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.VcmrinitFile.DmyReal">
            <summary>
            Value of variable DMY_REAL
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.VcmrinitFile.DmyStr">
            <summary>
            Value of variable DMY_STR
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.VcmrinitFile.DmyStat">
            <summary>
            Value of variable DMY_STAT
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.VcmrinitFile.ParamVal">
            <summary>
            Value of variable PARAM_VAL
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.VcmrinitFile.PrmSetDone">
            <summary>
            Value of variable PRM_SET_DONE
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.Files.JointsPosition">
            <summary>
            Joint position in degrees
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.Files.KnownFiles">
            <summary>
            Provides functions to read and decode Fanuc FTP files
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.KnownFiles.Diagnostic">
            <summary>
            Provides functions to read and decode Fanuc FTP diagnostic files *.dg
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Files.KnownFiles.Variables">
            <summary>
            Provides functions to read and decode Fanuc FTP variable files *.va
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.Files.DiagnosticFiles">
            <summary>
            Provides functions to read and decode Fanuc FTP diagnostic files *.dg
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient">
            <summary>
            FTP Control Connection. Speaks the FTP protocol with the server and
            provides facilities for performing transactions.
            
            Debugging problems with FTP transactions is much easier to do when
            you can see exactly what is sent to the server and the reply 
            UnderAutomation.Fanuc.Ftp.FluentFTP gets in return. Please review the Debug example
            below for information on how to add <see cref="T:System.Diagnostics.TraceListener"/>s for capturing
            the conversation between UnderAutomation.Fanuc.Ftp.FluentFTP and the server.
            </summary>
            <example>The following example illustrates how to assist in debugging
            UnderAutomation.Fanuc.Ftp.FluentFTP by getting a transaction log from the server.
            <code source="..\Examples\Debug.cs" lang="cs" />
            </example>
            <example>The following example demonstrates adding a custom file
            listing parser in the event that you encounter a list format
            not already supported.
            <code source="..\Examples\CustomParser.cs" lang="cs" />
            </example>
            <example>The following example demonstrates how to validate
            a SSL certificate when using SSL/TLS.
            <code source="..\Examples\ValidateCertificate.cs" lang="cs" />
            </example>
            <example>The following example demonstrates how to download a file.
            <code source="..\Examples\OpenRead.cs" lang="cs" />
            </example>
            <example>The following example demonstrates how to download a file
            using a URI object.
            <code source="..\Examples\OpenReadURI.cs" lang="cs" />
            </example>
            <example>The following example demonstrates how to upload a file.
            <code source="..\Examples\OpenWrite.cs" lang="cs" />
            </example>
            <example>The following example demonstrates how to upload a file
            using a URI object.
            <code source="..\Examples\OpenWriteURI.cs" lang="cs" />
            </example>
            <example>The following example demonstrates how to append to a file.
            <code source="..\Examples\OpenAppend.cs" lang="cs" />
            </example>
            <example>The following example demonstrates how to append to a file
            using a URI object.
            <code source="..\Examples\OpenAppendURI.cs" lang="cs" />
            </example>
            <example>The following example demonstrates how to get a file
            listing from the server.
            <code source="..\Examples\GetListing.cs" lang="cs" />
            </example>
            <summary>
            FTP Control Connection. Speaks the FTP protocol with the server and
            provides facilities for performing transactions.
            
            Debugging problems with FTP transactions is much easier to do when
            you can see exactly what is sent to the server and the reply 
            UnderAutomation.Fanuc.Ftp.FluentFTP gets in return. Please review the Debug example
            below for information on how to add <see cref="T:System.Diagnostics.TraceListener"/>s for capturing
            the conversation between UnderAutomation.Fanuc.Ftp.FluentFTP and the server.
            </summary>
            <example>The following example illustrates how to assist in debugging
            UnderAutomation.Fanuc.Ftp.FluentFTP by getting a transaction log from the server.
            <code source="..\Examples\Debug.cs" lang="cs" />
            </example>
            <example>The following example demonstrates adding a custom file
            listing parser in the event that you encounter a list format
            not already supported.
            <code source="..\Examples\CustomParser.cs" lang="cs" />
            </example>
            <example>The following example demonstrates how to validate
            a SSL certificate when using SSL/TLS.
            <code source="..\Examples\ValidateCertificate.cs" lang="cs" />
            </example>
            <example>The following example demonstrates how to download a file.
            <code source="..\Examples\OpenRead.cs" lang="cs" />
            </example>
            <example>The following example demonstrates how to download a file
            using a URI object.
            <code source="..\Examples\OpenReadURI.cs" lang="cs" />
            </example>
            <example>The following example demonstrates how to upload a file.
            <code source="..\Examples\OpenWrite.cs" lang="cs" />
            </example>
            <example>The following example demonstrates how to upload a file
            using a URI object.
            <code source="..\Examples\OpenWriteURI.cs" lang="cs" />
            </example>
            <example>The following example demonstrates how to append to a file.
            <code source="..\Examples\OpenAppend.cs" lang="cs" />
            </example>
            <example>The following example demonstrates how to append to a file
            using a URI object.
            <code source="..\Examples\OpenAppendURI.cs" lang="cs" />
            </example>
            <example>The following example demonstrates how to get a file
            listing from the server.
            <code source="..\Examples\GetListing.cs" lang="cs" />
            </example>
            <summary>
            FTP Control Connection. Speaks the FTP protocol with the server and
            provides facilities for performing transactions.
            
            Debugging problems with FTP transactions is much easier to do when
            you can see exactly what is sent to the server and the reply 
            UnderAutomation.Fanuc.Ftp.FluentFTP gets in return. Please review the Debug example
            below for information on how to add <see cref="T:System.Diagnostics.TraceListener"/>s for capturing
            the conversation between UnderAutomation.Fanuc.Ftp.FluentFTP and the server.
            </summary>
            <example>The following example illustrates how to assist in debugging
            UnderAutomation.Fanuc.Ftp.FluentFTP by getting a transaction log from the server.
            <code source="..\Examples\Debug.cs" lang="cs" />
            </example>
            <example>The following example demonstrates adding a custom file
            listing parser in the event that you encounter a list format
            not already supported.
            <code source="..\Examples\CustomParser.cs" lang="cs" />
            </example>
            <example>The following example demonstrates how to validate
            a SSL certificate when using SSL/TLS.
            <code source="..\Examples\ValidateCertificate.cs" lang="cs" />
            </example>
            <example>The following example demonstrates how to download a file.
            <code source="..\Examples\OpenRead.cs" lang="cs" />
            </example>
            <example>The following example demonstrates how to download a file
            using a URI object.
            <code source="..\Examples\OpenReadURI.cs" lang="cs" />
            </example>
            <example>The following example demonstrates how to upload a file.
            <code source="..\Examples\OpenWrite.cs" lang="cs" />
            </example>
            <example>The following example demonstrates how to upload a file
            using a URI object.
            <code source="..\Examples\OpenWriteURI.cs" lang="cs" />
            </example>
            <example>The following example demonstrates how to append to a file.
            <code source="..\Examples\OpenAppend.cs" lang="cs" />
            </example>
            <example>The following example demonstrates how to append to a file
            using a URI object.
            <code source="..\Examples\OpenAppendURI.cs" lang="cs" />
            </example>
            <example>The following example demonstrates how to get a file
            listing from the server.
            <code source="..\Examples\GetListing.cs" lang="cs" />
            </example>
            <summary>
            FTP Control Connection. Speaks the FTP protocol with the server and
            provides facilities for performing transactions.
            
            Debugging problems with FTP transactions is much easier to do when
            you can see exactly what is sent to the server and the reply 
            UnderAutomation.Fanuc.Ftp.FluentFTP gets in return. Please review the Debug example
            below for information on how to add <see cref="T:System.Diagnostics.TraceListener"/>s for capturing
            the conversation between UnderAutomation.Fanuc.Ftp.FluentFTP and the server.
            </summary>
            <example>The following example illustrates how to assist in debugging
            UnderAutomation.Fanuc.Ftp.FluentFTP by getting a transaction log from the server.
            <code source="..\Examples\Debug.cs" lang="cs" />
            </example>
            <example>The following example demonstrates adding a custom file
            listing parser in the event that you encounter a list format
            not already supported.
            <code source="..\Examples\CustomParser.cs" lang="cs" />
            </example>
            <example>The following example demonstrates how to validate
            a SSL certificate when using SSL/TLS.
            <code source="..\Examples\ValidateCertificate.cs" lang="cs" />
            </example>
            <example>The following example demonstrates how to download a file.
            <code source="..\Examples\OpenRead.cs" lang="cs" />
            </example>
            <example>The following example demonstrates how to download a file
            using a URI object.
            <code source="..\Examples\OpenReadURI.cs" lang="cs" />
            </example>
            <example>The following example demonstrates how to upload a file.
            <code source="..\Examples\OpenWrite.cs" lang="cs" />
            </example>
            <example>The following example demonstrates how to upload a file
            using a URI object.
            <code source="..\Examples\OpenWriteURI.cs" lang="cs" />
            </example>
            <example>The following example demonstrates how to append to a file.
            <code source="..\Examples\OpenAppend.cs" lang="cs" />
            </example>
            <example>The following example demonstrates how to append to a file
            using a URI object.
            <code source="..\Examples\OpenAppendURI.cs" lang="cs" />
            </example>
            <example>The following example demonstrates how to get a file
            listing from the server.
            <code source="..\Examples\GetListing.cs" lang="cs" />
            </example>
            <summary>
            FTP Control Connection. Speaks the FTP protocol with the server and
            provides facilities for performing transactions.
            
            Debugging problems with FTP transactions is much easier to do when
            you can see exactly what is sent to the server and the reply 
            UnderAutomation.Fanuc.Ftp.FluentFTP gets in return. Please review the Debug example
            below for information on how to add <see cref="T:System.Diagnostics.TraceListener"/>s for capturing
            the conversation between UnderAutomation.Fanuc.Ftp.FluentFTP and the server.
            </summary>
            <example>The following example illustrates how to assist in debugging
            UnderAutomation.Fanuc.Ftp.FluentFTP by getting a transaction log from the server.
            <code source="..\Examples\Debug.cs" lang="cs" />
            </example>
            <example>The following example demonstrates adding a custom file
            listing parser in the event that you encounter a list format
            not already supported.
            <code source="..\Examples\CustomParser.cs" lang="cs" />
            </example>
            <example>The following example demonstrates how to validate
            a SSL certificate when using SSL/TLS.
            <code source="..\Examples\ValidateCertificate.cs" lang="cs" />
            </example>
            <example>The following example demonstrates how to download a file.
            <code source="..\Examples\OpenRead.cs" lang="cs" />
            </example>
            <example>The following example demonstrates how to download a file
            using a URI object.
            <code source="..\Examples\OpenReadURI.cs" lang="cs" />
            </example>
            <example>The following example demonstrates how to upload a file.
            <code source="..\Examples\OpenWrite.cs" lang="cs" />
            </example>
            <example>The following example demonstrates how to upload a file
            using a URI object.
            <code source="..\Examples\OpenWriteURI.cs" lang="cs" />
            </example>
            <example>The following example demonstrates how to append to a file.
            <code source="..\Examples\OpenAppend.cs" lang="cs" />
            </example>
            <example>The following example demonstrates how to append to a file
            using a URI object.
            <code source="..\Examples\OpenAppendURI.cs" lang="cs" />
            </example>
            <example>The following example demonstrates how to get a file
            listing from the server.
            <code source="..\Examples\GetListing.cs" lang="cs" />
            </example>
            <summary>
            FTP Control Connection. Speaks the FTP protocol with the server and
            provides facilities for performing transactions.
            
            Debugging problems with FTP transactions is much easier to do when
            you can see exactly what is sent to the server and the reply 
            UnderAutomation.Fanuc.Ftp.FluentFTP gets in return. Please review the Debug example
            below for information on how to add <see cref="T:System.Diagnostics.TraceListener"/>s for capturing
            the conversation between UnderAutomation.Fanuc.Ftp.FluentFTP and the server.
            </summary>
            <example>The following example illustrates how to assist in debugging
            UnderAutomation.Fanuc.Ftp.FluentFTP by getting a transaction log from the server.
            <code source="..\Examples\Debug.cs" lang="cs" />
            </example>
            <example>The following example demonstrates adding a custom file
            listing parser in the event that you encounter a list format
            not already supported.
            <code source="..\Examples\CustomParser.cs" lang="cs" />
            </example>
            <example>The following example demonstrates how to validate
            a SSL certificate when using SSL/TLS.
            <code source="..\Examples\ValidateCertificate.cs" lang="cs" />
            </example>
            <example>The following example demonstrates how to download a file.
            <code source="..\Examples\OpenRead.cs" lang="cs" />
            </example>
            <example>The following example demonstrates how to download a file
            using a URI object.
            <code source="..\Examples\OpenReadURI.cs" lang="cs" />
            </example>
            <example>The following example demonstrates how to upload a file.
            <code source="..\Examples\OpenWrite.cs" lang="cs" />
            </example>
            <example>The following example demonstrates how to upload a file
            using a URI object.
            <code source="..\Examples\OpenWriteURI.cs" lang="cs" />
            </example>
            <example>The following example demonstrates how to append to a file.
            <code source="..\Examples\OpenAppend.cs" lang="cs" />
            </example>
            <example>The following example demonstrates how to append to a file
            using a URI object.
            <code source="..\Examples\OpenAppendURI.cs" lang="cs" />
            </example>
            <example>The following example demonstrates how to get a file
            listing from the server.
            <code source="..\Examples\GetListing.cs" lang="cs" />
            </example>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.m_lock">
            <summary>
            Used for internally synchronizing access to this
            object from multiple threads
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.Lock">
            <summary>
            For usage by FTP proxies only
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.m_asyncmethods">
            <summary>
            A list of asynchronous methods that are in progress
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.m_stream">
            <summary>
            Control connection socket stream
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.IsDisposed">
            <summary>
            Gets a value indicating if this object has already been disposed.
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BaseStream">
            <summary>
            Gets the base stream for talking to the server via
            the control connection.
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.InternetProtocolVersions">
            <summary>
            Flags specifying which versions of the internet protocol to
            support when making a connection. All addresses returned during
            name resolution are tried until a successful connection is made.
            You can fine tune which versions of the internet protocol to use
            by adding or removing flags here. I.e., setting this property
            to FtpIpVersion.IPv4 will cause the connection process to
            ignore IPv6 addresses. The default value is ANY version.
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.SocketPollInterval">
            <summary>
            Gets or sets the length of time in milliseconds
            that must pass since the last socket activity
            before calling <see cref="M:System.Net.Sockets.Socket.Poll(System.Int32,System.Net.Sockets.SelectMode)"/> 
            on the socket to test for connectivity. 
            Setting this interval too low will
            have a negative impact on performance. Setting this
            interval to 0 disables Polling all together.
            The default value is 15 seconds.
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.StaleDataCheck">
            <summary>
            Gets or sets a value indicating whether a test should be performed to
            see if there is stale (unrequested data) sitting on the socket. In some
            cases the control connection may time out but before the server closes
            the connection it might send a 4xx response that was unexpected and
            can cause synchronization errors with transactions. To avoid this
            problem the <see cref="o:Execute"/> method checks to see if there is any data
            available on the socket before executing a command. On Azure hosting
            platforms this check can cause an exception to be thrown. In order
            to work around the exception you can set this property to false
            which will skip the test entirely however doing so eliminates the
            best effort attempt of detecting such scenarios. See this thread
            for more details about the Azure problem:
            https://netftp.codeplex.com/discussions/535879
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.IsConnected">
            <summary>
            Gets a value indicating if the connection is alive
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.EnableThreadSafeDataConnections">
            <summary>
            When this value is set to true (default) the control connection
            is cloned and a new connection the server is established for the
            data channel operation. This is a thread safe approach to make
            asynchronous operations on a single control connection transparent
            to the developer.
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.IsClone">
            <summary>
            Gets a value indicating if this control connection is a clone. This property
            is used with data streams to determine if the connection should be closed
            when the stream is closed. Servers typically only allow 1 data connection
            per control connection. If you try to open multiple data connections this
            object will be cloned for 2 or more resulting in N new connections to the
            server.
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.Encoding">
            <summary>
            Gets or sets the text encoding being used when talking with the server. The default
            value is <see cref="P:System.Text.Encoding.ASCII"/> however upon connection, the client checks
            for UTF8 support and if it's there this property is switched over to
            <see cref="P:System.Text.Encoding.UTF8"/>. Manually setting this value overrides automatic detection
            based on the FEAT list; if you change this value it's always used
            regardless of what the server advertises, if anything.
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.Host">
            <summary>
            The server to connect to
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.Port">
            <summary>
            The port to connect to. If this value is set to 0 (Default) the port used
            will be determined by the type of SSL used or if no SSL is to be used it 
            will automatically connect to port 21.
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.Credentials">
            <summary>
            Credentials used for authentication
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.MaximumDereferenceCount">
            <summary>
            Gets or sets a value that controls the maximum depth
            of recursion that <see cref="o:DereferenceLink"/> will follow symbolic
            links before giving up. You can also specify the value
            to be used as one of the overloaded parameters to the
            <see cref="o:DereferenceLink"/> method. The default value is 20. Specifying
            -1 here means indefinitely try to resolve a link. This is
            not recommended for obvious reasons (stack overflow).
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.ClientCertificates">
            <summary>
            Client certificates to be used in SSL authentication process
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.AddressResolver">
            <summary>
            Delegate used for resolving local address, used for active data connections
            This can be used in case you're behind a router, but port forwarding is configured to forward the
            ports from your router to your internal IP. In that case, we need to send the router's IP instead of our internal IP.
            See example: FtpClient.GetPublicIP -> This uses Ipify api to find external IP
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.ActivePorts">
            <summary>
            Ports used for Active Data Connection
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.DataConnectionType">
            <summary>
            Data connection type, default is AutoPassive which tries
            a connection with EPSV first and if it fails then tries
            PASV before giving up. If you know exactly which kind of
            connection you need you can slightly increase performance
            by defining a specific type of passive or active data
            connection here.
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.UngracefullDisconnection">
            <summary>
            Disconnect from the server without sending QUIT. This helps
            work around IOExceptions caused by buggy connection resets
            when closing the control connection.
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.ConnectTimeout">
            <summary>
            Gets or sets the length of time in milliseconds to wait for a connection 
            attempt to succeed before giving up. Default is 15000 (15 seconds).
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.ReadTimeout">
            <summary>
            Gets or sets the length of time wait in milliseconds for data to be
            read from the underlying stream. The default value is 15000 (15 seconds).
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.DataConnectionConnectTimeout">
            <summary>
            Gets or sets the length of time in milliseconds for a data connection
            to be established before giving up. Default is 15000 (15 seconds).
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.DataConnectionReadTimeout">
            <summary>
            Gets or sets the length of time in milliseconds the data channel
            should wait for the server to send data. Default value is 
            15000 (15 seconds).
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.SocketKeepAlive">
            <summary>
            Gets or sets a value indicating if <see cref="F:System.Net.Sockets.SocketOptionName.KeepAlive"/> should be set on 
            the underlying stream's socket. If the connection is alive, the option is
            adjusted in real-time. The value is stored and the KeepAlive option is set
            accordingly upon any new connections. The value set here is also applied to
            all future data streams. It has no affect on cloned control connections or
            data connections already in progress. The default value is false.
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.Capabilities">
            <summary>
            Gets the server capabilities represented by flags
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.HashAlgorithms">
            <summary>
            Get the hash types supported by the server, if any. This
            is a recent extension to the protocol that is not fully
            standardized and is not guaranteed to work. See here for
            more details:
            http://tools.ietf.org/html/draft-bryan-ftpext-hash-02
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.EncryptionMode">
            <summary>
            Type of SSL to use, or none. Default is none. Explicit is TLS, Implicit is SSL.
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.DataConnectionEncryption">
            <summary>
            Indicates if data channel transfers should be encrypted. Only valid if <see cref="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.EncryptionMode"/>
            property is not equal to <see cref="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpEncryptionMode.None"/>.
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.PlainTextEncryption">
            <summary>
            Indicates if the encryption should be disabled immediately after connecting using a CCC command.
            This is useful when you have a FTP firewall that requires plaintext FTP, but your server mandates FTPS connections.
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.SslProtocols">
            <summary>
            Encryption protocols to use. Only valid if EncryptionMode property is not equal to <see cref="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpEncryptionMode.None"/>.
            Default value is .NET Framework defaults from the <see cref="T:System.Net.Security.SslStream"/> class.
            </summary>
        </member>
        <member name="E:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.ValidateCertificate">
            <summary>
            Event is fired to validate SSL certificates. If this event is
            not handled and there are errors validating the certificate
            the connection will be aborted.
            </summary>
            <example><code source="..\Examples\ValidateCertificate.cs" lang="cs" /></example>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.SystemType">
            <summary>
            Gets the type of system/server that we're connected to. Typically begins with "WINDOWS" or "UNIX".
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.ServerType">
            <summary>
            Gets the type of the FTP server software that we're connected to.
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.ConnectionType">
            <summary> Gets the connection type </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.LastReply">
            <summary> Gets the last reply recieved from the server</summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.#ctor">
            <summary>
            Creates a new instance of an FTP Client.
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.#ctor(System.String)">
            <summary>
            Creates a new instance of an FTP Client, with the given host.
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.#ctor(System.String,System.Net.NetworkCredential)">
            <summary>
            Creates a new instance of an FTP Client, with the given host and credentials.
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.#ctor(System.String,System.Int32,System.Net.NetworkCredential)">
            <summary>
            Creates a new instance of an FTP Client, with the given host, port and credentials.
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Creates a new instance of an FTP Client, with the given host, username and password.
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.#ctor(System.String,System.Int32,System.String,System.String)">
            <summary>
            Creates a new instance of an FTP Client, with the given host, port, username and password.
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.Create">
            <summary>
            Creates a new instance of this class. Useful in FTP proxy classes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.Dispose">
            <summary>
            Disconnects from the server, releases resources held by this
            object.
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.CloneConnection">
            <summary>
            Clones the control connection for opening multiple data streams
            </summary>
            <returns>A new control connection with the same property settings as this one</returns>
            <example><code source="..\Examples\CloneConnection.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.Execute(System.String)">
            <summary>
            Executes a command
            </summary>
            <param name="command">The command to execute</param>
            <returns>The servers reply to the command</returns>
            <example><code source="..\Examples\Execute.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginExecute(System.String,System.AsyncCallback,System.Object)">
            <summary>
            Performs execution of the specified command asynchronously
            </summary>
            <param name="command">The command to execute</param>
            <param name="callback">The <see cref="T:System.AsyncCallback"/> method</param>
            <param name="state">State object</param>
            <returns>IAsyncResult</returns>
            <example><code source="..\Examples\BeginExecute.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.EndExecute(System.IAsyncResult)">
            <summary>
            Ends an asynchronous command
            </summary>
            <param name="ar">IAsyncResult returned from BeginExecute</param>
            <returns>FtpReply object (never null).</returns>
            <example><code source="..\Examples\BeginExecute.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.GetReply">
            <summary>
            Retrieves a reply from the server. Do not execute this method
            unless you are sure that a reply has been sent, i.e., you
            executed a command. Doing so will cause the code to hang
            indefinitely waiting for a server reply that is never coming.
            </summary>
            <returns>FtpReply representing the response from the server</returns>
            <example><code source="..\Examples\BeginGetReply.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.Connect">
            <summary>
            Connect to the server
            </summary>
            <exception cref="T:System.ObjectDisposedException">Thrown if this object has been disposed.</exception>
            <example><code source="..\Examples\Connect.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.Connect(UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSocketStream)">
            <summary>
            Connect to the FTP server. Overwritten in proxy classes.
            </summary>
            <param name="stream"></param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.Connect(UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSocketStream,System.String,System.Int32,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpIpVersion)">
            <summary>
            Connect to the FTP server. Overwritten in proxy classes.
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.Handshake">
            <summary>
            Called during Connect(). Typically extended by FTP proxies.
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.GetFeatures(UnderAutomation.Fanuc.Ftp.FluentFTP.FtpReply)">
            <summary>
            Populates the capabilities flags based on capabilities
            supported by this server. This method is overridable
            so that new features can be supported
            </summary>
            <param name="reply">The reply object from the FEAT command. The InfoMessages property will
            contain a list of the features the server supported delimited by a new line '\n' character.</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginConnect(System.AsyncCallback,System.Object)">
            <summary>
            Initiates a connection to the server
            </summary>
            <param name="callback">AsyncCallback method</param>
            <param name="state">State object</param>
            <returns>IAsyncResult</returns>
            <example><code source="..\Examples\BeginConnect.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.EndConnect(System.IAsyncResult)">
            <summary>
            Ends an asynchronous connection attempt to the server from <see cref="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginConnect(System.AsyncCallback,System.Object)"/>
            </summary>
            <param name="ar"><see cref="T:System.IAsyncResult"/> returned from <see cref="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginConnect(System.AsyncCallback,System.Object)"/></param>
            <example><code source="..\Examples\BeginConnect.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.DetectFtpServer">
            <summary>
            Detect the FTP Server based on the welcome message sent by the server after getting the 220 connection command.
            Its the primary method.
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.DetectFtpServerBySyst">
            <summary>
            Detect the FTP Server based on the response to the SYST connection command.
            Its a fallback method if the server did not send an identifying welcome message.
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.Authenticate">
            <summary>
            Performs a login on the server. This method is overridable so
            that the login procedure can be changed to support, for example,
            a FTP proxy.
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.Authenticate(System.String,System.String)">
            <summary>
            Performs a login on the server. This method is overridable so
            that the login procedure can be changed to support, for example,
            a FTP proxy.
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.Disconnect">
            <summary>
            Disconnects from the server
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginDisconnect(System.AsyncCallback,System.Object)">
            <summary>
            Initiates a disconnection on the server
            </summary>
            <param name="callback"><see cref="T:System.AsyncCallback"/> method</param>
            <param name="state">State object</param>
            <returns>IAsyncResult</returns>
            <example><code source="..\Examples\BeginDisconnect.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.EndDisconnect(System.IAsyncResult)">
            <summary>
            Ends a call to <see cref="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginDisconnect(System.AsyncCallback,System.Object)"/>
            </summary>
            <param name="ar"><see cref="T:System.IAsyncResult"/> returned from <see cref="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginDisconnect(System.AsyncCallback,System.Object)"/></param>
            <example><code source="..\Examples\BeginConnect.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.FireValidateCertficate(UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSocketStream,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSslValidationEventArgs)">
            <summary>
            Catches the socket stream ssl validation event and fires the event handlers
            attached to this object for validating SSL certificates
            </summary>
            <param name="stream">The stream that fired the event</param>
            <param name="e">The event args used to validate the certificate</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.OnValidateCertficate(UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSslValidationEventArgs)">
            <summary>
            Fires the SSL validation event
            </summary>
            <param name="e">Event Args</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.HasFeature(UnderAutomation.Fanuc.Ftp.FluentFTP.FtpCapability)">
            <summary>
            Performs a bitwise and to check if the specified
            flag is set on the <see cref="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.Capabilities"/>  property.
            </summary>
            <param name="cap">The <see cref="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpCapability"/> to check for</param>
            <returns>True if the feature was found, false otherwise</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.GetAsyncDelegate``1(System.IAsyncResult)">
            <summary>
            Retrieves the delegate for the specified IAsyncResult and removes
            it from the m_asyncmethods collection if the operation is successful
            </summary>
            <typeparam name="T">Type of delegate to retrieve</typeparam>
            <param name="ar">The IAsyncResult to retrieve the delegate for</param>
            <returns>The delegate that generated the specified IAsyncResult</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.GetAbsolutePath(System.String)">
            <summary>
            Ensure a relative path is absolute by appending the working dir
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.DisableUTF8">
            <summary>
            Disables UTF8 support and changes the Encoding property
            back to ASCII. If the server returns an error when trying
            to turn UTF8 off a FtpCommandException will be thrown.
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.ReadStaleData(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Data shouldn't be on the socket, if it is it probably
            means we've been disconnected. Read and discard
            whatever is there and close the connection (optional).
            </summary>
            <param name="closeStream">close the connection?</param>
            <param name="evenEncrypted">even read encrypted data?</param>
            <param name="traceData">trace data to logs?</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.CalcChmod(UnderAutomation.Fanuc.Ftp.FluentFTP.FtpPermission,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpPermission,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpPermission)">
            <summary>
            Calculate the CHMOD integer value given a set of permissions.
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.Connect(System.Uri,System.Boolean)">
            <summary>
            Connects to the specified URI. If the path specified by the URI ends with a
            / then the working directory is changed to the path specified.
            </summary>
            <param name="uri">The URI to parse</param>
            <param name="checkcertificate">Indicates if a ssl certificate should be validated when using FTPS schemes</param>
            <returns>FtpClient object</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.Connect(System.Uri)">
            <summary>
            Connects to the specified URI. If the path specified by the URI ends with a
            / then the working directory is changed to the path specified.
            </summary>
            <param name="uri">The URI to parse</param>
            <returns>FtpClient object</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.OpenRead(System.Uri,System.Boolean,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDataType,System.Int64)">
            <summary>
            Opens a stream to the file specified by the URI
            </summary>
            <param name="uri">FTP/FTPS URI pointing at a file</param>
            <param name="checkcertificate">Indicates if a ssl certificate should be validated when using FTPS schemes</param>
            <param name="datatype">ASCII/Binary mode</param>
            <param name="restart">Restart location</param>
            <returns>Stream object</returns>
            <example><code source="..\Examples\OpenReadURI.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.OpenRead(System.Uri,System.Boolean,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDataType)">
            <summary>
            Opens a stream to the file specified by the URI
            </summary>
            <param name="uri">FTP/FTPS URI pointing at a file</param>
            <param name="checkcertificate">Indicates if a ssl certificate should be validated when using FTPS schemes</param>
            <param name="datatype">ASCII/Binary mode</param>
            <returns>Stream object</returns>
            <example><code source="..\Examples\OpenReadURI.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.OpenRead(System.Uri,System.Boolean)">
            <summary>
            Opens a stream to the file specified by the URI
            </summary>
            <param name="uri">FTP/FTPS URI pointing at a file</param>
            <param name="checkcertificate">Indicates if a ssl certificate should be validated when using FTPS schemes</param>
            <returns>Stream object</returns>
            <example><code source="..\Examples\OpenReadURI.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.OpenRead(System.Uri)">
            <summary>
            Opens a stream to the file specified by the URI
            </summary>
            <param name="uri">FTP/FTPS URI pointing at a file</param>
            <returns>Stream object</returns>
            <example><code source="..\Examples\OpenReadURI.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.OpenWrite(System.Uri,System.Boolean,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDataType)">
            <summary>
            Opens a stream to the file specified by the URI
            </summary>
            <param name="uri">FTP/FTPS URI pointing at a file</param>
            <param name="checkcertificate">Indicates if a ssl certificate should be validated when using FTPS schemes</param>
            <param name="datatype">ASCII/Binary mode</param> 
            <returns>Stream object</returns>
            <example><code source="..\Examples\OpenWriteURI.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.OpenWrite(System.Uri,System.Boolean)">
            <summary>
            Opens a stream to the file specified by the URI
            </summary>
            <param name="uri">FTP/FTPS URI pointing at a file</param>
            <param name="checkcertificate">Indicates if a ssl certificate should be validated when using FTPS schemes</param>
            <returns>Stream object</returns>
            <example><code source="..\Examples\OpenWriteURI.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.OpenWrite(System.Uri)">
            <summary>
            Opens a stream to the file specified by the URI
            </summary>
            <param name="uri">FTP/FTPS URI pointing at a file</param>
            <returns>Stream object</returns>
            <example><code source="..\Examples\OpenWriteURI.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.OpenAppend(System.Uri,System.Boolean,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDataType)">
            <summary>
            Opens a stream to the file specified by the URI
            </summary>
            <param name="uri">FTP/FTPS URI pointing at a file</param>
            <param name="checkcertificate">Indicates if a ssl certificate should be validated when using FTPS schemes</param>
            <param name="datatype">ASCII/Binary mode</param>
            <returns>Stream object</returns>
            <example><code source="..\Examples\OpenAppendURI.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.OpenAppend(System.Uri,System.Boolean)">
            <summary>
            Opens a stream to the file specified by the URI
            </summary>
            <param name="uri">FTP/FTPS URI pointing at a file</param>
            <param name="checkcertificate">Indicates if a ssl certificate should be validated when using FTPS schemes</param>
            <returns>Stream object</returns>
            <example><code source="..\Examples\OpenAppendURI.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.OpenAppend(System.Uri)">
            <summary>
            Opens a stream to the file specified by the URI
            </summary>
            <param name="uri">FTP/FTPS URI pointing at a file</param>
            <returns>Stream object</returns>
            <example><code source="..\Examples\OpenAppendURI.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.GetPublicIP">
            <summary>
            Calculate you public internet IP using the ipify service. Returns null if cannot be calculated.
            </summary>
            <returns>Public IP Address</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.GetHashAlgorithm">
            <summary>
            Gets the currently selected hash algorithm for the HASH command.
            </summary>
            <remarks>
             This feature is experimental. See this link for details:
            http://tools.ietf.org/html/draft-bryan-ftpext-hash-02
            </remarks>
            <returns>The <see cref="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpHashAlgorithm"/> flag or <see cref="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpHashAlgorithm.NONE"/> if there was a problem.</returns>
            <example><code source="..\Examples\GetHashAlgorithm.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginGetHashAlgorithm(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to get the currently selected hash algorithm for the HASH command.
            </summary>
            <remarks>
             This feature is experimental. See this link for details:
            http://tools.ietf.org/html/draft-bryan-ftpext-hash-02
            </remarks>
            <param name="callback">Async callback</param>
            <param name="state">State object</param>
            <returns>IAsyncResult</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.EndGetHashAlgorithm(System.IAsyncResult)">
            <summary>
            Ends a call to <see cref="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginGetHashAlgorithm(System.AsyncCallback,System.Object)"/>
            </summary>
            <param name="ar">IAsyncResult returned from <see cref="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginGetHashAlgorithm(System.AsyncCallback,System.Object)"/></param>
            <returns>The <see cref="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpHashAlgorithm"/> flag or <see cref="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpHashAlgorithm.NONE"/> if there was a problem.</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.SetHashAlgorithm(UnderAutomation.Fanuc.Ftp.FluentFTP.FtpHashAlgorithm)">
            <summary>
            Sets the hash algorithm on the server to use for the HASH command. 
            </summary>
            <remarks>
            If you specify an algorithm not listed in <see cref="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.HashAlgorithms"/>
            a <see cref="T:System.NotImplementedException"/> will be thrown
            so be sure to query that list of Flags before
            selecting a hash algorithm. Support for the
            HASH command is experimental. Please see
            the following link for more details:
            http://tools.ietf.org/html/draft-bryan-ftpext-hash-02
            </remarks>
            <param name="type">Hash Algorithm</param>
            <exception cref="T:System.NotImplementedException">Thrown if the selected algorithm is not available on the server</exception>
            <example><code source="..\Examples\SetHashAlgorithm.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginSetHashAlgorithm(UnderAutomation.Fanuc.Ftp.FluentFTP.FtpHashAlgorithm,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to set the hash algorithm on the server to use for the HASH command. 
            </summary>
            <remarks>
            If you specify an algorithm not listed in <see cref="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.HashAlgorithms"/>
            a <see cref="T:System.NotImplementedException"/> will be thrown
            so be sure to query that list of Flags before
            selecting a hash algorithm. Support for the
            HASH command is experimental. Please see
            the following link for more details:
            http://tools.ietf.org/html/draft-bryan-ftpext-hash-02
            </remarks>
            <param name="type">Hash algorithm to use</param>
            <param name="callback">Async Callback</param>
            <param name="state">State object</param>
            <returns>IAsyncResult</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.EndSetHashAlgorithm(System.IAsyncResult)">
            <summary>
            Ends an asynchronous call to <see cref="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginSetHashAlgorithm(UnderAutomation.Fanuc.Ftp.FluentFTP.FtpHashAlgorithm,System.AsyncCallback,System.Object)"/>
            </summary>
            <param name="ar">IAsyncResult returned from <see cref="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginSetHashAlgorithm(UnderAutomation.Fanuc.Ftp.FluentFTP.FtpHashAlgorithm,System.AsyncCallback,System.Object)"/></param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.GetHash(System.String)">
            <summary>
            Gets the hash of an object on the server using the currently selected hash algorithm. 
            </summary>
            <remarks>
            Supported algorithms, if any, are available in the <see cref="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.HashAlgorithms"/>
            property. You should confirm that it's not equal
            to <see cref="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpHashAlgorithm.NONE"/> before calling this method
            otherwise the server trigger a <see cref="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpCommandException"/>
            due to a lack of support for the HASH command. You can
            set the algorithm using the <see cref="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.SetHashAlgorithm(UnderAutomation.Fanuc.Ftp.FluentFTP.FtpHashAlgorithm)"/> method and
            you can query the server for the current hash algorithm
            using the <see cref="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.GetHashAlgorithm"/> method.
            
            This feature is experimental and based on the following draft:
            http://tools.ietf.org/html/draft-bryan-ftpext-hash-02
            </remarks>
            <param name="path">Full or relative path of the object to compute the hash for.</param>
            <returns>The hash of the file.</returns>
            <exception cref="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpCommandException">
            Thrown if the <see cref="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.HashAlgorithms"/> property is <see cref="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpHashAlgorithm.NONE"/>, 
            the remote path does not exist, or the command cannot be executed.
            </exception>
            <exception cref="T:System.ArgumentException">Path argument is null</exception>
            <exception cref="T:System.NotImplementedException">Thrown when an unknown hash algorithm type is returned by the server</exception>
            <example><code source="..\Examples\GetHash.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginGetHash(System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to get the hash of an object on the server using the currently selected hash algorithm. 
            </summary>
            <remarks>
            Supported algorithms, if any, are available in the <see cref="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.HashAlgorithms"/>
            property. You should confirm that it's not equal
            to <see cref="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpHashAlgorithm.NONE"/> before calling this method
            otherwise the server trigger a <see cref="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpCommandException"/>
            due to a lack of support for the HASH command. You can
            set the algorithm using the <see cref="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.SetHashAlgorithm(UnderAutomation.Fanuc.Ftp.FluentFTP.FtpHashAlgorithm)"/> method and
            you can query the server for the current hash algorithm
            using the <see cref="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.GetHashAlgorithm"/> method.
            
            This feature is experimental and based on the following draft:
            http://tools.ietf.org/html/draft-bryan-ftpext-hash-02
            </remarks>
            <param name="path">The file you want the server to compute the hash for</param>
            <param name="callback">AsyncCallback</param>
            <param name="state">State object</param>
            <returns>IAsyncResult</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.EndGetHash(System.IAsyncResult)">
            <summary>
            Ends an asynchronous call to <see cref="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginGetHash(System.String,System.AsyncCallback,System.Object)"/>
            </summary>
            <param name="ar">IAsyncResult returned from <see cref="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginGetHash(System.String,System.AsyncCallback,System.Object)"/></param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.GetChecksum(System.String)">
            <summary>
            Retrieves a checksum of the given file using a checksum method that the server supports, if any. 
            </summary>
            <remarks>
            The algorithm used goes in this order:
            1. HASH command; server preferred algorithm. See <see cref="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.SetHashAlgorithm(UnderAutomation.Fanuc.Ftp.FluentFTP.FtpHashAlgorithm)"/>
            2. MD5 / XMD5 commands
            3. XSHA1 command
            4. XSHA256 command
            5. XSHA512 command
            6. XCRC command
            </remarks>
            <param name="path">Full or relative path of the file to checksum</param>
            <returns><see cref="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpHash"/> object containing the value and algorithm. Use the <see cref="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpHash.IsValid"/> property to
            determine if this command was successful. <see cref="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpCommandException"/>s can be thrown from
            the underlying calls.</returns>
            <example><code source="..\Examples\GetChecksum.cs" lang="cs" /></example>
            <exception cref="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpCommandException">The command fails</exception>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginGetChecksum(System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to retrieve a checksum of the given file using a checksum method that the server supports, if any. 
            </summary>
            <remarks>
            The algorithm used goes in this order:
            1. HASH command; server preferred algorithm. See <see cref="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.SetHashAlgorithm(UnderAutomation.Fanuc.Ftp.FluentFTP.FtpHashAlgorithm)"/>
            2. MD5 / XMD5 commands
            3. XSHA1 command
            4. XSHA256 command
            5. XSHA512 command
            6. XCRC command
            </remarks>
            <param name="path">Full or relative path to remote file</param>
            <param name="callback">AsyncCallback</param>
            <param name="state">State Object</param>
            <returns>IAsyncResult</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.EndGetChecksum(System.IAsyncResult)">
            <summary>
            Ends an asynchronous call to <see cref="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginGetChecksum(System.String,System.AsyncCallback,System.Object)"/>
            </summary>
            <param name="ar">IAsyncResult returned from <see cref="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginGetChecksum(System.String,System.AsyncCallback,System.Object)"/></param>
            <returns><see cref="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpHash"/> object containing the value and algorithm. Use the <see cref="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpHash.IsValid"/> property to
            determine if this command was successful. <see cref="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpCommandException"/>s can be thrown from
            the underlying calls.</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.GetMD5(System.String)">
            <summary>
            Gets the MD5 hash of the specified file using MD5. This is a non-standard extension
            to the protocol and may or may not work. A FtpCommandException will be
            thrown if the command fails.
            </summary>
            <param name="path">Full or relative path to remote file</param>
            <returns>Server response, presumably the MD5 hash.</returns>
            <exception cref="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpCommandException">The command fails</exception>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginGetMD5(System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to retrieve a MD5 hash. The MD5 command is non-standard
            and not guaranteed to work.
            </summary>
            <param name="path">Full or relative path to remote file</param>
            <param name="callback">AsyncCallback</param>
            <param name="state">State Object</param>
            <returns>IAsyncResult</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.EndGetMD5(System.IAsyncResult)">
            <summary>
            Ends an asynchronous call to <see cref="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginGetMD5(System.String,System.AsyncCallback,System.Object)"/>
            </summary>
            <param name="ar">IAsyncResult returned from <see cref="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginGetMD5(System.String,System.AsyncCallback,System.Object)"/></param>
            <returns>The MD5 hash of the specified file.</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.GetXCRC(System.String)">
            <summary>
            Get the CRC value of the specified file. This is a non-standard extension of the protocol 
            and may throw a FtpCommandException if the server does not support it.
            </summary>
            <param name="path">The path of the file you'd like the server to compute the CRC value for.</param>
            <returns>The response from the server, typically the XCRC value. FtpCommandException thrown on error</returns>
            <exception cref="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpCommandException">The command fails</exception>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginGetXCRC(System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to retrieve a CRC hash. The XCRC command is non-standard
            and not guaranteed to work.
            </summary>
            <param name="path">Full or relative path to remote file</param>
            <param name="callback">AsyncCallback</param>
            <param name="state">State Object</param>
            <returns>IAsyncResult</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.EndGetXCRC(System.IAsyncResult)">
            <summary>
            Ends an asynchronous call to <see cref="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginGetXCRC(System.String,System.AsyncCallback,System.Object)"/>
            </summary>
            <param name="ar">IAsyncResult returned from <see cref="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginGetXCRC(System.String,System.AsyncCallback,System.Object)"/></param>
            <returns>The CRC hash of the specified file.</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.GetXMD5(System.String)">
            <summary>
            Gets the MD5 hash of the specified file using XMD5. This is a non-standard extension
            to the protocol and may or may not work. A FtpCommandException will be
            thrown if the command fails.
            </summary>
            <param name="path">Full or relative path to remote file</param>
            <returns>Server response, presumably the MD5 hash.</returns>
            <exception cref="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpCommandException">The command fails</exception>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginGetXMD5(System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to retrieve a XMD5 hash. The XMD5 command is non-standard
            and not guaranteed to work.
            </summary>
            <param name="path">Full or relative path to remote file</param>
            <param name="callback">AsyncCallback</param>
            <param name="state">State Object</param>
            <returns>IAsyncResult</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.EndGetXMD5(System.IAsyncResult)">
            <summary>
            Ends an asynchronous call to <see cref="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginGetXMD5(System.String,System.AsyncCallback,System.Object)"/>
            </summary>
            <param name="ar">IAsyncResult returned from <see cref="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginGetXMD5(System.String,System.AsyncCallback,System.Object)"/></param>
            <returns>The MD5 hash of the specified file.</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.GetXSHA1(System.String)">
            <summary>
            Gets the SHA-1 hash of the specified file using XSHA1. This is a non-standard extension
            to the protocol and may or may not work. A FtpCommandException will be
            thrown if the command fails.
            </summary>
            <param name="path">Full or relative path to remote file</param>
            <returns>Server response, presumably the SHA-1 hash.</returns>
            <exception cref="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpCommandException">The command fails</exception>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginGetXSHA1(System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to retrieve a SHA1 hash. The XSHA1 command is non-standard
            and not guaranteed to work.
            </summary>
            <param name="path">Full or relative path to remote file</param>
            <param name="callback">AsyncCallback</param>
            <param name="state">State Object</param>
            <returns>IAsyncResult</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.EndGetXSHA1(System.IAsyncResult)">
            <summary>
            Ends an asynchronous call to <see cref="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginGetXSHA1(System.String,System.AsyncCallback,System.Object)"/>
            </summary>
            <param name="ar">IAsyncResult returned from <see cref="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginGetXSHA1(System.String,System.AsyncCallback,System.Object)"/></param>
            <returns>The SHA-1 hash of the specified file.</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.GetXSHA256(System.String)">
            <summary>
            Gets the SHA-256 hash of the specified file using XSHA256. This is a non-standard extension
            to the protocol and may or may not work. A FtpCommandException will be
            thrown if the command fails.
            </summary>
            <param name="path">Full or relative path to remote file</param>
            <returns>Server response, presumably the SHA-256 hash.</returns>
            <exception cref="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpCommandException">The command fails</exception>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginGetXSHA256(System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to retrieve a SHA256 hash. The XSHA256 command is non-standard
            and not guaranteed to work.
            </summary>
            <param name="path">Full or relative path to remote file</param>
            <param name="callback">AsyncCallback</param>
            <param name="state">State Object</param>
            <returns>IAsyncResult</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.EndGetXSHA256(System.IAsyncResult)">
            <summary>
            Ends an asynchronous call to <see cref="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginGetXSHA256(System.String,System.AsyncCallback,System.Object)"/>
            </summary>
            <param name="ar">IAsyncResult returned from <see cref="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginGetXSHA256(System.String,System.AsyncCallback,System.Object)"/></param>
            <returns>The SHA-256 hash of the specified file.</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.GetXSHA512(System.String)">
            <summary>
            Gets the SHA-512 hash of the specified file using XSHA512. This is a non-standard extension
            to the protocol and may or may not work. A FtpCommandException will be
            thrown if the command fails.
            </summary>
            <param name="path">Full or relative path to remote file</param>
            <returns>Server response, presumably the SHA-512 hash.</returns>
            <exception cref="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpCommandException">The command fails</exception>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginGetXSHA512(System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to retrieve a SHA512 hash. The XSHA512 command is non-standard
            and not guaranteed to work.
            </summary>
            <param name="path">Full or relative path to remote file</param>
            <param name="callback">AsyncCallback</param>
            <param name="state">State Object</param>
            <returns>IAsyncResult</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.EndGetXSHA512(System.IAsyncResult)">
            <summary>
            Ends an asynchronous call to <see cref="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginGetXSHA512(System.String,System.AsyncCallback,System.Object)"/>
            </summary>
            <param name="ar">IAsyncResult returned from <see cref="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginGetXSHA512(System.String,System.AsyncCallback,System.Object)"/></param>
            <returns>The SHA-512 hash of the specified file.</returns>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.TransferChunkSize">
            <summary>
            Gets or sets the number of bytes transferred in a single chunk (a single FTP command).
            Used by <see cref="o:UploadFile"/>/<see cref="o:UploadFileAsync"/> and <see cref="o:DownloadFile"/>/<see cref="o:DownloadFileAsync"/>
            to transfer large files in multiple chunks.
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.RetryAttempts">
            <summary>
            Gets or sets the retry attempts allowed when a verification failure occurs during download or upload.
            This value must be set to 1 or more.
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.UploadRateLimit">
            <summary>
            Rate limit for uploads in kbyte/s. Set this to 0 for unlimited speed.
            Honored by high-level API such as Upload(), Download(), UploadFile(), DownloadFile()..
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.DownloadRateLimit">
            <summary>
            Rate limit for downloads in kbytes/s. Set this to 0 for unlimited speed.
            Honored by high-level API such as Upload(), Download(), UploadFile(), DownloadFile()..
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.UploadDataType">
            <summary>
            Controls if the high-level API uploads files in Binary or ASCII mode.
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.DownloadDataType">
            <summary>
            Controls if the high-level API downloads files in Binary or ASCII mode.
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.UploadFiles(System.Collections.Generic.IEnumerable{System.String},System.String,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpExists,System.Boolean,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpVerify,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpError)">
            <summary>
            Uploads the given file paths to a single folder on the server.
            All files are placed directly into the given folder regardless of their path on the local filesystem.
            High-level API that takes care of various edge cases internally.
            Supports very large files since it uploads data in chunks.
            Faster than uploading single files with <see cref="o:UploadFile"/> since it performs a single "file exists" check rather than one check per file.
            </summary>
            <param name="localPaths">The full or relative paths to the files on the local file system. Files can be from multiple folders.</param>
            <param name="remoteDir">The full or relative path to the directory that files will be uploaded on the server</param>
            <param name="existsMode">What to do if the file already exists? Skip, overwrite or append? Set this to <see cref="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpExists.NoCheck"/> for fastest performance,
             but only if you are SURE that the files do not exist on the server.</param>
            <param name="createRemoteDir">Create the remote directory if it does not exist.</param>
            <param name="verifyOptions">Sets if checksum verification is required for a successful download and what to do if it fails verification (See Remarks)</param>
            <param name="errorHandling">Used to determine how errors are handled</param>
            <returns>The count of how many files were uploaded successfully. Affected when files are skipped when they already exist.</returns>
            <remarks>
            If verification is enabled (All options other than <see cref="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpVerify.None"/>) the hash will be checked against the server.  If the server does not support
            any hash algorithm, then verification is ignored.  If only <see cref="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpVerify.OnlyChecksum"/> is set then the return of this method depends on both a successful 
            upload &amp; verification.  Additionally, if any verify option is set and a retry is attempted the existsMode will automatically be set to <see cref="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpExists.Overwrite"/>.
            If <see cref="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpVerify.Throw"/> is set and <see cref="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpError.Throw"/> is <i>not set</i>, then individual verification errors will not cause an exception
            to propagate from this method.
            </remarks>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.UploadFiles(System.Collections.Generic.IEnumerable{System.IO.FileInfo},System.String,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpExists,System.Boolean,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpVerify,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpError)">
            <summary>
            Uploads the given file paths to a single folder on the server.
            All files are placed directly into the given folder regardless of their path on the local filesystem.
            High-level API that takes care of various edge cases internally.
            Supports very large files since it uploads data in chunks.
            Faster than uploading single files with <see cref="o:UploadFile"/> since it performs a single "file exists" check rather than one check per file.
            </summary>
            <param name="localFiles">Files to be uploaded</param>
            <param name="remoteDir">The full or relative path to the directory that files will be uploaded on the server</param>
            <param name="existsMode">What to do if the file already exists? Skip, overwrite or append? Set this to FtpExists.None for fastest performance but only if you are SURE that the files do not exist on the server.</param>
            <param name="createRemoteDir">Create the remote directory if it does not exist.</param>
            <param name="verifyOptions">Sets if checksum verification is required for a successful download and what to do if it fails verification (See Remarks)</param>
            <param name="errorHandling">Used to determine how errors are handled</param>
            <returns>The count of how many files were downloaded successfully. When existing files are skipped, they are not counted.</returns>
            <remarks>
            If verification is enabled (All options other than <see cref="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpVerify.None"/>) the hash will be checked against the server.  If the server does not support
            any hash algorithm, then verification is ignored.  If only <see cref="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpVerify.OnlyChecksum"/> is set then the return of this method depends on both a successful 
            upload &amp; verification.  Additionally, if any verify option is set and a retry is attempted the existsMode will automatically be set to <see cref="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpExists.Overwrite"/>.
            If <see cref="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpVerify.Throw"/> is set and <see cref="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpError.Throw"/> is <i>not set</i>, then individual verification errors will not cause an exception
            to propagate from this method.
            </remarks>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.DownloadFiles(System.String,System.Collections.Generic.IEnumerable{System.String},System.Boolean,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpVerify,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpError)">
            <summary>
            Downloads the specified files into a local single directory.
            High-level API that takes care of various edge cases internally.
            Supports very large files since it downloads data in chunks.
            Same speed as <see cref="o:DownloadFile"/>.
            </summary>
            <param name="localDir">The full or relative path to the directory that files will be downloaded into.</param>
            <param name="remotePaths">The full or relative paths to the files on the server</param>
            <param name="overwrite">True if you want the local file to be overwritten if it already exists. (Default value is true)</param>
            <param name="verifyOptions">Sets if checksum verification is required for a successful download and what to do if it fails verification (See Remarks)</param>
            <param name="errorHandling">Used to determine how errors are handled</param>
            <returns>The count of how many files were downloaded successfully. When existing files are skipped, they are not counted.</returns>
            <remarks>
            If verification is enabled (All options other than <see cref="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpVerify.None"/>) the hash will be checked against the server.  If the server does not support
            any hash algorithm, then verification is ignored.  If only <see cref="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpVerify.OnlyChecksum"/> is set then the return of this method depends on both a successful 
            upload &amp; verification.  Additionally, if any verify option is set and a retry is attempted then overwrite will automatically switch to true for subsequent attempts.
            If <see cref="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpVerify.Throw"/> is set and <see cref="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpError.Throw"/> is <i>not set</i>, then individual verification errors will not cause an exception
            to propagate from this method.
            </remarks>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.UploadFile(System.String,System.String,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpExists,System.Boolean,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpVerify,System.IProgress{System.Double})">
            <summary>
            Uploads the specified file directly onto the server.
            High-level API that takes care of various edge cases internally.
            Supports very large files since it uploads data in chunks.
            </summary>
            <param name="localPath">The full or relative path to the file on the local file system</param>
            <param name="remotePath">The full or relative path to the file on the server</param>
            <param name="existsMode">What to do if the file already exists? Skip, overwrite or append? Set this to  <see cref="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpExists.NoCheck"/> for fastest performance 
            but only if you are SURE that the files do not exist on the server.</param>
            <param name="createRemoteDir">Create the remote directory if it does not exist. Slows down upload due to additional checks required.</param>
            <param name="verifyOptions">Sets if checksum verification is required for a successful upload and what to do if it fails verification (See Remarks)</param>
            <param name="progress">Provide an implementation of IProgress to track upload progress. The value provided is in the range 0 to 100, indicating the percentage of the file transferred. If the progress is indeterminate, -1 is sent.</param>
            <returns>If true then the file was uploaded, false otherwise.</returns>
            <remarks>
            If verification is enabled (All options other than <see cref="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpVerify.None"/>) the hash will be checked against the server.  If the server does not support
            any hash algorithm, then verification is ignored.  If only <see cref="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpVerify.OnlyChecksum"/> is set then the return of this method depends on both a successful 
            upload &amp; verification.  Additionally, if any verify option is set and a retry is attempted the existsMode will automatically be set to <see cref="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpExists.Overwrite"/>.
            </remarks>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.Upload(System.IO.Stream,System.String,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpExists,System.Boolean,System.IProgress{System.Double})">
            <summary>
            Uploads the specified stream as a file onto the server.
            High-level API that takes care of various edge cases internally.
            Supports very large files since it uploads data in chunks.
            </summary>
            <param name="fileStream">The full data of the file, as a stream</param>
            <param name="remotePath">The full or relative path to the file on the server</param>
            <param name="existsMode">What to do if the file already exists? Skip, overwrite or append? Set this to <see cref="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpExists.NoCheck"/> for fastest performance
            but only if you are SURE that the files do not exist on the server.</param>
            <param name="createRemoteDir">Create the remote directory if it does not exist. Slows down upload due to additional checks required.</param>
            <param name="progress">Provide an implementation of IProgress to track upload progress. The value provided is in the range 0 to 100, indicating the percentage of the file transferred. If the progress is indeterminate, -1 is sent.</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.Upload(System.Byte[],System.String,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpExists,System.Boolean,System.IProgress{System.Double})">
            <summary>
            Uploads the specified byte array as a file onto the server.
            High-level API that takes care of various edge cases internally.
            Supports very large files since it uploads data in chunks.
            </summary>
            <param name="fileData">The full data of the file, as a byte array</param>
            <param name="remotePath">The full or relative path to the file on the server</param>
            <param name="existsMode">What to do if the file already exists? Skip, overwrite or append? Set this to <see cref="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpExists.NoCheck"/> for fastest performance 
            but only if you are SURE that the files do not exist on the server.</param>
            <param name="createRemoteDir">Create the remote directory if it does not exist. Slows down upload due to additional checks required.</param>
            <param name="progress">Provide an implementation of IProgress to track upload progress. The value provided is in the range 0 to 100, indicating the percentage of the file transferred. If the progress is indeterminate, -1 is sent.</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.UploadFileInternal(System.IO.Stream,System.String,System.Boolean,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpExists,System.Boolean,System.Boolean,System.IProgress{System.Double})">
            <summary>
            Upload the given stream to the server as a new file. Overwrites the file if it exists.
            Writes data in chunks. Retries if server disconnects midway.
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.DownloadFile(System.String,System.String,System.Boolean,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpVerify,System.IProgress{System.Double})">
            <summary>
            Downloads the specified file onto the local file system.
            High-level API that takes care of various edge cases internally.
            Supports very large files since it downloads data in chunks.
            </summary>
            <param name="localPath">The full or relative path to the file on the local file system</param>
            <param name="remotePath">The full or relative path to the file on the server</param>
            <param name="overwrite">True if you want the local file to be overwritten if it already exists. (Default value is true)</param>
            <param name="verifyOptions">Sets if checksum verification is required for a successful download and what to do if it fails verification (See Remarks)</param>
            <param name="progress">Provide an implementation of IProgress to track download progress. The value provided is in the range 0 to 100, indicating the percentage of the file transferred. If the progress is indeterminate, -1 is sent.</param>
            <returns>If true then the file was downloaded, false otherwise.</returns>
            <remarks>
            If verification is enabled (All options other than <see cref="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpVerify.None"/>) the hash will be checked against the server.  If the server does not support
            any hash algorithm, then verification is ignored.  If only <see cref="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpVerify.OnlyChecksum"/> is set then the return of this method depends on both a successful 
            upload &amp; verification.  Additionally, if any verify option is set and a retry is attempted then overwrite will automatically be set to true for subsequent attempts.
            </remarks>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.Download(System.IO.Stream,System.String,System.IProgress{System.Double})">
            <summary>
            Downloads the specified file into the specified stream.
            High-level API that takes care of various edge cases internally.
            Supports very large files since it downloads data in chunks.
            </summary>
            <param name="outStream">The stream that the file will be written to. Provide a new MemoryStream if you only want to read the file into memory.</param>
            <param name="remotePath">The full or relative path to the file on the server</param>
            <param name="progress">Provide an implementation of IProgress to track download progress. The value provided is in the range 0 to 100, indicating the percentage of the file transferred. If the progress is indeterminate, -1 is sent.</param>
            <returns>If true then the file was downloaded, false otherwise.</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.Download(System.Byte[]@,System.String,System.IProgress{System.Double})">
            <summary>
            Downloads the specified file and return the raw byte array.
            High-level API that takes care of various edge cases internally.
            Supports very large files since it downloads data in chunks.
            </summary>
            <param name="outBytes">The variable that will receive the bytes.</param>
            <param name="remotePath">The full or relative path to the file on the server</param>
            <param name="progress">Provide an implementation of IProgress to track download progress. The value provided is in the range 0 to 100, indicating the percentage of the file transferred. If the progress is indeterminate, -1 is sent.</param>
            <returns>If true then the file was downloaded, false otherwise.</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.DownloadFileInternal(System.String,System.IO.Stream,System.IProgress{System.Double})">
            <summary>
            Download a file from the server and write the data into the given stream.
            Reads data in chunks. Retries if server disconnects midway.
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.ReportProgress(System.IProgress{System.Double},System.Int64,System.Int64)">
            <summary>
            Sends progress to the user, either a value between 0-100 indicating percentage complete, or -1 for indeterminate.
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.ListingParser">
            <summary>
            File listing parser to be used. 
            Automatically calculated based on the type of the server, unless changed.
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.ListingCulture">
            <summary>
            Culture used to parse file listings
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.TimeOffset">
            <summary>
            Time difference between server and client, in hours.
            If the server is located in New York and you are in London then the time difference is -5 hours.
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.RecursiveList">
            <summary>
            Detect if your FTP server supports the recursive LIST command (LIST -R).
            If you know for sure that this is supported, return true here.
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BulkListing">
            <summary>
            If true, increases performance of GetListing by reading multiple lines
            of the file listing at once. If false then GetListing will read file
            listings line-by-line. If GetListing is having issues with your server,
            set it to false.
            
            The number of bytes read is based upon <see cref="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BulkListingLength"/>.
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BulkListingLength">
            <summary>
            Bytes to read during GetListing. Only honored if <see cref="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BulkListing"/> is true.
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.GetObjectInfo(System.String,System.Boolean)">
            <summary>
            Returns information about a file system object. Returns null if the server response can't
            be parsed or the server returns a failure completion code. The error for a failure
            is logged with FtpTrace. No exception is thrown on error because that would negate
            the usefulness of this method for checking for the existence of an object.
            </summary>
            <param name="path">The path of the file or folder</param>
            <param name="dateModified">Get the accurate modified date using another MDTM command</param>
            <returns>A FtpListItem object</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginGetObjectInfo(System.String,System.Boolean,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to return information about a remote file system object. 
            </summary>
            <remarks>
            You should check the <see cref="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.Capabilities"/> property for the <see cref="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpCapability.MLSD"/> 
            flag before calling this method. Failing to do so will result in an InvalidOperationException
             being thrown when the server does not support machine listings. Returns null if the server response can't
            be parsed or the server returns a failure completion code. The error for a failure
            is logged with FtpTrace. No exception is thrown on error because that would negate
            the usefulness of this method for checking for the existence of an object.
            </remarks>
            <param name="path">Path of the file or folder</param>
            <param name="dateModified">Get the accurate modified date using another MDTM command</param>
            <param name="callback">Async Callback</param>
            <param name="state">State object</param>
            <returns>IAsyncResult</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.EndGetObjectInfo(System.IAsyncResult)">
            <summary>
            Ends a call to <see cref="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginGetObjectInfo(System.String,System.Boolean,System.AsyncCallback,System.Object)"/>
            </summary>
            <param name="ar">IAsyncResult returned from <see cref="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginGetObjectInfo(System.String,System.Boolean,System.AsyncCallback,System.Object)"/></param>
            <returns>A <see cref="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListItem"/> if the command succeeded, or null if there was a problem.</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.GetListing">
            <summary>
            Gets a file listing from the server from the current working directory. Each <see cref="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListItem"/> object returned
            contains information about the file that was able to be retrieved. 
            </summary>
            <remarks>
            If a <see cref="T:System.DateTime"/> property is equal to <see cref="F:System.DateTime.MinValue"/> then it means the 
            date in question was not able to be retrieved. If the <see cref="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListItem.Size"/> property
            is equal to 0, then it means the size of the object could also not
            be retrieved.
            </remarks>
            <returns>An array of FtpListItem objects</returns>
            <example><code source="..\Examples\GetListing.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.GetListing(System.String)">
            <summary>
            Gets a file listing from the server. Each <see cref="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListItem"/> object returned
            contains information about the file that was able to be retrieved. 
            </summary>
            <remarks>
            If a <see cref="T:System.DateTime"/> property is equal to <see cref="F:System.DateTime.MinValue"/> then it means the 
            date in question was not able to be retrieved. If the <see cref="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListItem.Size"/> property
            is equal to 0, then it means the size of the object could also not
            be retrieved.
            </remarks>
            <param name="path">The path of the directory to list</param>
            <returns>An array of FtpListItem objects</returns>
            <example><code source="..\Examples\GetListing.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.GetListing(System.String,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListOption)">
            <summary>
            Gets a file listing from the server. Each <see cref="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListItem"/> object returned
            contains information about the file that was able to be retrieved. 
            </summary>
            <remarks>
            If a <see cref="T:System.DateTime"/> property is equal to <see cref="F:System.DateTime.MinValue"/> then it means the 
            date in question was not able to be retrieved. If the <see cref="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListItem.Size"/> property
            is equal to 0, then it means the size of the object could also not
            be retrieved.
            </remarks>
            <param name="path">The path of the directory to list</param>
            <param name="options">Options that dictacte how a list is performed and what information is gathered.</param>
            <returns>An array of FtpListItem objects</returns>
            <example><code source="..\Examples\GetListing.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginGetListing(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to get a file listing from the server. 
            Each <see cref="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListItem"/> object returned contains information about the file that was able to be retrieved. 
            </summary>
            <remarks>
            If a <see cref="T:System.DateTime"/> property is equal to <see cref="F:System.DateTime.MinValue"/> then it means the 
            date in question was not able to be retrieved. If the <see cref="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListItem.Size"/> property
            is equal to 0, then it means the size of the object could also not
            be retrieved.
            </remarks>
            <param name="callback">AsyncCallback method</param>
            <param name="state">State object</param>
            <returns>IAsyncResult</returns>
            <example><code source="..\Examples\BeginGetListing.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginGetListing(System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to get a file listing from the server. 
            Each <see cref="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListItem"/> object returned contains information about the file that was able to be retrieved. 
            </summary>
            <remarks>
            If a <see cref="T:System.DateTime"/> property is equal to <see cref="F:System.DateTime.MinValue"/> then it means the 
            date in question was not able to be retrieved. If the <see cref="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListItem.Size"/> property
            is equal to 0, then it means the size of the object could also not
            be retrieved.
            </remarks>
            <param name="path">The path to list</param>
            <param name="callback">AsyncCallback method</param>
            <param name="state">State object</param>
            <returns>IAsyncResult</returns>
            <example><code source="..\Examples\BeginGetListing.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginGetListing(System.String,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListOption,System.AsyncCallback,System.Object)">
            <summary>
            Gets a file listing from the server asynchronously
            </summary>
            <param name="path">The path to list</param>
            <param name="options">Options that dictate how the list operation is performed</param>
            <param name="callback">AsyncCallback method</param>
            <param name="state">State object</param>
            <returns>IAsyncResult</returns>
            <example><code source="..\Examples\BeginGetListing.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.EndGetListing(System.IAsyncResult)">
            <summary>
            Ends a call to <see cref="o:BeginGetListing"/>
            </summary>
            <param name="ar">IAsyncResult return from <see cref="o:BeginGetListing"/></param>
            <returns>An array of items retrieved in the listing</returns>
            <example><code source="..\Examples\BeginGetListing.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.GetListingRecursive(System.String,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListOption)">
            <summary>
            Recursive method of GetListing, to recurse through directories on servers that do not natively support recursion.
            Automatically called by GetListing where required.
            Uses flat recursion instead of head recursion.
            </summary>
            <param name="path">The path of the directory to list</param>
            <param name="options">Options that dictacte how a list is performed and what information is gathered.</param>
            <returns>An array of FtpListItem objects</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.GetNameListing">
            <summary>
            Returns a file/directory listing using the NLST command.
            </summary>
            <returns>A string array of file and directory names if any were returned.</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.GetNameListing(System.String)">
            <summary>
            Returns a file/directory listing using the NLST command.
            </summary>
            <param name="path">The path of the directory to list</param>
            <returns>A string array of file and directory names if any were returned.</returns>
            <example><code source="..\Examples\GetNameListing.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginGetNameListing(System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begin an asynchronous operation to return a file/directory listing using the NLST command.
            </summary>
            <param name="path">The path of the directory to list</param>
            <param name="callback">Async Callback</param>
            <param name="state">State object</param>
            <returns>IAsyncResult</returns>
            <example><code source="..\Examples\BeginGetNameListing.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginGetNameListing(System.AsyncCallback,System.Object)">
            <summary>
            Begin an asynchronous operation to return a file/directory listing using the NLST command.
            </summary>
            <param name="callback">Async Callback</param>
            <param name="state">State object</param>
            <returns>IAsyncResult</returns>
            <example><code source="..\Examples\BeginGetNameListing.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.EndGetNameListing(System.IAsyncResult)">
            <summary>
            Ends a call to <see cref="o:BeginGetNameListing"/>
            </summary>
            <param name="ar">IAsyncResult object returned from <see cref="o:BeginGetNameListing"/></param>
            <returns>An array of file and directory names if any were returned.</returns>
            <example><code source="..\Examples\BeginGetNameListing.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.OpenPassiveDataStream(UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDataConnectionType,System.String,System.Int64)">
            <summary>
            Opens the specified type of passive data stream
            </summary>
            <param name="type">Type of passive data stream to open</param>
            <param name="command">The command to execute that requires a data stream</param>
            <param name="restart">Restart location in bytes for file transfer</param>
            <returns>A data stream ready to be used</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.GetLocalAddress(System.Net.IPAddress)">
            <summary>
            Returns the ip address to be sent to the server for the active connection
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.OpenActiveDataStream(UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDataConnectionType,System.String,System.Int64)">
            <summary>
            Opens the specified type of active data stream
            </summary>
            <param name="type">Type of passive data stream to open</param>
            <param name="command">The command to execute that requires a data stream</param>
            <param name="restart">Restart location in bytes for file transfer</param>
            <returns>A data stream ready to be used</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.OpenDataStream(System.String,System.Int64)">
            <summary>
            Opens a data stream.
            </summary>
            <param name='command'>The command to execute that requires a data stream</param>
            <param name="restart">Restart location in bytes for file transfer</param>
            <returns>The data stream.</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.CloseDataStream(UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDataStream)">
            <summary>
            Disconnects a data stream
            </summary>
            <param name="stream">The data stream to close</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.OpenRead(System.String)">
            <summary>
            Opens the specified file for reading
            </summary>
            <param name="path">The full or relative path of the file</param>
            <returns>A stream for reading the file on the server</returns>
            <example><code source="..\Examples\OpenRead.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.OpenRead(System.String,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDataType)">
            <summary>
            Opens the specified file for reading
            </summary>
            <param name="path">The full or relative path of the file</param>
            <param name="type">ASCII/Binary</param>
            <returns>A stream for reading the file on the server</returns>
            <example><code source="..\Examples\OpenRead.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.OpenRead(System.String,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDataType,System.Boolean)">
            <summary>
            Opens the specified file for reading
            </summary>
            <param name="path">The full or relative path of the file</param>
            <param name="type">ASCII/Binary</param>
            <param name="checkIfFileExists">Only set this to false if you are SURE that the file does not exist. If true, it reads the file size and saves it into the stream length.</param>
            <returns>A stream for reading the file on the server</returns>
            <example><code source="..\Examples\OpenRead.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.OpenRead(System.String,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDataType,System.Int64)">
            <summary>
            Opens the specified file for reading
            </summary>
            <param name="path">The full or relative path of the file</param>
            <param name="type">ASCII/Binary</param>
            <param name="restart">Resume location</param>
            <returns>A stream for reading the file on the server</returns>
            <example><code source="..\Examples\OpenRead.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.OpenRead(System.String,System.Int64)">
            <summary>
            Opens the specified file for reading
            </summary>
            <param name="path">The full or relative path of the file</param>
            <param name="restart">Resume location</param>
            <returns>A stream for reading the file on the server</returns>
            <example><code source="..\Examples\OpenRead.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.OpenRead(System.String,System.Int64,System.Boolean)">
            <summary>
            Opens the specified file for reading
            </summary>
            <param name="path">The full or relative path of the file</param>
            <param name="restart">Resume location</param>
            <param name="checkIfFileExists">Only set this to false if you are SURE that the file does not exist. If true, it reads the file size and saves it into the stream length.</param>
            <returns>A stream for reading the file on the server</returns>
            <example><code source="..\Examples\OpenRead.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.OpenRead(System.String,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDataType,System.Int64,System.Boolean)">
            <summary>
            Opens the specified file for reading
            </summary>
            <param name="path">The full or relative path of the file</param>
            <param name="type">ASCII/Binary</param>
            <param name="restart">Resume location</param>
            <param name="checkIfFileExists">Only set this to false if you are SURE that the file does not exist. If true, it reads the file size and saves it into the stream length.</param>
            <returns>A stream for reading the file on the server</returns>
            <example><code source="..\Examples\OpenRead.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginOpenRead(System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to open the specified file for reading
            </summary>
            <param name="path">The full or relative path of the file</param>
            <param name="callback">Async Callback</param>
            <param name="state">State object</param>
            <returns>IAsyncResult</returns>
            <example><code source="..\Examples\BeginOpenRead.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginOpenRead(System.String,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDataType,System.AsyncCallback,System.Object)">
            <summary>
            Opens the specified file for reading
            </summary>
            <param name="path">The full or relative path of the file</param>
            <param name="type">ASCII/Binary</param>
            <param name="callback">Async Callback</param>
            <param name="state">State object</param>
            <returns>IAsyncResult</returns>
            <example><code source="..\Examples\BeginOpenRead.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginOpenRead(System.String,System.Int64,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to open the specified file for reading
            </summary>
            <param name="path">The full or relative path of the file</param>
            <param name="restart">Resume location</param>
            <param name="callback">Async Callback</param>
            <param name="state">State object</param>
            <returns>IAsyncResult</returns>
            <example><code source="..\Examples\BeginOpenRead.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginOpenRead(System.String,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDataType,System.Int64,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to open the specified file for reading
            </summary>
            <param name="path">The full or relative path of the file</param>
            <param name="type">ASCII/Binary</param>
            <param name="restart">Resume location</param>
            <param name="callback">Async Callback</param>
            <param name="state">State object</param>
            <returns>IAsyncResult</returns>
            <example><code source="..\Examples\BeginOpenRead.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.EndOpenRead(System.IAsyncResult)">
            <summary>
            Ends a call to <see cref="o:BeginOpenRead"/>
            </summary>
            <param name="ar"><see cref="T:System.IAsyncResult"/> returned from <see cref="o:BeginOpenRead"/></param>
            <returns>A readable stream of the remote file</returns>
            <example><code source="..\Examples\BeginOpenRead.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.OpenWrite(System.String)">
            <summary>
            Opens the specified file for writing. Please call GetReply() after you have successfully transfered the file to read the "OK" command sent by the server and prevent stale data on the socket.
            </summary>
            <param name="path">Full or relative path of the file</param>
            <returns>A stream for writing to the file on the server</returns>
            <example><code source="..\Examples\OpenWrite.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.OpenWrite(System.String,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDataType)">
            <summary>
            Opens the specified file for writing. Please call GetReply() after you have successfully transfered the file to read the "OK" command sent by the server and prevent stale data on the socket.
            </summary>
            <param name="path">Full or relative path of the file</param>
            <param name="type">ASCII/Binary</param>
            <returns>A stream for writing to the file on the server</returns>
            <example><code source="..\Examples\OpenWrite.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.OpenWrite(System.String,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDataType,System.Boolean)">
            <summary>
            Opens the specified file for writing. Please call GetReply() after you have successfully transfered the file to read the "OK" command sent by the server and prevent stale data on the socket.
            </summary>
            <param name="path">Full or relative path of the file</param>
            <param name="type">ASCII/Binary</param>
            <param name="checkIfFileExists">Only set this to false if you are SURE that the file does not exist. If true, it reads the file size and saves it into the stream length.</param>
            <returns>A stream for writing to the file on the server</returns>
            <example><code source="..\Examples\OpenWrite.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginOpenWrite(System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to open the specified file for writing
            </summary>
            <param name="path">Full or relative path of the file</param>
            <param name="callback">Async callback</param>
            <param name="state">State object</param>
            <returns>IAsyncResult</returns>
            <example><code source="..\Examples\BeginOpenWrite.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginOpenWrite(System.String,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDataType,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to open the specified file for writing
            </summary>
            <param name="path">Full or relative path of the file</param>
            <param name="type">ASCII/Binary</param>
            <param name="callback">Async callback</param>
            <param name="state">State object</param>
            <returns>IAsyncResult</returns>
            <example><code source="..\Examples\BeginOpenWrite.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.EndOpenWrite(System.IAsyncResult)">
            <summary>
            Ends a call to <see cref="o:BeginOpenWrite"/>
            </summary>
            <param name="ar"><see cref="T:System.IAsyncResult"/> returned from <see cref="o:BeginOpenWrite"/></param>
            <returns>A writable stream</returns>
            <example><code source="..\Examples\BeginOpenWrite.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.OpenAppend(System.String)">
            <summary>
            Opens the specified file for appending. Please call GetReply() after you have successfully transfered the file to read the "OK" command sent by the server and prevent stale data on the socket.
            </summary>
            <param name="path">The full or relative path to the file to be opened</param>
            <returns>A stream for writing to the file on the server</returns>
            <example><code source="..\Examples\OpenAppend.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.OpenAppend(System.String,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDataType)">
            <summary>
            Opens the specified file for appending. Please call GetReply() after you have successfully transfered the file to read the "OK" command sent by the server and prevent stale data on the socket.
            </summary>
            <param name="path">The full or relative path to the file to be opened</param>
            <param name="type">ASCII/Binary</param>
            <param name="checkIfFileExists">Only set this to false if you are SURE that the file does not exist. If true, it reads the file size and saves it into the stream length.</param>
            <returns>A stream for writing to the file on the server</returns>
            <example><code source="..\Examples\OpenAppend.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.OpenAppend(System.String,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDataType,System.Boolean)">
            <summary>
            Opens the specified file for appending. Please call GetReply() after you have successfully transfered the file to read the "OK" command sent by the server and prevent stale data on the socket.
            </summary>
            <param name="path">The full or relative path to the file to be opened</param>
            <param name="type">ASCII/Binary</param>
            <param name="checkIfFileExists">Only set this to false if you are SURE that the file does not exist. If true, it reads the file size and saves it into the stream length.</param>
            <returns>A stream for writing to the file on the server</returns>
            <example><code source="..\Examples\OpenAppend.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginOpenAppend(System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to open the specified file for appending
            </summary>
            <param name="path">Full or relative path of the file</param>
            <param name="callback">Async callback</param>
            <param name="state">State object</param>
            <returns>IAsyncResult</returns>
            <example><code source="..\Examples\BeginOpenAppend.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginOpenAppend(System.String,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDataType,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to open the specified file for appending
            </summary>
            <param name="path">Full or relative path of the file</param>
            <param name="type">ASCII/Binary</param>
            <param name="callback">Async callback</param>
            <param name="state">State object</param>
            <returns>IAsyncResult</returns>
            <example><code source="..\Examples\BeginOpenAppend.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.EndOpenAppend(System.IAsyncResult)">
            <summary>
            Ends a call to <see cref="o:BeginOpenAppend"/>
            </summary>
            <param name="ar"><see cref="T:System.IAsyncResult"/> returned from <see cref="o:BeginOpenAppend"/></param>
            <returns>A writable stream</returns>
            <example><code source="..\Examples\BeginOpenAppend.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.SetDataType(UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDataType)">
            <summary>
            Sets the data type of information sent over the data stream
            </summary>
            <param name="type">ASCII/Binary</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.SetDataTypeInternal(UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDataType)">
            <summary>Internal method that handles actually setting the data type.</summary>
            <exception cref="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpCommandException">Thrown when a FTP Command error condition occurs.</exception>
            <exception cref="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpException">Thrown when a FTP error condition occurs.</exception>
            <param name="type">ASCII/Binary.</param>
            <remarks>This method doesn't do any locking to prevent recursive lock scenarios.  Callers must do their own locking.</remarks>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginSetDataType(UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDataType,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to set the data type of information sent over the data stream
            </summary>
            <param name="type">ASCII/Binary</param>
            <param name="callback">Async callback</param>
            <param name="state">State object</param>
            <returns>IAsyncResult</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.EndSetDataType(System.IAsyncResult)">
            <summary>
            Ends a call to <see cref="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginSetDataType(UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDataType,System.AsyncCallback,System.Object)"/>
            </summary>
            <param name="ar">IAsyncResult returned from <see cref="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginSetDataType(UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDataType,System.AsyncCallback,System.Object)"/></param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.DeleteFile(System.String)">
            <summary>
            Deletes a file on the server
            </summary>
            <param name="path">The full or relative path to the file</param>
            <example><code source="..\Examples\DeleteFile.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginDeleteFile(System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to delete the specified file on the server
            </summary>
            <param name="path">The full or relative path to the file</param>
            <param name="callback">Async callback</param>
            <param name="state">State object</param>
            <returns>IAsyncResult</returns>
            <example><code source="..\Examples\BeginDeleteFile.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.EndDeleteFile(System.IAsyncResult)">
            <summary>
            Ends a call to <see cref="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginDeleteFile(System.String,System.AsyncCallback,System.Object)"/>
            </summary>
            <param name="ar">IAsyncResult returned from BeginDeleteFile</param>
            <example><code source="..\Examples\BeginDeleteFile.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.DeleteDirectory(System.String)">
            <summary>
            Deletes the specified directory and all its contents.
            </summary>
            <param name="path">The full or relative path of the directory to delete</param>
            <example><code source="..\Examples\DeleteDirectory.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.DeleteDirectory(System.String,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListOption)">
            <summary>
            Deletes the specified directory and all its contents.
            </summary>
            <param name="path">The full or relative path of the directory to delete</param>
            <param name="options">Useful to delete hidden files or dot-files.</param>
            <example><code source="..\Examples\DeleteDirectory.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.DeleteDirInternal(System.String,System.Boolean,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListOption)">
            <summary>
            Deletes the specified directory and all its contents.
            </summary>
            <param name="path">The full or relative path of the directory to delete</param>
            <param name="deleteContents">If the directory is not empty, remove its contents</param>
            <param name="options">Useful to delete hidden files or dot-files.</param>
            <example><code source="..\Examples\DeleteDirectory.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.WasGetListingRecursive(UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListOption)">
            <summary>
            Checks whether <see cref="o:GetListing"/> will be called recursively or not.
            </summary>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginDeleteDirectory(System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to delete the specified directory and all its contents.
            </summary>
            <param name="path">The full or relative path of the directory to delete</param>
            <param name="callback">Async callback</param>
            <param name="state">State object</param>
            <returns>IAsyncResult</returns>
            <example><code source="..\Examples\BeginDeleteDirectory.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginDeleteDirectory(System.String,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListOption,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to delete the specified directory and all its contents.
            </summary>
            <param name="path">The full or relative path of the directory to delete</param>
            <param name="options">Useful to delete hidden files or dot-files.</param>
            <param name="callback">Async callback</param>
            <param name="state">State object</param>
            <returns>IAsyncResult</returns>
            <example><code source="..\Examples\BeginDeleteDirectory.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.EndDeleteDirectory(System.IAsyncResult)">
            <summary>
            Ends a call to <see cref="o:BeginDeleteDirectory"/>
            </summary>
            <param name="ar">IAsyncResult returned from BeginDeleteDirectory</param>
            <example><code source="..\Examples\BeginDeleteDirectory.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.DirectoryExists(System.String)">
            <summary>
            Tests if the specified directory exists on the server. This
            method works by trying to change the working directory to
            the path specified. If it succeeds, the directory is changed
            back to the old working directory and true is returned. False
            is returned otherwise and since the CWD failed it is assumed
            the working directory is still the same.
            </summary>
            <param name="path">The path of the directory</param>
            <returns>True if it exists, false otherwise.</returns>
            <example><code source="..\Examples\DirectoryExists.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginDirectoryExists(System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to test if the specified directory exists on the server. 
            This method works by trying to change the working directory to
            the path specified. If it succeeds, the directory is changed
            back to the old working directory and true is returned. False
            is returned otherwise and since the CWD failed it is assumed
            the working directory is still the same.
            </summary>
            <returns>IAsyncResult</returns>
            <param name='path'>The full or relative path of the directory to check for</param>
            <param name='callback'>Async callback</param>
            <param name='state'>State object</param>
            <example><code source="..\Examples\BeginDirectoryExists.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.EndDirectoryExists(System.IAsyncResult)">
            <summary>
            Ends a call to <see cref="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginDirectoryExists(System.String,System.AsyncCallback,System.Object)"/>
            </summary>
            <param name="ar">IAsyncResult returned from BeginDirectoryExists</param>
            <returns>True if the directory exists. False otherwise.</returns>
            <example><code source="..\Examples\BeginDirectoryExists.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.FileExists(System.String)">
            <summary>
            Checks if a file exists on the server.
            </summary>
            <param name="path">The full or relative path to the file</param>
            <returns>True if the file exists</returns>
            <example><code source="..\Examples\FileExists.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginFileExists(System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to check if a file exists on the 
            server by taking a  file listing of the parent directory in the path
            and comparing the results the path supplied.
            </summary>
            <param name="path">The full or relative path to the file</param>
            <param name="callback">Async callback</param>
            <param name="state">State object</param>
            <returns>IAsyncResult</returns>
            <example><code source="..\Examples\BeginFileExists.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.EndFileExists(System.IAsyncResult)">
            <summary>
            Ends a call to <see cref="o:BeginFileExists"/>
            </summary>
            <param name="ar">IAsyncResult returned from <see cref="o:BeginFileExists"/></param>
            <returns>True if the file exists, false otherwise</returns>
            <example><code source="..\Examples\BeginFileExists.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.CreateDirectory(System.String)">
            <summary>
            Creates a directory on the server. If the preceding
            directories do not exist, then they are created.
            </summary>
            <param name="path">The full or relative path to the new remote directory</param>
            <example><code source="..\Examples\CreateDirectory.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.CreateDirectory(System.String,System.Boolean)">
            <summary>
            Creates a directory on the server
            </summary>
            <param name="path">The full or relative path to the new remote directory</param>
            <param name="force">Try to force all non-existent pieces of the path to be created</param>
            <example><code source="..\Examples\CreateDirectory.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginCreateDirectory(System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to create a remote directory. If the preceding
            directories do not exist, then they are created.
            </summary>
            <param name="path">The full or relative path to the new remote directory</param>
            <param name="callback">Async callback</param>
            <param name="state">State object</param>
            <returns>IAsyncResult</returns>
            <example><code source="..\Examples\BeginCreateDirectory.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginCreateDirectory(System.String,System.Boolean,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to create a remote directory
            </summary>
            <param name="path">The full or relative path to the new remote directory</param>
            <param name="force">Try to create the whole path if the preceding directories do not exist</param>
            <param name="callback">Async callback</param>
            <param name="state">State object</param>
            <returns>IAsyncResult</returns>
            <example><code source="..\Examples\BeginCreateDirectory.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.EndCreateDirectory(System.IAsyncResult)">
            <summary>
            Ends a call to <see cref="o:BeginCreateDirectory"/>
            </summary>
            <param name="ar">IAsyncResult returned from <see cref="o:BeginCreateDirectory"/></param>
            <example><code source="..\Examples\BeginCreateDirectory.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.Rename(System.String,System.String)">
            <summary>
            Renames an object on the remote file system.
            Low level method that should NOT be used in most cases. Prefer MoveFile() and MoveDirectory().
            Throws exceptions if the file does not exist, or if the destination file already exists.
            </summary>
            <param name="path">The full or relative path to the object</param>
            <param name="dest">The new full or relative path including the new name of the object</param>
            <example><code source="..\Examples\Rename.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginRename(System.String,System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to rename an object on the remote file system.
            Low level method that should NOT be used in most cases. Prefer MoveFile() and MoveDirectory().
            Throws exceptions if the file does not exist, or if the destination file already exists.
            </summary>
            <param name="path">The full or relative path to the object</param>
            <param name="dest">The new full or relative path including the new name of the object</param>
            <param name="callback">Async callback</param>
            <param name="state">State object</param>
            <returns>IAsyncResult</returns>
            <example><code source="..\Examples\BeginRename.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.EndRename(System.IAsyncResult)">
            <summary>
            Ends a call to <see cref="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginRename(System.String,System.String,System.AsyncCallback,System.Object)"/>
            </summary>
            <param name="ar">IAsyncResult returned from <see cref="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginRename(System.String,System.String,System.AsyncCallback,System.Object)"/></param>
            <example><code source="..\Examples\BeginRename.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.MoveFile(System.String,System.String,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpExists)">
            <summary>
            Moves a file on the remote file system from one directory to another.
            Always checks if the source file exists. Checks if the dest file exists based on the `existsMode` parameter.
            Only throws exceptions for critical errors.
            </summary>
            <param name="path">The full or relative path to the object</param>
            <param name="dest">The new full or relative path including the new name of the object</param>
            <param name="existsMode">Should we check if the dest file exists? And if it does should we overwrite/skip the operation?</param>
            <returns>Whether the file was moved</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginMoveFile(System.String,System.String,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpExists,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to move a file on the remote file system, from one directory to another.
            Always checks if the source file exists. Checks if the dest file exists based on the `existsMode` parameter.
            Only throws exceptions for critical errors.
            </summary>
            <param name="path">The full or relative path to the object</param>
            <param name="dest">The new full or relative path including the new name of the object</param>
            <param name="existsMode">Should we check if the dest file exists? And if it does should we overwrite/skip the operation?</param>
            <param name="callback">Async callback</param>
            <param name="state">State object</param>
            <returns>IAsyncResult</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.EndMoveFile(System.IAsyncResult)">
            <summary>
            Ends a call to <see cref="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginMoveFile(System.String,System.String,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpExists,System.AsyncCallback,System.Object)"/>
            </summary>
            <param name="ar">IAsyncResult returned from <see cref="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginMoveFile(System.String,System.String,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpExists,System.AsyncCallback,System.Object)"/></param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.MoveDirectory(System.String,System.String,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpExists)">
            <summary>
            Moves a directory on the remote file system from one directory to another.
            Always checks if the source directory exists. Checks if the dest directory exists based on the `existsMode` parameter.
            Only throws exceptions for critical errors.
            </summary>
            <param name="path">The full or relative path to the object</param>
            <param name="dest">The new full or relative path including the new name of the object</param>
            <param name="existsMode">Should we check if the dest directory exists? And if it does should we overwrite/skip the operation?</param>
            <returns>Whether the directory was moved</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginMoveDirectory(System.String,System.String,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpExists,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to move a directory on the remote file system, from one directory to another.
            Always checks if the source directory exists. Checks if the dest directory exists based on the `existsMode` parameter.
            Only throws exceptions for critical errors.
            </summary>
            <param name="path">The full or relative path to the object</param>
            <param name="dest">The new full or relative path including the new name of the object</param>
            <param name="existsMode">Should we check if the dest directory exists? And if it does should we overwrite/skip the operation?</param>
            <param name="callback">Async callback</param>
            <param name="state">State object</param>
            <returns>IAsyncResult</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.EndMoveDirectory(System.IAsyncResult)">
            <summary>
            Ends a call to <see cref="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginMoveDirectory(System.String,System.String,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpExists,System.AsyncCallback,System.Object)"/>
            </summary>
            <param name="ar">IAsyncResult returned from <see cref="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginMoveDirectory(System.String,System.String,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpExists,System.AsyncCallback,System.Object)"/></param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.SetFilePermissions(System.String,System.Int32)">
            <summary>
            Modify the permissions of the given file/folder.
            Only works on *NIX systems, and not on Windows/IIS servers.
            Only works if the FTP server supports the SITE CHMOD command
            (requires the CHMOD extension to be installed and enabled).
            Throws FtpCommandException if there is an issue.
            </summary>
            <param name="path">The full or relative path to the item</param>
            <param name="permissions">The permissions in CHMOD format</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.Chmod(System.String,System.Int32)">
            <summary>
            Modify the permissions of the given file/folder.
            Only works on *NIX systems, and not on Windows/IIS servers.
            Only works if the FTP server supports the SITE CHMOD command
            (requires the CHMOD extension to be installed and enabled).
            Throws FtpCommandException if there is an issue.
            </summary>
            <param name="path">The full or relative path to the item</param>
            <param name="permissions">The permissions in CHMOD format</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.SetFilePermissions(System.String,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpPermission,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpPermission,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpPermission)">
            <summary>
            Modify the permissions of the given file/folder.
            Only works on *NIX systems, and not on Windows/IIS servers.
            Only works if the FTP server supports the SITE CHMOD command
            (requires the CHMOD extension to be installed and enabled).
            Throws FtpCommandException if there is an issue.
            </summary>
            <param name="path">The full or relative path to the item</param>
            <param name="owner">The owner permissions</param>
            <param name="group">The group permissions</param>
            <param name="other">The other permissions</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.Chmod(System.String,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpPermission,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpPermission,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpPermission)">
            <summary>
            Modify the permissions of the given file/folder.
            Only works on *NIX systems, and not on Windows/IIS servers.
            Only works if the FTP server supports the SITE CHMOD command
            (requires the CHMOD extension to be installed and enabled).
            Throws FtpCommandException if there is an issue.
            </summary>
            <param name="path">The full or relative path to the item</param>
            <param name="owner">The owner permissions</param>
            <param name="group">The group permissions</param>
            <param name="other">The other permissions</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.GetFilePermissions(System.String)">
            <summary>
            Retrieve the permissions of the given file/folder as an FtpListItem object with all "Permission" properties set.
            Throws FtpCommandException if there is an issue.
            Returns null if the server did not specify a permission value.
            Use `GetChmod` if you required the integer value instead.
            </summary>
            <param name="path">The full or relative path to the item</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.GetChmod(System.String)">
            <summary>
            Retrieve the permissions of the given file/folder as an integer in the CHMOD format.
            Throws FtpCommandException if there is an issue.
            Returns 0 if the server did not specify a permission value.
            Use `GetFilePermissions` if you required the permissions in the FtpPermission format.
            </summary>
            <param name="path">The full or relative path to the item</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.DereferenceLink(UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListItem)">
            <summary>
            Recursively dereferences a symbolic link. See the
            MaximumDereferenceCount property for controlling
            how deep this method will recurse before giving up.
            </summary>
            <param name="item">The symbolic link</param>
            <returns>FtpListItem, null if the link can't be dereferenced</returns>
            <example><code source="..\Examples\DereferenceLink.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.DereferenceLink(UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListItem,System.Int32)">
            <summary>
            Recursively dereferences a symbolic link
            </summary>
            <param name="item">The symbolic link</param>
            <param name="recMax">The maximum depth of recursion that can be performed before giving up.</param>
            <returns>FtpListItem, null if the link can't be dereferenced</returns>
            <example><code source="..\Examples\DereferenceLink.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.DereferenceLink(UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListItem,System.Int32,System.Int32@)">
            <summary>
            Derefence a FtpListItem object
            </summary>
            <param name="item">The item to derefence</param>
            <param name="recMax">Maximum recursive calls</param>
            <param name="count">Counter</param>
            <returns>FtpListItem, null if the link can't be dereferenced</returns>
            <example><code source="..\Examples\DereferenceLink.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginDereferenceLink(UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListItem,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to dereference a <see cref="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListItem"/> object
            </summary>
            <param name="item">The item to dereference</param>
            <param name="recMax">Maximum recursive calls</param>
            <param name="callback">AsyncCallback</param>
            <param name="state">State Object</param>
            <returns>IAsyncResult</returns>
            <example><code source="..\Examples\BeginDereferenceLink.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginDereferenceLink(UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListItem,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to dereference a <see cref="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListItem"/> object. See the
            <see cref="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.MaximumDereferenceCount"/> property for controlling
            how deep this method will recurse before giving up.
            </summary>
            <param name="item">The item to dereference</param>
            <param name="callback">AsyncCallback</param>
            <param name="state">State Object</param>
            <returns>IAsyncResult</returns>
            <example><code source="..\Examples\BeginDereferenceLink.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.EndDereferenceLink(System.IAsyncResult)">
            <summary>
            Ends a call to <see cref="o:BeginDereferenceLink"/>
            </summary>
            <param name="ar">IAsyncResult</param>
            <returns>A <see cref="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListItem"/>, or null if the link can't be dereferenced</returns>
            <example><code source="..\Examples\BeginDereferenceLink.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.SetWorkingDirectory(System.String)">
            <summary>
            Sets the work directory on the server
            </summary>
            <param name="path">The path of the directory to change to</param>
            <example><code source="..\Examples\SetWorkingDirectory.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginSetWorkingDirectory(System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to set the working directory on the server
            </summary>
            <param name="path">The directory to change to</param>
            <param name="callback">Async Callback</param>
            <param name="state">State object</param>
            <returns>IAsyncResult</returns>
            <example><code source="..\Examples\BeginSetWorkingDirectory.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.EndSetWorkingDirectory(System.IAsyncResult)">
            <summary>
            Ends a call to <see cref="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginSetWorkingDirectory(System.String,System.AsyncCallback,System.Object)"/>
            </summary>
            <param name="ar">IAsyncResult returned from <see cref="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginSetWorkingDirectory(System.String,System.AsyncCallback,System.Object)"/></param>
            <example><code source="..\Examples\BeginSetWorkingDirectory.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.GetWorkingDirectory">
            <summary>
            Gets the current working directory
            </summary>
            <returns>The current working directory, ./ if the response couldn't be parsed.</returns>
            <example><code source="..\Examples\GetWorkingDirectory.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginGetWorkingDirectory(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to get the working directory
            </summary>
            <param name="callback">Async callback</param>
            <param name="state">State object</param>
            <returns>IAsyncResult</returns>
            <example><code source="..\Examples\BeginGetWorkingDirectory.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.EndGetWorkingDirectory(System.IAsyncResult)">
            <summary>
            Ends a call to <see cref="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginGetWorkingDirectory(System.AsyncCallback,System.Object)"/>
            </summary>
            <param name="ar">IAsyncResult returned from <see cref="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginGetWorkingDirectory(System.AsyncCallback,System.Object)"/></param>
            <returns>The current working directory</returns>
            <example><code source="..\Examples\BeginGetWorkingDirectory.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.GetFileSize(System.String)">
            <summary>
            Gets the size of a remote file
            </summary>
            <param name="path">The full or relative path of the file</param>
            <returns>-1 if the command fails, otherwise the file size</returns>
            <example><code source="..\Examples\GetFileSize.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginGetFileSize(System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to retrieve the size of a remote file
            </summary>
            <param name="path">The full or relative path of the file</param>
            <param name="callback">Async callback</param>
            <param name="state">State object</param>
            <returns>IAsyncResult</returns>
            <example><code source="..\Examples\BeginGetFileSize.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.EndGetFileSize(System.IAsyncResult)">
            <summary>
            Ends a call to <see cref="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginGetFileSize(System.String,System.AsyncCallback,System.Object)"/>
            </summary>
            <param name="ar">IAsyncResult returned from <see cref="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginGetFileSize(System.String,System.AsyncCallback,System.Object)"/></param>
            <returns>The size of the file, -1 if there was a problem.</returns>
            <example><code source="..\Examples\BeginGetFileSize.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.GetModifiedTime(System.String,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDate)">
            <summary>
            Gets the modified time of a remote file
            </summary>
            <param name="path">The full path to the file</param>
            <param name="type">Return the date in local timezone or UTC?  Use FtpDate.Original to disable timezone conversion.</param>
            <returns>The modified time, or <see cref="F:System.DateTime.MinValue"/> if there was a problem</returns>
            <example><code source="..\Examples\GetModifiedTime.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginGetModifiedTime(System.String,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDate,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to get the modified time of a remote file
            </summary>
            <param name="path">The full path to the file</param>
            <param name="type">Return the date in local timezone or UTC?  Use FtpDate.Original to disable timezone conversion.</param>
            <param name="callback">Async callback</param>
            <param name="state">State object</param>
            <returns>IAsyncResult</returns>
            <example><code source="..\Examples\BeginGetModifiedTime.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.EndGetModifiedTime(System.IAsyncResult)">
            <summary>
            Ends a call to <see cref="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginGetModifiedTime(System.String,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDate,System.AsyncCallback,System.Object)"/>
            </summary>
            <param name="ar">IAsyncResult returned from <see cref="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginGetModifiedTime(System.String,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDate,System.AsyncCallback,System.Object)"/></param>
            <returns>The modified time, or <see cref="F:System.DateTime.MinValue"/> if there was a problem</returns>
            <example><code source="..\Examples\BeginGetModifiedTime.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.SetModifiedTime(System.String,System.DateTime,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDate)">
            <summary>
            Changes the modified time of a remote file
            </summary>
            <param name="path">The full path to the file</param>
            <param name="date">The new modified date/time value</param>
            <param name="type">Is the date provided in local timezone or UTC? Use FtpDate.Original to disable timezone conversion.</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginSetModifiedTime(System.String,System.DateTime,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDate,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to get the modified time of a remote file
            </summary>
            <param name="path">The full path to the file</param>
            <param name="date">The new modified date/time value</param>
            <param name="type">Is the date provided in local timezone or UTC? Use FtpDate.Original to disable timezone conversion.</param>
            <param name="callback">Async callback</param>
            <param name="state">State object</param>
            <returns>IAsyncResult</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.EndSetModifiedTime(System.IAsyncResult)">
            <summary>
            Ends a call to <see cref="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginSetModifiedTime(System.String,System.DateTime,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDate,System.AsyncCallback,System.Object)"/>
            </summary>
            <param name="ar">IAsyncResult returned from <see cref="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.BeginSetModifiedTime(System.String,System.DateTime,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDate,System.AsyncCallback,System.Object)"/></param>
            <returns>The modified time, or <see cref="F:System.DateTime.MinValue"/> if there was a problem</returns>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.FluentFTP.IFtpClient">
            <summary>
            Interface for the FtpClient class. For detailed documentation of the methods, please see the FtpClient class.
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpEncryptionMode">
            <summary>
            Defines the type of encryption to use
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpEncryptionMode.None">
            <summary>
            Plain text.
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpEncryptionMode.Implicit">
            <summary>
            FTPS encryption is used from the start of the connection, port 990.
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpEncryptionMode.Explicit">
            <summary>
            Connection starts in plain text and FTPS encryption is enabled
            with the AUTH command immediately after the server greeting.
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpResponseType">
            <summary>
            The type of response the server responded with
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpResponseType.None">
            <summary>
            No response
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpResponseType.PositivePreliminary">
            <summary>
            Success
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpResponseType.PositiveCompletion">
            <summary>
            Success
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpResponseType.PositiveIntermediate">
            <summary>
            Success
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpResponseType.TransientNegativeCompletion">
            <summary>
            Temporary failure
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpResponseType.PermanentNegativeCompletion">
            <summary>
            Permanent failure
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpCapability">
            <summary>
            Server features
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpCapability.NONE">
            <summary>
            This server said it doesn't support anything!
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpCapability.MLSD">
            <summary>
            Supports the MLST command
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpCapability.SIZE">
            <summary>
            Supports the SIZE command
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpCapability.MDTM">
            <summary>
            Supports the MDTM command
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpCapability.REST">
            <summary>
            Supports download/upload stream resumes
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpCapability.UTF8">
            <summary>
            Supports UTF8
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpCapability.PRET">
            <summary>
            PRET Command used in distributed ftp server software DrFTPD
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpCapability.MFMT">
            <summary>
            Server supports the MFMT command for setting the
            modified date of an object on the server
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpCapability.MFCT">
            <summary>
            Server supports the MFCT command for setting the
            created date of an object on the server
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpCapability.MFF">
            <summary>
            Server supports the MFF command for setting certain facts
            about file system objects. If you need this command, it would
            probably be handy to query FEAT your self and have a look at
            the FtpReply.InfoMessages property to see which facts the server
            allows you to modify.
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpCapability.STAT">
            <summary>
            Server supports the STAT command
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpCapability.HASH">
            <summary>
            Support for the HASH command
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpCapability.MD5">
            <summary>
            Support for the non-standard MD5 command
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpCapability.XMD5">
            <summary>
            Support for the non-standard XMD5 command
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpCapability.XCRC">
            <summary>
            Support for the non-standard XCRC command
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpCapability.XSHA1">
            <summary>
            Support for the non-standard XSHA1 command
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpCapability.XSHA256">
            <summary>
            Support for the non-standard XSHA256 command
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpCapability.XSHA512">
            <summary>
            Support for the non-standard XSHA512 command
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpHashAlgorithm">
            <summary>
            Different types of hashing algorithms for computing checksums.
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpHashAlgorithm.NONE">
            <summary>
            HASH command is not supported
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpHashAlgorithm.SHA1">
            <summary>
            SHA-1
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpHashAlgorithm.SHA256">
            <summary>
            SHA-256
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpHashAlgorithm.SHA512">
            <summary>
            SHA-512
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpHashAlgorithm.MD5">
            <summary>
            MD5
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpHashAlgorithm.CRC">
            <summary>
            CRC
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpIpVersion">
            <summary>
            IP Versions to allow when connecting
            to a server.
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpIpVersion.IPv4">
            <summary>
            Internet Protocol Version 4
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpIpVersion.IPv6">
            <summary>
            Internet Protocol Version 6
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpIpVersion.ANY">
            <summary>
            Allow any supported version
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDataConnectionType">
            <summary>
            Data connection type
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDataConnectionType.AutoPassive">
            <summary>
            This type of data connection attempts to use the EPSV command
            and if the server does not support EPSV it falls back to the
            PASV command before giving up unless you are connected via IPv6
            in which case the PASV command is not supported.
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDataConnectionType.PASV">
            <summary>
            Passive data connection. EPSV is a better
            option if it's supported. Passive connections
            connect to the IP address dictated by the server
            which may or may not be accessible by the client
            for example a server behind a NAT device may
            give an IP address on its local network that
            is inaccessible to the client. Please note that IPv6
            does not support this type data connection. If you
            ask for PASV and are connected via IPv6 EPSV will
            automatically be used in its place.
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDataConnectionType.PASVEX">
            <summary>
            Same as PASV except the host supplied by the server is ignored
            and the data connection is made to the same address that the control
            connection is connected to. This is useful in scenarios where the
            server supplies a private/non-routable network address in the
            PASV response. It's functionally identical to EPSV except some
            servers may not implement the EPSV command. Please note that IPv6
            does not support this type data connection. If you
            ask for PASV and are connected via IPv6 EPSV will
            automatically be used in its place.
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDataConnectionType.EPSV">
            <summary>
            Extended passive data connection, recommended. Works
            the same as a PASV connection except the server
            does not dictate an IP address to connect to, instead
            the passive connection goes to the same address used
            in the control connection. This type of data connection
            supports IPv4 and IPv6.
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDataConnectionType.AutoActive">
            <summary>
            This type of data connection attempts to use the EPRT command
            and if the server does not support EPRT it falls back to the
            PORT command before giving up unless you are connected via IPv6
            in which case the PORT command is not supported.
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDataConnectionType.PORT">
            <summary>
            Active data connection, not recommended unless
            you have a specific reason for using this type.
            Creates a listening socket on the client which
            requires firewall exceptions on the client system
            as well as client network when connecting to a
            server outside of the client's network. In addition
            the IP address of the interface used to connect to the
            server is the address the server is told to connect to
            which, if behind a NAT device, may be inaccessible to
            the server. This type of data connection is not supported
            by IPv6. If you specify PORT and are connected via IPv6
            EPRT will automatically be used instead.
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDataConnectionType.EPRT">
            <summary>
            Extended active data connection, not recommended
            unless you have a specific reason for using this
            type. Creates a listening socket on the client
            which requires firewall exceptions on the client
            as well as client network when connecting to a 
            server outside of the client's network. The server
            connects to the IP address it sees the client coming
            from. This type of data connection supports IPv4 and IPv6.
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDataType">
            <summary>
            Type of data transfer to do
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDataType.ASCII">
            <summary>
            ASCII transfer
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDataType.Binary">
            <summary>
            Binary transfer
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpFileSystemObjectType">
            <summary>
            Type of file system of object
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpFileSystemObjectType.File">
            <summary>
            A file
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpFileSystemObjectType.Directory">
            <summary>
            A directory
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpFileSystemObjectType.Link">
            <summary>
            A symbolic link
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpPermission">
            <summary>
            Types of file permissions
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpPermission.None">
            <summary>
            No access
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpPermission.Execute">
            <summary>
            Executable
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpPermission.Write">
            <summary>
            Writable
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpPermission.Read">
            <summary>
            Readable
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSpecialPermissions">
            <summary>
            Types of special UNIX permissions
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSpecialPermissions.None">
            <summary>
            No special permissions are set
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSpecialPermissions.Sticky">
            <summary>
            Sticky bit is set
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSpecialPermissions.SetGroupID">
            <summary>
            SGID bit is set
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSpecialPermissions.SetUserID">
            <summary>
            SUID bit is set
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpParser">
            <summary>
            The type of response the server responded with
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpParser.Legacy">
            <summary>
            Use the legacy parser (for older projects that depend on the pre-2017 parser routines).
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpParser.Auto">
            <summary>
            Automatically detect the file listing parser to use based on the FTP server (SYST command).
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpParser.Machine">
            <summary>
            Machine listing parser, works on any FTP server supporting the MLST/MLSD commands.
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpParser.Windows">
            <summary>
            File listing parser for Windows/IIS.
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpParser.Unix">
            <summary>
            File listing parser for Unix.
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpParser.UnixAlt">
            <summary>
            Alternate parser for Unix. Use this if the default one does not work.
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpParser.VMS">
            <summary>
            File listing parser for Vax/VMS/OpenVMS.
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpParser.IBM">
            <summary>
            File listing parser for IBM OS400.
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpParser.NonStop">
            <summary>
            File listing parser for Tandem/Nonstop Guardian OS.
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListOption">
            <summary>
            Flags that can dictate how a file listing is performed
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListOption.Auto">
            <summary>
            Tries machine listings (MDTM command) if supported,
            and if not then falls back to OS-specific listings (LIST command)
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListOption.Modify">
            <summary>
            Load the modify date using MDTM when it could not
            be parsed from the server listing. This only pertains
            to servers that do not implement the MLSD command.
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListOption.Size">
            <summary>
            Load the file size using the SIZE command when it
            could not be parsed from the server listing. This
            only pertains to servers that do not support the
            MLSD command.
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListOption.SizeModify">
            <summary>
            Combines the Modify and Size flags
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListOption.AllFiles">
            <summary>
            Show hidden/dot files. This only pertains to servers
            that do not support the MLSD command. This option
            makes use the non standard -a parameter to LIST to
            tell the server to show hidden files. Since it's a
            non-standard option it may not always work. MLSD listings
            have no such option and whether or not a hidden file is
            shown is at the discretion of the server.
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListOption.ForceList">
            <summary>
            Force the use of OS-specific listings (LIST command) even if
            machine listings (MLSD command) are supported by the server
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListOption.NameList">
            <summary>
            Use the NLST command instead of LIST for a reliable file listing
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListOption.ForceNameList">
            <summary>
            Force the use of the NLST command (the slowest mode) even if machine listings
            and OS-specific listings are supported by the server
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListOption.DerefLinks">
            <summary>
            Try to dereference symbolic links, and stored the linked file/directory in FtpListItem.LinkObject
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListOption.UseLS">
            <summary>
            Sets the ForceList flag and uses `LS' instead of `LIST' as the
            command for getting a directory listing. This option overrides
            ForceNameList and ignores the AllFiles flag.
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListOption.Recursive">
            <summary>
            Gets files within subdirectories as well. Adds the -r option to the LIST command.
            Some servers may not support this feature.
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListOption.NoPath">
            <summary>
            Do not retrieve path when no path is supplied to GetListing(),
            instead just execute LIST with no path argument.
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListOption.IncludeSelfAndParent">
            <summary>
            Include two extra items into the listing, for the current directory (".")
            and the parent directory (".."). Meaningless unless you want these two
            items for some reason.
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpExists">
            <summary>
            Defines the behavior for uploading/downloading files that already exist
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpExists.NoCheck">
            <summary>
            Do not check if the file exists. A bit faster than the other options. Only use this if you are SURE that the file does not exist on the server.
            Otherwise it can cause the UploadFile method to hang due to filesize mismatch.
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpExists.Skip">
            <summary>
            Skip the file if it exists, without any more checks.
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpExists.Overwrite">
            <summary>
            Overwrite the file if it exists.
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpExists.Append">
            <summary>
            Append to the file if it exists, by checking the length and adding the missing data.
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpExists.AppendNoCheck">
            <summary>
            Append to the file, but don't check if it exists and add missing data.   This might be required if you don't have permissions on the server to list files in the folder.
            Only use this if you are SURE that the file does not exist on the server otherwise it can cause the UploadFile method to hang due to filesize mismatch.
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpTraceLevel">
            <summary>
            Defines the level of the tracing message.  Depending on the framework version this is translated
            to an equivalent logging level in System.Diagnostices (if available)
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpTraceLevel.Verbose">
            <summary>
            Used for logging Debug or Verbose level messages
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpTraceLevel.Info">
            <summary>
            Used for logging Informational messages
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpTraceLevel.Warn">
            <summary>
            Used for logging non-fatal or ignorable error messages
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpTraceLevel.Error">
            <summary>
            Used for logging Error messages that may need investigation 
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpError">
            <summary>
            Defines how multi-file processes should handle a processing error.
            </summary>
            <remarks><see cref="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpError.Stop"/> &amp; <see cref="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpError.Throw"/> Cannot Be Combined</remarks>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpError.None">
            <summary>
            No action is taken upon errors.  The method absorbs the error and continues.
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpError.DeleteProcessed">
            <summary>
            If any files have completed successfully (or failed after a partial download/upload) then should be deleted.  
            This will simulate an all-or-nothing transaction downloading or uploading multiple files.  If this option is not
            combined with <see cref="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpError.Stop"/> or <see cref="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpError.Throw"/> then the method will
            continue to process all items whether if they are successful or not and then delete everything if a failure was
            encountered at any point.
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpError.Stop">
            <summary>
            The method should stop processing any additional files and immediately return upon encountering an error.
            Cannot be combined with <see cref="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpError.Throw"/>
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpError.Throw">
            <summary>
            The method should stop processing any additional files and immediately throw the current error.
            Cannot be combined with <see cref="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpError.Stop"/>
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpVerify">
            <summary>
            Defines if additional verification and actions upon failure that 
            should be performed when uploading/downloading files using the high-level APIs.  Ignored if the 
            FTP server does not support any hashing algorithms.
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpVerify.None">
            <summary>
            No verification of the file is performed
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpVerify.Retry">
            <summary>
            The checksum of the file is verified, if supported by the server.
            If the checksum comparison fails then we retry the download/upload
            a specified amount of times before giving up. (See <see cref="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient.RetryAttempts"/>)
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpVerify.Delete">
            <summary>
            The checksum of the file is verified, if supported by the server.
            If the checksum comparison fails then the failed file will be deleted.
            If combined with <see cref="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpVerify.Retry"/>, then
            the deletion will occur if it fails upon the final retry.
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpVerify.Throw">
            <summary>
            The checksum of the file is verified, if supported by the server.
            If the checksum comparison fails then an exception will be thrown.
            If combined with <see cref="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpVerify.Retry"/>, then the throw will
            occur upon the failure of the final retry, and/or if combined with <see cref="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpVerify.Delete"/>
            the method will throw after the deletion is processed.
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpVerify.OnlyChecksum">
            <summary>
            The checksum of the file is verified, if supported by the server.
            If the checksum comparison fails then the method returns false and no other action is taken.
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDate">
            <summary>
            Defines if additional verification and actions upon failure that 
            should be performed when uploading/downloading files using the high-level APIs.  Ignored if the 
            FTP server does not support any hashing algorithms.
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDate.Original">
            <summary>
            The date is whatever the server returns, with no conversion performed.
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDate.Local">
            <summary>
            The date is converted to the local timezone, based on the TimeOffset property in FtpClient.
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDate.UTC">
            <summary>
            The date is converted to UTC, based on the TimeOffset property in FtpClient.
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpServer">
            <summary>
            Defines the type of the FTP server software.
            Add constants here as you add detection scripts for individual server types.
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpServer.Unknown">
            <summary>
            Unknown FTP server software
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpServer.PureFTPd">
            <summary>
            Definitely PureFTPd server
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpServer.VsFTPd">
            <summary>
            Definitely VsFTPd server
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpServer.ProFTPD">
            <summary>
            Definitely ProFTPD server
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpServer.FileZilla">
            <summary>
            Definitely FileZilla server
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpServer.OpenVMS">
            <summary>
            Definitely OpenVMS server
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpServer.WindowsCE">
            <summary>
            Definitely WindowsCE server
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpServer.WuFTPd">
            <summary>
            Definitely WuFTPd server
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSslValidation">
            <summary>
            Event is fired when a SSL certificate needs to be validated
            </summary>
            <param name="control">The control connection that triggered the event</param>
            <param name="e">Event args</param>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSocketStreamSslValidation">
            <summary>
            Event fired if a bad SSL certificate is encountered. This even is used internally; if you
            don't have a specific reason for using it you are probably looking for FtpSslValidation.
            </summary>
            <param name="stream"></param>
            <param name="e"></param>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSslValidationEventArgs">
            <summary>
            Event args for the FtpSslValidationError delegate
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSslValidationEventArgs.Certificate">
            <summary>
            The certificate to be validated
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSslValidationEventArgs.Chain">
            <summary>
            The certificate chain
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSslValidationEventArgs.PolicyErrors">
            <summary>
            Validation errors, if any.
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSslValidationEventArgs.Accept">
            <summary>
            Gets or sets a value indicating if this certificate should be accepted. The default
            value is false. If the certificate is not accepted, an AuthenticationException will
            be thrown.
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpException">
            <summary>
            FTP related error
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpException"/> class.
            </summary>
            <param name="message">The error message</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpException"/> class with an inner exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Must be implemented so every Serializer can Deserialize the Exception
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpCommandException">
            <summary>
            Exception triggered on command failures
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpCommandException.CompletionCode">
            <summary>
            Gets the completion code associated with the response
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpCommandException.ResponseType">
            <summary>
            The type of response received from the last command executed
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpCommandException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of a FtpResponseException
            </summary>
            <param name="code">Status code</param>
            <param name="message">Associated message</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpCommandException.#ctor(UnderAutomation.Fanuc.Ftp.FluentFTP.FtpReply)">
            <summary>
            Initializes a new instance of a FtpResponseException
            </summary>
            <param name="reply">The FtpReply to build the exception from</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpCommandException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Must be implemented so every Serializer can Deserialize the Exception
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSecurityNotAvailableException">
            <summary>
            Exception is thrown when encryption could not be negotiated by the server
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSecurityNotAvailableException.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSecurityNotAvailableException.#ctor(System.String)">
            <summary>
            Custom error message
            </summary>
            <param name="message">Error message</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSecurityNotAvailableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Must be implemented so every Serializer can Deserialize the Exception
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpHash">
            <summary>
            Represents a computed hash of an object
            on the FTP server. See the following link
            for more information:
            http://tools.ietf.org/html/draft-bryan-ftpext-hash-02
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpHash.Algorithm">
            <summary>
            Gets the algorithm that was used to compute the hash
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpHash.Value">
            <summary>
            Gets the computed hash returned by the server
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpHash.IsValid">
            <summary>
            Gets a value indicating if this object represents a
            valid hash response from the server.
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpHash.Verify(System.String)">
            <summary>
            Computes the hash for the specified file and compares
            it to the value in this object. CRC hashes are not supported 
            because there is no built-in support in the .net framework and
            a CRC implementation exceeds the scope of this project. If you
            attempt to call this on a CRC hash a <see cref="T:System.NotImplementedException"/> will
            be thrown.
            </summary>
            <param name="file">The file to compute the hash for</param>
            <returns>True if the computed hash matches what's stored in this object.</returns>
            <exception cref="T:System.NotImplementedException">Thrown if called on a CRC Hash</exception>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpHash.Verify(System.IO.Stream)">
            <summary>
            Computes the hash for the specified stream and compares
            it to the value in this object. CRC hashes are not supported 
            because there is no built-in support in the .net framework and
            a CRC implementation exceeds the scope of this project. If you
            attempt to call this on a CRC hash a <see cref="T:System.NotImplementedException"/> will
            be thrown.
            </summary>
            <param name="istream">The stream to compute the hash for</param>
            <returns>True if the computed hash matches what's stored in this object.</returns>
            <exception cref="T:System.NotImplementedException">Thrown if called on a CRC Hash</exception>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpHash.#ctor">
            <summary>
            Creates an empty instance.
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListItem">
            <summary>
            Represents a file system object on the server
            </summary>
            <example><code source="..\Examples\CustomParser.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListItem.#ctor">
            <summary>
            Blank constructor; Fill args manually.
            
            NOTE TO USER : You should not need to construct this class manually except in advanced cases. Typically constructed by GetListing().
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListItem.#ctor(System.String,System.String,System.Int64,System.Boolean,System.DateTime@)">
            <summary>
            Constructor with mandatory args filled.
            
            NOTE TO USER : You should not need to construct this class manually except in advanced cases. Typically constructed by GetListing().
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListItem.Type">
            <summary>
            Gets the type of file system object.
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListItem.FullName">
            <summary>
            Gets the full path name to the object.
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListItem.Name">
            <summary>
            Gets the name of the object.
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListItem.LinkTarget">
            <summary>
            Gets the target a symbolic link points to.
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListItem.LinkCount">
            <summary>
            Gets the number of links pointing to this file. Only supplied by Unix servers.
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListItem.LinkObject">
            <summary>
            Gets the object that the LinkTarget points to. This property is null unless you pass the
            <see cref="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListOption.DerefLinks"/> flag in which case GetListing() will try to resolve
            the target itself.
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListItem.Modified">
            <summary>
            Gets the last write time of the object.
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListItem.Created">
            <summary>
            Gets the created date of the object.
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListItem.Size">
            <summary>
            Gets the size of the object.
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListItem.SpecialPermissions">
            <summary>
            Gets special UNIX permissions such as Sticky, SUID and SGID.
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListItem.OwnerPermissions">
            <summary>
            Gets the owner permissions.
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListItem.GroupPermissions">
            <summary>
            Gets the group permissions.
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListItem.OthersPermissions">
            <summary>
            Gets the others permissions.
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListItem.RawPermissions">
            <summary>
            Gets the raw string received for the file permissions.
            Use this if the other properties are blank/invalid.
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListItem.Chmod">
            <summary>
            Gets the file permissions in the CHMOD format.
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListItem.RawGroup">
            <summary>
            Gets the raw string received for the file's GROUP permissions.
            Use this if the other properties are blank/invalid.
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListItem.RawOwner">
            <summary>
            Gets the raw string received for the file's OWNER permissions.
            Use this if the other properties are blank/invalid.
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListItem.Input">
            <summary>
            Gets the input string that was parsed to generate the
            values in this object.
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListItem.ToString">
            <summary>
            Returns a string representation of this object and its properties
            </summary>
            <returns>A string representing this object</returns>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListParser">
            <summary>
            Parses a line from a file listing using the first successful parser, or the specified parser.
            Returns an FtpListItem object representing the parsed line, or null if the line was unable to be parsed.
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListParser.client">
            <summary>
            the FTP connection that owns this parser
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListParser.system">
            <summary>
            which server type? (SYST)
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListParser.parser">
            <summary>
            current parser, or parser set by user
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListParser.detectedParser">
            <summary>
            parser calculated based on system type (SYST command)
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListParser.parserConfirmed">
            <summary>
            if we have detected that the current parser is valid
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListParser.parserCulture">
            <summary>
            which culture to read filenames with?
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListParser.timeOffset">
            <summary>
            what is the time offset between server/client?
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListParser.hasTimeOffset">
            <summary>
            any time offset between server/client?
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListParser.vmsBlocksize">
            <summary>
            VMS ONLY : the blocksize used to calculate the file
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListParser.vmsNameHasVersion">
            <summary>
            Is the version number returned as part of the filename?
            
            Some VMS FTP servers do not permit a file to be deleted unless
            the filename includes the version number. Note that directories are
            never returned with the version number.
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListParser.#ctor(UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient)">
            <summary>
            Initializes a new instance of the <see cref="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListParser"/> class.
            </summary>
            <param name="client">An existing <see cref="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient"/> object</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListParser.Init(System.String)">
            <summary>
            Try to auto-detect which parser is suitable given a system string.
            </summary>
            <param name="system">result of SYST command</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListParser.ParseMultiLine(System.String[],System.Boolean)">
            <summary>
            Parse raw file list from server into file objects, using the currently active parser.
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListParser.ParseSingleLine(System.String,System.String,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpCapability,System.Boolean)">
            <summary>
            Parse raw file from server into a file object, using the currently active parser.
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListParser.ValidateParser(System.String[])">
            <summary>
            Validate if the current parser is correct, or if another parser seems more appropriate.
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListParser.IsParserValid(UnderAutomation.Fanuc.Ftp.FluentFTP.FtpParser,System.String[])">
            <summary>
            Validate if the current parser is correct
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListParser.ParseLegacy(System.String,System.String,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpCapability)">
            <summary>
            Parses a line from a file listing using the first successful match in the Parsers collection.
            </summary>
            <param name="path">The source path of the file listing</param>
            <param name="buf">A line from the file listing</param>
            <param name="capabilities">Server capabilities</param>
            <returns>A FtpListItem object representing the parsed line, null if the line was
            unable to be parsed. If you have encountered an unsupported list type add a parser
            to the public static Parsers collection of FtpListItem.</returns>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListParser.m_parserLock">
            <summary>
            Used for synchronizing access to the Parsers collection
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListParser.InitParsers">
            <summary>
            Initializes the default list of parsers
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListParser.Parsers">
            <summary>
            Collection of parsers. Each parser object contains
            a regex string that uses named groups, i.e., (?&lt;group_name&gt;foobar).
            The support group names are modify for last write time, size for the
            size and name for the name of the file system object. Each group name is
            optional, if they are present then those values are retrieved from a 
            successful match. In addition, each parser contains a Type property
            which gets set in the FtpListItem object to distinguish between different
            types of objects.
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListParser.AddParser(UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListParser.Parser)">
            <summary>
            Adds a custom parser
            </summary>
            <param name="parser">The parser delegate to add</param>
            <example><code source="..\Examples\CustomParser.cs" lang="cs" /></example>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListParser.ClearParsers">
            <summary>
            Removes all parser delegates
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListParser.RemoveParser(UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListParser.Parser)">
            <summary>
            Removes the specified parser
            </summary>
            <param name="parser">The parser delegate to remove</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListParser.ParseUnixList(System.String,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpCapability)">
            <summary>
            Parses LIST format listings
            </summary>
            <param name="buf">A line from the listing</param>
            <param name="capabilities">Server capabilities</param>
            <returns>FtpListItem if the item is able to be parsed</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListParser.ParseDosList(System.String,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpCapability)">
            <summary>
            Parses IIS DOS format listings
            </summary>
            <param name="buf">A line from the listing</param>
            <param name="capabilities">Server capabilities</param>
            <returns>FtpListItem if the item is able to be parsed</returns>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListParser.Parser">
            <summary>
            Ftp listing line parser
            </summary>
            <param name="line">The line from the listing</param>
            <param name="capabilities">The server capabilities</param>
            <returns>FtpListItem if the line can be parsed, null otherwise</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListParser.ParseMachineList(System.String,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpCapability)">
            <summary>
            Parses MLSD/MLST format listings
            </summary>
            <param name="buf">A line from the listing</param>
            <param name="capabilities">Server capabilities</param>
            <returns>FtpListItem if the item is able to be parsed</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListParser.ParseUnix(System.String)">
            <summary>
            Parses Unix format listings
            </summary>
            <param name="raw">A line from the listing</param>
            <returns>FtpListItem if the item is able to be parsed</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListParser.ParseUnixAlt(System.String)">
            <summary>
            Parses Unix format listings with alternate parser
            </summary>
            <param name="raw">A line from the listing</param>
            <returns>FtpListItem if the item is able to be parsed</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListParser.ParseWindows(System.String)">
            <summary>
            Parses IIS/DOS format listings
            </summary>
            <param name="raw">A line from the listing</param>
            <returns>FtpListItem if the item is able to be parsed</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListParser.ParseVMS(System.String)">
            <summary>
            Parses Vax/VMS format listings
            </summary>
            <param name="raw">A line from the listing</param>
            <returns>FtpListItem if the item is able to be parsed</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListParser.ParseNonstop(System.String)">
            <summary>
            Parses NonStop format listings
            </summary>
            <param name="raw">A line from the listing</param>
            <returns>FtpListItem if the item is able to be parsed</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListParser.ParseIBM(System.String)">
            <summary>
            Parses IBM OS/400 format listings
            </summary>
            <param name="raw">A line from the listing</param>
            <returns>FtpListItem if the item is able to be parsed</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListParser.SplitString(System.String)">
            <summary>
            Split into fields by splitting on strings
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpListParser.FixDateVMS(System.String[])">
            <summary> Fix the date string to make the month camel case</summary>
            <param name="fields">array of fields</param>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpReply">
            <summary>
            Represents a reply to an event on the server
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpReply.Type">
            <summary>
            The type of response received from the last command executed
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpReply.Code">
            <summary>
            The status code of the response
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpReply.Message">
            <summary>
            The message, if any, that the server sent with the response
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpReply.InfoMessages">
            <summary>
            Informational messages sent from the server
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpReply.Success">
            <summary>
            General success or failure of the last command executed
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpReply.ErrorMessage">
            <summary>
            Gets the error message including any informational output
            that was sent by the server. Sometimes the final response
            line doesn't contain anything informative as to what was going
            on with the server. Instead it may send information messages so
            in an effort to give as meaningful as a response as possible
            the informational messages will be included in the error.
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpTrace">
            <summary>
            Used for transaction logging and debug information.
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpTrace.FlushOnWrite">
            <summary>
            Should the trace listeners be flushed immediately after writing to them?
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpTrace.LogPrefix">
            <summary>
            Should the log entries be written with a prefix of "UnderAutomation.Fanuc.Ftp.FluentFTP"?
            Useful if you have a single TraceListener shared across multiple libraries.
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpTrace.AddListener(System.Diagnostics.TraceListener)">
            <summary>
            Add a TraceListner to the collection. You can use one of the predefined
            TraceListeners in the System.Diagnostics namespace, such as ConsoleTraceListener
            for logging to the console, or you can write your own deriving from 
            System.Diagnostics.TraceListener.
            </summary>
            <param name="listener">The TraceListener to add to the collection</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpTrace.RemoveListener(System.Diagnostics.TraceListener)">
            <summary>
            Remove the specified TraceListener from the collection
            </summary>
            <param name="listener">The TraceListener to remove from the collection.</param>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpTrace.LogFunctions">
            <summary>
            Should the function calls be logged in Verbose mode?
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpTrace.LogIP">
            <summary>
            Should the FTP server IP addresses be included in the logs?
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpTrace.LogUserName">
            <summary>
            Should the FTP usernames be included in the logs?
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpTrace.LogPassword">
            <summary>
            Should the FTP passwords be included in the logs?
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpTrace.EnableTracing">
            <summary>
            Should we trace at all?
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpTrace.Write(System.String)">
            <summary>
            Write to the TraceListeners
            </summary>
            <param name="message">The message to write</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpTrace.WriteLine(System.Object)">
            <summary>
            Write to the TraceListeners
            </summary>
            <param name="message">The message to write</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpTrace.WriteLine(UnderAutomation.Fanuc.Ftp.FluentFTP.FtpTraceLevel,System.Object)">
            <summary>
            Write to the TraceListeners
            </summary>
            <param name="eventType">The type of tracing event</param>
            <param name="message">The message to write</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpTrace.WriteStatus(UnderAutomation.Fanuc.Ftp.FluentFTP.FtpTraceLevel,System.Object)">
            <summary>
            Write to the TraceListeners, adding an automatic prefix to the message based on the `eventType`
            </summary>
            <param name="eventType">The type of tracing event</param>
            <param name="message">The message to write</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpTrace.WriteFunc(System.String,System.Object[])">
            <summary>
            Write to the TraceListeners, for the purpose of logging a API function call
            </summary>
            <param name="function">The name of the API function</param>
            <param name="args">The args passed to the function</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpTrace.Write(UnderAutomation.Fanuc.Ftp.FluentFTP.FtpTraceLevel,System.String)">
            <summary>
            Write to the TraceListeners
            </summary>
            <param name="eventType">The type of tracing event</param>
            <param name="message">A formattable string to write</param>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.FluentFTP.Proxy.FtpClientHttp11Proxy">
            <summary> A FTP client with a HTTP 1.1 proxy implementation. </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.Proxy.FtpClientHttp11Proxy.#ctor(UnderAutomation.Fanuc.Ftp.FluentFTP.Proxy.ProxyInfo)">
            <summary> A FTP client with a HTTP 1.1 proxy implementation </summary>
            <param name="proxy">Proxy information</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.Proxy.FtpClientHttp11Proxy.Handshake">
            <summary> Redefine the first dialog: HTTP Frame for the HTTP 1.1 Proxy </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.Proxy.FtpClientHttp11Proxy.Create">
            <summary>
            Creates a new instance of this class. Useful in FTP proxy classes.
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.Proxy.FtpClientHttp11Proxy.Connect(UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSocketStream)">
            <summary>
            Connects to the server using an existing <see cref="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSocketStream"/>
            </summary>
            <param name="stream">The existing socket stream</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.Proxy.FtpClientHttp11Proxy.Connect(UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSocketStream,System.String,System.Int32,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpIpVersion)">
            <summary>
            Connects to the server using an existing <see cref="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSocketStream"/>
            </summary>
            <param name="stream">The existing socket stream</param>
            <param name="host">Host name</param>
            <param name="port">Port number</param>
            <param name="ipVersions">IP version to use</param>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.FluentFTP.Proxy.FtpClientProxy">
            <summary>
            Abstraction of an FtpClient with a proxy
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.Proxy.FtpClientProxy.Proxy">
            <summary> The proxy connection info. </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.Proxy.FtpClientProxy.#ctor(UnderAutomation.Fanuc.Ftp.FluentFTP.Proxy.ProxyInfo)">
            <summary> A FTP client with a HTTP 1.1 proxy implementation </summary>
            <param name="proxy">Proxy information</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.Proxy.FtpClientProxy.Connect(UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSocketStream)">
            <summary> Redefine connect for FtpClient : authentication on the Proxy  </summary>
            <param name="stream">The socket stream.</param>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.FluentFTP.Proxy.FtpClientUserAtHostProxy">
            <summary> A FTP client with a user@host proxy identification. </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.Proxy.FtpClientUserAtHostProxy.#ctor(UnderAutomation.Fanuc.Ftp.FluentFTP.Proxy.ProxyInfo)">
            <summary> A FTP client with a user@host proxy identification. </summary>
            <param name="proxy">Proxy information</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.Proxy.FtpClientUserAtHostProxy.Create">
            <summary>
            Creates a new instance of this class. Useful in FTP proxy classes.
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.Proxy.FtpClientUserAtHostProxy.Handshake">
            <summary> Redefine the first dialog: auth with proxy information </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.FluentFTP.Proxy.FtpClientUserAtHostProxyBlueCoat">
            <summary> 
            A FTP client with a user@host proxy identification, that works with Blue Coat FTP Service servers.
            
            The 'blue coat variant' forces the client to wait for a 220 FTP response code in 
            the handshake phase.
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.Proxy.FtpClientUserAtHostProxyBlueCoat.#ctor(UnderAutomation.Fanuc.Ftp.FluentFTP.Proxy.ProxyInfo)">
            <summary> A FTP client with a user@host proxy identification. </summary>
            <param name="proxy">Proxy information</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.Proxy.FtpClientUserAtHostProxyBlueCoat.Create">
            <summary>
            Creates a new instance of this class. Useful in FTP proxy classes.
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.Proxy.FtpClientUserAtHostProxyBlueCoat.Handshake">
            <summary> Redefine the first dialog: auth with proxy information </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.FluentFTP.Proxy.ProxyInfo">
            <summary> POCO holding proxy information</summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.Proxy.ProxyInfo.Host">
            <summary> Proxy host name </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.Proxy.ProxyInfo.Port">
            <summary> Proxy port </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.Proxy.ProxyInfo.Credentials">
            <summary> Proxy login credentials </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDataStream">
            <summary>
            Base class for data stream connections
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDataStream.CommandStatus">
            <summary>
            Gets the status of the command that was used to open
            this data channel
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDataStream.ControlConnection">
            <summary>
            Gets or sets the control connection for this data stream. Setting
            the control connection causes the object to be cloned and a new
            connection is made to the server to carry out the task. This ensures
            that multiple streams can be opened simultaneously.
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDataStream.Length">
            <summary>
            Gets or sets the length of the stream. Only valid for file transfers
            and only valid on servers that support the Size command.
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDataStream.Position">
            <summary>
            Gets or sets the position of the stream
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDataStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads data off the stream
            </summary>
            <param name="buffer">The buffer to read into</param>
            <param name="offset">Where to start in the buffer</param>
            <param name="count">Number of bytes to read</param>
            <returns>The number of bytes read</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDataStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes data to the stream
            </summary>
            <param name="buffer">The buffer to write to the stream</param>
            <param name="offset">Where to start in the buffer</param>
            <param name="count">The number of bytes to write to the buffer</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDataStream.SetLength(System.Int64)">
            <summary>
            Sets the length of this stream
            </summary>
            <param name="value">Value to apply to the Length property</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDataStream.SetPosition(System.Int64)">
            <summary>
            Sets the position of the stream. Intended to be used
            internally by FtpControlConnection.
            </summary>
            <param name="pos">The position</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDataStream.Close">
            <summary>
            Closes the connection and reads the server's reply
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDataStream.#ctor(UnderAutomation.Fanuc.Ftp.FluentFTP.FtpClient)">
            <summary>
            Creates a new data stream object
            </summary>
            <param name="conn">The control connection to be used for carrying out this operation</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpDataStream.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSocketStream">
            <summary>
            Stream class used for talking. Used by FtpClient, extended by FtpDataStream
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSocketStream.m_lastActivity">
            <summary>
            Used for tacking read/write activity on the socket
            to determine if Poll() should be used to test for
            socket connectivity. The socket in this class will
            not know it has been disconnected if the remote host
            closes the connection first. Using Poll() avoids 
            the exception that would be thrown when trying to
            read or write to the disconnected socket.
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSocketStream.Socket">
            <summary>
            The socket used for talking
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSocketStream.SocketPollInterval">
            <summary>
            Gets or sets the length of time in milliseconds
            that must pass since the last socket activity
            before calling Poll() on the socket to test for
            connectivity. Setting this interval too low will
            have a negative impact on performance. Setting this
            interval to 0 disables Poll()'ing all together.
            The default value is 15 seconds.
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSocketStream.SocketDataAvailable">
            <summary>
            Gets the number of available bytes on the socket, 0 if the
            socket has not been initialized. This property is used internally
            by FtpClient in an effort to detect disconnections and gracefully
            reconnect the control connection.
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSocketStream.IsConnected">
            <summary>
            Gets a value indicating if this socket stream is connected
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSocketStream.IsEncrypted">
            <summary>
            Gets a value indicating if encryption is being used
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSocketStream.NetworkStream">
            <summary>
            The non-encrypted stream
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSocketStream.SslStream">
            <summary>
            The encrypted stream
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSocketStream.BaseStream">
            <summary>
            Gets the underlying stream, could be a NetworkStream or SslStream
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSocketStream.CanRead">
            <summary>
            Gets a value indicating if this stream can be read
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSocketStream.CanSeek">
            <summary>
            Gets a value indicating if this stream if seekable
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSocketStream.CanWrite">
            <summary>
            Gets a value indicating if this stream can be written to
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSocketStream.Length">
            <summary>
            Gets the length of the stream
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSocketStream.Position">
            <summary>
            Gets the current position of the stream. Trying to
            set this property throws an InvalidOperationException()
            </summary>
        </member>
        <member name="E:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSocketStream.ValidateCertificate">
            <summary>
            Event is fired when a SSL certificate needs to be validated
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSocketStream.ReadTimeout">
            <summary>
            Gets or sets the amount of time to wait for a read operation to complete. Default
            value is Timeout.Infinite.
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSocketStream.ConnectTimeout">
            <summary>
            Gets or sets the length of time milliseconds to wait
            for a connection succeed before giving up. The default
            is 30000 (30 seconds).
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSocketStream.LocalEndPoint">
            <summary>
            Gets the local end point of the socket
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSocketStream.RemoteEndPoint">
            <summary>
            Gets the remote end point of the socket
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSocketStream.OnValidateCertificate(System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
            <summary>
            Fires the SSL certificate validation event
            </summary>
            <param name="certificate">Certificate being validated</param>
            <param name="chain">Certificate chain</param>
            <param name="errors">Policy errors if any</param>
            <returns>True if it was accepted, false otherwise</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSocketStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Throws an InvalidOperationException
            </summary>
            <param name="offset">Ignored</param>
            <param name="origin">Ignored</param>
            <returns></returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSocketStream.SetLength(System.Int64)">
            <summary>
            Throws an InvalidOperationException
            </summary>
            <param name="value">Ignored</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSocketStream.Flush">
            <summary>
            Flushes the stream
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSocketStream.RawSocketRead(System.Byte[])">
            <summary>
            Bypass the stream and read directly off the socket.
            </summary>
            <param name="buffer">The buffer to read into</param>
            <returns>The number of bytes read</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSocketStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads data from the stream
            </summary>
            <param name="buffer">Buffer to read into</param>
            <param name="offset">Where in the buffer to start</param>
            <param name="count">Number of bytes to be read</param>
            <returns>The amount of bytes read from the stream</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSocketStream.ReadLine(System.Text.Encoding)">
            <summary>
            Reads a line from the socket
            </summary>
            <param name="encoding">The type of encoding used to convert from byte[] to string</param>
            <returns>A line from the stream, null if there is nothing to read</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSocketStream.ReadAllLines(System.Text.Encoding,System.Int32)">
            <summary>
            Reads all line from the socket
            </summary>
            <param name="encoding">The type of encoding used to convert from byte[] to string</param>
            <param name="bufferSize">The size of the buffer</param>
            <returns>A list of lines from the stream</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSocketStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes data to the stream
            </summary>
            <param name="buffer">Buffer to write to stream</param>
            <param name="offset">Where in the buffer to start</param>
            <param name="count">Number of bytes to be read</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSocketStream.WriteLine(System.Text.Encoding,System.String)">
            <summary>
            Writes a line to the stream using the specified encoding
            </summary>
            <param name="encoding">Encoding used for writing the line</param>
            <param name="buf">The data to write</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSocketStream.Dispose(System.Boolean)">
            <summary>
            Disconnects from server
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSocketStream.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Boolean)">
            <summary>
            Sets socket options on the underlying socket
            </summary>
            <param name="level">SocketOptionLevel</param>
            <param name="name">SocketOptionName</param>
            <param name="value">SocketOptionValue</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSocketStream.Connect(System.String,System.Int32,UnderAutomation.Fanuc.Ftp.FluentFTP.FtpIpVersion)">
            <summary>
            Connect to the specified host
            </summary>
            <param name="host">The host to connect to</param>
            <param name="port">The port to connect to</param>
            <param name="ipVersions">Internet Protocol versions to support during the connection phase</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSocketStream.ActivateEncryption(System.String)">
            <summary>
            Activates SSL on this stream using default protocols. Fires the ValidateCertificate event. 
            If this event is not handled and there are SslPolicyErrors present, the certificate will 
            not be accepted.
            </summary>
            <param name="targethost">The host to authenticate the certificate against</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSocketStream.ActivateEncryption(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection)">
            <summary>
            Activates SSL on this stream using default protocols. Fires the ValidateCertificate event.
            If this event is not handled and there are SslPolicyErrors present, the certificate will 
            not be accepted.
            </summary>
            <param name="targethost">The host to authenticate the certificate against</param>
            <param name="clientCerts">A collection of client certificates to use when authenticating the SSL stream</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSocketStream.ActivateEncryption(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols)">
            <summary>
            Activates SSL on this stream using the specified protocols. Fires the ValidateCertificate event.
            If this event is not handled and there are SslPolicyErrors present, the certificate will 
            not be accepted.
            </summary>
            <param name="targethost">The host to authenticate the certificate against</param>
            <param name="clientCerts">A collection of client certificates to use when authenticating the SSL stream</param>
            <param name="sslProtocols">A bitwise parameter for supported encryption protocols.</param>
            <exception cref="T:System.Security.Authentication.AuthenticationException">Thrown when authentication fails</exception>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSocketStream.DeactivateEncryption">
            <summary>
            Deactivates SSL on this stream using the specified protocols and reverts back to plain-text FTP.
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSocketStream.Listen(System.Net.IPAddress,System.Int32)">
            <summary>
            Instructs this stream to listen for connections on the specified address and port
            </summary>
            <param name="address">The address to listen on</param>
            <param name="port">The port to listen on</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSocketStream.Accept">
            <summary>
            Accepts a connection from a listening socket
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSocketStream.BeginAccept(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously accepts a connection from a listening socket
            </summary>
            <param name="callback"></param>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSocketStream.EndAccept(System.IAsyncResult)">
            <summary>
            Completes a BeginAccept() operation
            </summary>
            <param name="ar">IAsyncResult returned from BeginAccept</param>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpSslStream">
            <summary>
            .NET SslStream doesn't close TLS connection properly.
            It does not send the close_notify alert before closing the connection.
            FtpSslStream uses unsafe code to do that.
            This is required when we want to downgrade the connection to plaintext using CCC command.
            Thanks to Neco @ https://stackoverflow.com/questions/237807/net-sslstream-doesnt-close-tls-connection-properly/22626756#22626756
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.SslDirectCall.CloseNotify(System.Net.Security.SslStream)">
            <summary>
            Send an SSL close_notify alert.
            </summary>
            <param name="sslStream"></param>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpExtensions">
            <summary>
            Extension methods related to FTP tasks
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpExtensions.GetFtpPath(System.String)">
            <summary>
            Converts the specified path into a valid FTP file system path
            </summary>
            <param name="path">The file system path</param>
            <returns>A path formatted for FTP</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpExtensions.GetFtpPath(System.String,System.String[])">
            <summary>
            Creates a valid FTP path by appending the specified segments to this string
            </summary>
            <param name="path">This string</param>
            <param name="segments">The path segments to append</param>
            <returns>A valid FTP path</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpExtensions.GetFtpDirectoryName(System.String)">
            <summary>
            Gets the parent directory path (formatted for a FTP server)
            </summary>
            <param name="path">The path</param>
            <returns>The parent directory path</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpExtensions.GetFtpFileName(System.String)">
            <summary>
            Gets the file name and extension from the path
            </summary>
            <param name="path">The full path to the file</param>
            <returns>The file name</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpExtensions.GetFtpDate(System.String,System.Globalization.DateTimeStyles)">
            <summary>
            Tries to convert the string FTP date representation into a <see cref="T:System.DateTime"/> object
            </summary>
            <param name="date">The date</param>
            <param name="style">UTC/Local Time</param>
            <returns>A <see cref="T:System.DateTime"/> object representing the date, or <see cref="F:System.DateTime.MinValue"/> if there was a problem</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpExtensions.FileSizeToString(System.Int32)">
            <summary>
            Converts a file size in bytes to a string representation (eg. 12345 becomes 12.3 KB)
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpExtensions.FileSizeToString(System.UInt32)">
            <summary>
            Converts a file size in bytes to a string representation (eg. 12345 becomes 12.3 KB)
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpExtensions.FileSizeToString(System.UInt64)">
            <summary>
            Converts a file size in bytes to a string representation (eg. 12345 becomes 12.3 KB)
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpExtensions.FileSizeToString(System.Int64)">
            <summary>
            Converts a file size in bytes to a string representation (eg. 12345 becomes 12.3 KB)
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpExtensions.IsValidCombination(UnderAutomation.Fanuc.Ftp.FluentFTP.FtpError)">
            <summary>
            Validates that the FtpError flags set are not in an invalid combination.
            </summary>
            <param name="options">The error handling options set</param>
            <returns>True if a valid combination, otherwise false</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpExtensions.IsNullOrWhiteSpace(System.String)">
            <summary>
            Checks if every character in the string is whitespace, or the string is null.
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpExtensions.IsBlank(System.String)">
            <summary>
            Checks if the string is null or 0 length.
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpExtensions.Join(System.String[],System.String)">
            <summary>
            Join the given strings by a delimiter.
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpExtensions.Join(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Join the given strings by a delimiter.
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpExtensions.AddPrefix(System.String[],System.String,System.Boolean)">
            <summary>
            Adds a prefix to the given strings, returns a new array.
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpExtensions.AddPrefix(System.Collections.Generic.List{System.String},System.String,System.Boolean)">
            <summary>
            Adds a prefix to the given strings, returns a new array.
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FluentFTP.FtpExtensions.ItemsToString(System.Object[])">
            <summary>
            Adds a prefix to the given strings, returns a new array.
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.FtpClient">
            <summary>
            FTP Client connection to a robot
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FtpClient.#ctor">
            <summary>
            Instanciate a new FTP client connection
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.FtpClient.Connect(System.String,System.String,System.String)">
            <summary>
            Connect to a robot
            </summary>
            <param name="ip">IP or network name of the robot</param>
            <param name="user">FTP username</param>
            <param name="password">FTP password for username</param>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.Internal.FtpClientBase">
            <summary>
            Base class for FTP features
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Internal.FtpClientBase.KnownFiles">
            <summary>
            Provides functions to read and decode Fanuc files
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Internal.FtpClientBase.IP">
            <summary>
            Connect robot IP address or host name
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Internal.FtpClientBase.ConnectInternal(System.String,System.String,System.String,System.Int32)">
            <summary>
            Connect to a robot
            </summary>
            <param name="ip">IP or network name of the robot</param>
            <param name="user">FTP username</param>
            <param name="password">FTP password for username</param>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.Internal.FtpClientBase.Connected">
            <summary>
            Indicates that FTP connection is active
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Internal.FtpClientBase.Disconnect">
            <summary>
            Disconnects from FTP server
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.Internal.FtpClientBase.OnProgressDelegate">
            <summary>
            Delegate to track upload progress. The value provided is in the range 0 to 100
            </summary>
            <param name="progress">The value provided is in the range 0 to 100</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Internal.FtpClientBase.Upload(System.IO.Stream,System.String,System.Boolean,UnderAutomation.Fanuc.Ftp.Internal.FtpClientBase.OnProgressDelegate)">
            <summary>
            Uploads the specified stream as a file onto the server.
            High-level API that takes care of various edge cases internally.
            Supports very large files since it uploads data in chunks.
            It overwrites file if it already exists.
            </summary>
            <param name="fileStream">The full data of the file, as a stream</param>
            <param name="remotePath">The full or relative path to the file on the server</param>
            <param name="createRemoteDir">Create the remote directory if it does not exist. Slows down upload due to additional checks required.</param>
            <param name="progress">Track upload progress. The value provided is in the range 0 to 100, indicating the percentage of the file transferred. If the progress is indeterminate, -1 is sent.</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Internal.FtpClientBase.Upload(System.Byte[],System.String,System.Boolean,UnderAutomation.Fanuc.Ftp.Internal.FtpClientBase.OnProgressDelegate)">
            <summary>
            Uploads the specified byte array as a file onto the server.
            High-level API that takes care of various edge cases internally.
            Supports very large files since it uploads data in chunks.
            It overwrites file if it already exists.
            </summary>
            <param name="fileData">The full data of the file, as a byte array</param>
            <param name="remotePath">The full or relative path to the file on the server</param>
            <param name="createRemoteDir">Create the remote directory if it does not exist. Slows down upload due to additional checks required.</param>
            <param name="progress">Track upload progress. The value provided is in the range 0 to 100, indicating the percentage of the file transferred. If the progress is indeterminate, -1 is sent.</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Internal.FtpClientBase.UploadFile(System.String,System.String,System.Boolean,UnderAutomation.Fanuc.Ftp.Internal.FtpClientBase.OnProgressDelegate)">
            <summary>
            Uploads the specified file directly onto the server.
            High-level API that takes care of various edge cases internally.
            Supports very large files since it uploads data in chunks.
            </summary>
            <param name="localPath">The full or relative path to the file on the local file system</param>
            <param name="remotePath">The full or relative path to the file on the server</param>
            <param name="createRemoteDir">Create the remote directory if it does not exist. Slows down upload due to additional checks required.</param>
            <param name="progress">Track upload progress. The value provided is in the range 0 to 100, indicating the percentage of the file transferred. If the progress is indeterminate, -1 is sent.</param>
            <returns>If true then the file was uploaded, false otherwise.</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Internal.FtpClientBase.Download(System.Byte[]@,System.String,UnderAutomation.Fanuc.Ftp.Internal.FtpClientBase.OnProgressDelegate)">
            <summary>
            Downloads the specified file and return the raw byte array.
            High-level API that takes care of various edge cases internally.
            Supports very large files since it downloads data in chunks.
            </summary>
            <param name="outBytes">The variable that will receive the bytes.</param>
            <param name="remotePath">The full or relative path to the file on the server</param>
            <param name="progress">Track download progress. The value provided is in the range 0 to 100, indicating the percentage of the file transferred. If the progress is indeterminate, -1 is sent.</param>
            <returns>If true then the file was downloaded, false otherwise.</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Internal.FtpClientBase.Download(System.IO.Stream,System.String,UnderAutomation.Fanuc.Ftp.Internal.FtpClientBase.OnProgressDelegate)">
            <summary>
            Downloads the specified file into the specified stream.
            High-level API that takes care of various edge cases internally.
            Supports very large files since it downloads data in chunks.
            </summary>
            <param name="outStream">The stream that the file will be written to. Provide a new MemoryStream if you only want to read the file into memory.</param>
            <param name="remotePath">The full or relative path to the file on the server</param>
            <param name="progress">Track download progress. The value provided is in the range 0 to 100, indicating the percentage of the file transferred. If the progress is indeterminate, -1 is sent.</param>
            <returns>If true then the file was downloaded, false otherwise.</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Internal.FtpClientBase.DownloadFile(System.String,System.String,UnderAutomation.Fanuc.Ftp.Internal.FtpClientBase.OnProgressDelegate)">
            <summary>
            Downloads the specified file onto the local file system.
            High-level API that takes care of various edge cases internally.
            Supports very large files since it downloads data in chunks.
            It overwrites the file if it already exists.
            </summary>
            <param name="localPath">The full or relative path to the file on the local file system</param>
            <param name="remotePath">The full or relative path to the file on the server</param>
            <param name="progress">Provide an implementation of IProgress to track download progress. The value provided is in the range 0 to 100, indicating the percentage of the file transferred. If the progress is indeterminate, -1 is sent.</param>
            <returns>If true then the file was downloaded, false otherwise.</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Internal.FtpClientBase.FileExists(System.String)">
            <summary>
            Checks if a file exists on the server.
            </summary>
            <param name="path">The full or relative path to the file</param>
            <returns>True if the file exists</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Internal.FtpClientBase.DirectoryExists(System.String)">
            <summary>
            Tests if the specified directory exists on the server. This
            method works by trying to change the working directory to
            the path specified. If it succeeds, the directory is changed
            back to the old working directory and true is returned. False
            is returned otherwise and since the CWD failed it is assumed
            the working directory is still the same.
            </summary>
            <param name="path">The path of the directory</param>
            <returns>True if it exists, false otherwise.</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Internal.FtpClientBase.CreateDirectory(System.String)">
            <summary>
            Creates a directory on the server. If the preceding
            directories do not exist, then they are created.
            </summary>
            <param name="path">The full or relative path to the new remote directory</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Internal.FtpClientBase.DeleteDirectory(System.String)">
            <summary>
            Deletes the specified directory and all its contents.
            </summary>
            <param name="path">The full or relative path of the directory to delete</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Internal.FtpClientBase.DeleteFile(System.String)">
            <summary>
            Deletes a file on the server
            </summary>
            <param name="path">The full or relative path to the file</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Internal.FtpClientBase.GetListing(System.String)">
            <summary>
            Gets a file listing from the server. Each <see cref="T:UnderAutomation.Fanuc.Ftp.FtpListItem"/> object returned
            contains information about the file that was able to be retrieved. 
            </summary>
            <param name="path">The path of the directory to list</param>
            <returns>An array of FtpListItem objects</returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.Ftp.Internal.FtpClientBase.GetObjectInfo(System.String)">
            <summary>
            Returns information about a file system object. Returns null if the server response can't
            be parsed or the server returns a failure completion code. The error for a failure
            is logged with FtpTrace. No exception is thrown on error because that would negate
            the usefulness of this method for checking for the existence of an object.
            </summary>
            <param name="path">The path of the file or folder</param>
            <returns>A FtpListItem object</returns>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.Internal.FtpClientInternal">
            <summary>
            Internal implementation of FTP Client
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.FtpListItem">
            <summary>
            Represents a file system object on the server
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FtpListItem.Size">
            <summary>
            Gets the size of the object.
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FtpListItem.Chmod">
            <summary>
            Gets the file permissions in the CHMOD format.
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FtpListItem.Created">
            <summary>
            Gets the created date of the object.
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FtpListItem.FullName">
            <summary>
            Gets the full path name to the object.
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FtpListItem.Name">
            <summary>
            Gets name to the object.
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FtpListItem.Modified">
            <summary>
            Gets the last write time of the object.
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.Ftp.FtpListItem.Type">
            <summary>
            Gets the type of file system object.
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.Ftp.FtpFileSystemObjectType">
            <summary>
            Type of file system of object
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FtpFileSystemObjectType.File">
            <summary>
            A file
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FtpFileSystemObjectType.Directory">
            <summary>
            A directory
            </summary>
        </member>
        <member name="F:UnderAutomation.Fanuc.Ftp.FtpFileSystemObjectType.Link">
            <summary>
            A symbolic link
            </summary>
        </member>
        <member name="T:UnderAutomation.Fanuc.TelnetKcl.Internal.TelnetKclClientBase">
            <summary>
            Base class for Telnet KCL client
            </summary>
        </member>
        <member name="P:UnderAutomation.Fanuc.TelnetKcl.Internal.TelnetKclClientBase.IP">
            <summary>
            Connect robot IP address or host name
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.TelnetKcl.Internal.TelnetKclClientBase.ConnectInternal(System.String,System.String,System.Int32)">
            <summary>
            Connect to a robot
            </summary>
            <param name="ip">IP or network name of the robot</param>
            <param name="telnetKclPassword">Telnet password associated with KCL user</param>
        </member>
        <member name="P:UnderAutomation.Fanuc.TelnetKcl.Internal.TelnetKclClientBase.Connected">
            <summary>
            Is Telnet client connected
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.TelnetKcl.Internal.TelnetKclClientBase.Disconnect">
            <summary>
            Disconnect Telnet client from robot
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.TelnetKcl.Internal.TelnetKclClientBase.Abort(System.String,System.Boolean)">
            <summary>
            Aborts the specified running or paused task. If prog_ name is not specified, the default program Is used.
            Execution of the current program statement Is completed before the task aborts except for the current motion, DELAY, WAIT, Or READ statements, which are canceled.
            </summary>
            <param name="program">The name of any KAREL or TP program which is a task</param>
            <param name="force">Aborts all running or paused tasks</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.TelnetKcl.Internal.TelnetKclClientBase.AbortAll(System.Boolean)">
            <summary>
            Aborts all running or paused tasks.
            Execution of the current program statement Is completed before the task aborts except for the current motion, DELAY, WAIT, Or READ statements, which are canceled.
            </summary>
            <param name="force">Aborts all running or paused tasks</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.TelnetKcl.Internal.TelnetKclClientBase.ClearAll">
            <summary>
            Clears all KAREL and teach pendant programs and variable data from memory.
            All cleared programs And variables (if they were saved with the SaveVars() command) can be reloaded into memory Using the Load() command.
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.TelnetKcl.Internal.TelnetKclClientBase.ClearProgram(System.String)">
            <summary>
            Clears the program data from memory for the specified or default program.
            </summary>
            <param name="program">The name of any KAREL or teach pendant program in memory</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.TelnetKcl.Internal.TelnetKclClientBase.ClearVars(System.String)">
            <summary>
            Clears the variable and type data associated with the specified or default program from memory.
            Variables And types that are referenced by a loaded program are Not cleared.
            </summary>
            <param name="program">The name of any KAREL or teach pendant program with variables</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.TelnetKcl.Internal.TelnetKclClientBase.Continue(System.String)">
            <summary>
            Continues program execution of the specified task (or all paused tasks if program argument is null) that has been paused by a hold, pause, or test run operation.
            If the program Is aborted, the program execution Is started at the first executable line.
            When a task Is paused, the CYCLE START button on the operator panel has the same effect as the Continue() command.
            Continue is a motion command; therefore, the device from which it Is issued must have motion control.
            </summary>
            <param name="program">The name of any KAREL or teach pendant program which is a task. If null, it continues all paused tasks</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.TelnetKcl.Internal.TelnetKclClientBase.Hold(System.String)">
            <summary>
            Pauses the specified or default program that is being executed and holds motion at the current position (after a normal deceleration).
            Use the Continue() command Or the CYCLE START button On the Operator panel To resume program execution.
            </summary>
            <param name="program">The name of any KAREL or TP program. If null, it holds all executing programs</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.TelnetKcl.Internal.TelnetKclClientBase.Pause(System.String,System.Boolean)">
            <summary>
            Pauses the specified running task. If program is not specified, the default program is used.
            Execution of the current motion segment and the current program statement is completed before the task is paused.
            Condition handlers remain active. If the condition handler action is NOPAUSE and the condition is satisfied, task execution resumes.
            If the statement is a WAIT FOR and the wait condition is satisfied while the task is paused, the statement following the WAIT FOR is executed immediately when the task is resumed.
            If the statement is a DELAY, timing will continue while the task is paused.
            If the delay time is finished while the task is paused, the statement following the DELAY is immediately executed when the task is resumed.
            If the statement is a READ, it will accept input even though the task is paused.
            The Continue() command resumes execution of a paused task.
            When a task is paused, the CYCLE START button on the operator panel has the same effect as the KCL> CONTINUE command.
            </summary>
            <param name="program">the name of any KAREL or TP program which is a task. If null, it pauses all running tasks.</param>
            <param name="force">Pauses the task even if the NOPAUSE attribute is set</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.TelnetKcl.Internal.TelnetKclClientBase.Reset">
            <summary>
            Enables servo power after an error condition has shut off servo power, provided the cause of the error has been cleared.
            The command also clears the message line on the CRT/KB display. The error message remains displayed if the error condition still exists.
            The Reset() command has no effect on a program that is being executed. It has the same effect as the FAULT RESET button on the operator panel and the RESET function key on the teach pendant RESET screen.
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.TelnetKcl.Internal.TelnetKclClientBase.Run(System.String)">
            <summary>
            Executes the specified program. The program must be loaded in memory
            If no program is specified the default program is run. If uninitialized variables are encountered, program execution is paused.
            Execution begins at the first executable line.
            RUN is a motion command; therefore, the device from which it is issued must have motion control. If a RUN command is issued in a command file, it is executed as a NOWAIT command.
            Therefore, the statement following the RUN command will be executed immediately after the RUN command is issued without waiting for the program, specified by the RUN command, to end.        ''' </summary>
            <param name="program">The name of any KAREL or TP program.</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.TelnetKcl.Internal.TelnetKclClientBase.SetPort(UnderAutomation.Fanuc.TelnetKcl.KCLPorts,System.Int32,System.Int32)">
            <summary>
            Assigns the specified value to a specified input or output port. SET PORT can be used  either physical Or simulated output ports, but only With simulated input ports.
            </summary>
            <param name="port">Port type</param>
            <param name="index">Port index</param>
            <param name="value">port value. For boolean ports, true is 1 and 0 is false</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.TelnetKcl.Internal.TelnetKclClientBase.SetVariable(System.String,System.String,System.String)">
            <summary>
            Assigns the specified value to the specified variable. You can assign constant values or variable values, but the value must be of the data type that has been declared for the variable.
            You can assign values to system variables with KCL write access, to program variables, or to standard and user-defined variables and fields. You can assign only one ARRAY element.
            Use brackets ([]) after the variable name to specify an element.
            Certain data types like positions and vectors might have more than one value specified.        ''' </summary>
            <param name="name">A valid program variable</param>
            <param name="value">New value for variable or a program or system variable</param>
            <param name="program">The name of any KAREL or TP program.</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.TelnetKcl.Internal.TelnetKclClientBase.SetVariable(System.String,System.Int32,System.String)">
            <summary>
            Assigns the specified value to the specified variable. You can assign constant values or variable values, but the value must be of the data type that has been declared for the variable.
            You can assign values to system variables with KCL write access, to program variables, or to standard and user-defined variables and fields. You can assign only one ARRAY element.
            Use brackets ([]) after the variable name to specify an element.
            Certain data types like positions and vectors might have more than one value specified.        ''' </summary>
            <param name="name">A valid program variable</param>
            <param name="value">New value for variable or a program or system variable</param>
            <param name="program">The name of any KAREL or TP program.</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.TelnetKcl.Internal.TelnetKclClientBase.GetCurrentPose">
            <summary>
            Returns the position of the TCP relative to the current user frame of reference with an x, y, and z location in millimeters; w, p, and r orientation in degrees; and the current configuration string. Be sure the robot is calibrated.
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.TelnetKcl.Internal.TelnetKclClientBase.GetProgramInformation(System.String)">
            <summary>
            Returns the status information of the specified or default program being executed.
            </summary>
            <param name="name">The name of any KAREL or TP program in memory</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.TelnetKcl.Internal.TelnetKclClientBase.GetVariable(System.String,System.String)">
            <summary>
            Get the name, type, and value of the specified variable.
            You can display the values of system variables that allow KCL read access or the values of program variables.
            Use brackets ([]) after the variable name to specify a specific ARRAY element. If you do not specify a specific element the entire variable is displayed.        ''' </summary>
            <param name="name">A valid program variable</param>
            <param name="program">The name of any KAREL or TP program</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.TelnetKcl.Internal.TelnetKclClientBase.Simulate(UnderAutomation.Fanuc.TelnetKcl.KCLPorts,System.Int32,System.Int32)">
            <summary>
            Simulating I/O allows you to test a program that uses I/O. Simulating I/O does not actually send output signals or receive input signals.
            When simulating a port value, you can specify its initial simulated value or allow the initial value to be the same as the physical port value. If no value is specified, the current physical port value is used.        ''' </summary>
            <param name="port">I/O port type</param>
            <param name="index">I/O port index</param>
            <param name="value">New value for the port</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.TelnetKcl.Internal.TelnetKclClientBase.Skip(System.String)">
            <summary>
            Skips execution of the current statement in the specified task.
            If programm is not specified, the default program is used.
            It has no effect when a task is running or when the system is in a READY state.
            Entire motion statements are skipped with this command. You cannot skip single motion segments.
            The Continue() command resumes execution of the paused task with the statement following the last skipped statement. END statements cannot be skipped.
            If you skip the last RETURN statement in a function routine, there is no way to return the value of the function to the calling program. Therefore, when executing the END statement of the routine, the task will abort.
            If you skip into a FOR loop, you have skipped the statement that initializes the loop counter. When the ENDFOR statement is executed the program will try to remove the loop counter from the stack. If the FOR loop was nested in another FOR loop, the loop counter for the previous FOR loop will be removed from the stack, causing potentially invalid results. If the FOR loop was not nested, a stack underflow error will occur, causing the task to abort.
            READ, MOVE, DELAY, WAIT FOR, and PULSE statements can be paused after they have begun execution. In these cases, when the task is resumed, execution of the paused statement must be finished before subsequent statements are executed. Subsequent skipped statements will not be executed.
            In particular, READ and WAIT FOR statements often require user intervention, such as entering data, before statement execution is completed.
            Step mode operation and step mode type have no effect on the Skip() command.
            </summary>
            <param name="program">The name of any KAREL or TP program which is a task</param>
        </member>
        <member name="M:UnderAutomation.Fanuc.TelnetKcl.Internal.TelnetKclClientBase.UnsimulateAll">
            <summary>
            Discontinues simulation on all input or output port. When a port is unsimulated, the physical value replaces the simulated value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UnderAutomation.Fanuc.TelnetKcl.Internal.TelnetKclClientBase.Unsimulate(UnderAutomation.Fanuc.TelnetKcl.KCLPorts,System.Int32)">
            <summary>
            Discontinues simulation of the specified input or output port. When a port is unsimulated, the physical value replaces the simulated value.
            </summary>
            <param name="port">I/O port type</param>
            <param name="index">I/O port index to unsimulate</param>
            <returns></returns>
        </member>
        <member name="T:UnderAutomation.Fanuc.TelnetKcl.Internal.TelnetKclClientInternal">
            <summary>
            Internal implementation of KCL Client
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.TelnetKcl.Internal.TelnetKclClientInternal.Connect(System.String,System.String)">
            <summary>
            Connect to a robot
            </summary>
            <param name="ip">IP or network name of the robot</param>
            <param name="telnetKclPassword">Telnet password associated with KCL user</param>
        </member>
        <member name="T:UnderAutomation.Fanuc.TelnetKcl.TelnetKclClient">
            <summary>
            Main class that represents a connection to a Fanuc Motoman industrial robot
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.TelnetKcl.TelnetKclClient.#ctor">
            <summary>
            Create a new instance of a robot communication
            </summary>
        </member>
        <member name="M:UnderAutomation.Fanuc.TelnetKcl.TelnetKclClient.Connect(System.String,System.String)">
            <summary>
            Connect to a robot
            </summary>
            <param name="ip">IP or network name of the robot</param>
            <param name="telnetKclPassword">Telnet password associated with KCL user</param>
        </member>
        <member name="T:UnderAutomation.UniversalRobots.License.LicenseInfo">
            <summary>
            Information about a license number
            </summary>
        </member>
        <member name="M:UnderAutomation.UniversalRobots.License.LicenseInfo.#ctor(System.String,System.String)">
            <summary>
            Create a new LicenseInfo instance to retrieve informations about a pair of identifier/key
            This class should not be used to register your product. Please use static function UnderAutomation.UniversalRobot.UniversalRobotInterface.RegisterLicense to register a license.
            </summary>
            <param name="licenseIdentifier">The name of your organization (null for trial version)</param>
            <param name="licenseKey">The key, associated to the identifier, supplied by UnderAutomation (null for trial version)</param>
        </member>
        <member name="M:UnderAutomation.UniversalRobots.License.LicenseInfo.AssertIsLicensed">
            <summary>
            Throw a InvalidLicenseException if the license is Invalid or Expired
            </summary>
        </member>
        <member name="P:UnderAutomation.UniversalRobots.License.LicenseInfo.LicenseKey">
            <summary>
            The license key supplied by UnderAutomation (null for trial period)
            </summary>
        </member>
        <member name="P:UnderAutomation.UniversalRobots.License.LicenseInfo.Product">
            <summary>
            Commercial name of this .NET Software library
            </summary>
        </member>
        <member name="P:UnderAutomation.UniversalRobots.License.LicenseInfo.EvaluationDaysLeft">
            <summary>
            Remaining days of the trial period. Null if the product is licensed. It could be negative if the trial period is ended since several days.
            </summary>
        </member>
        <member name="P:UnderAutomation.UniversalRobots.License.LicenseInfo.EvaluationStartDate">
            <summary>
            The date the trial period starts. If the product is licensed, the date of the library first use.
            </summary>
        </member>
        <member name="P:UnderAutomation.UniversalRobots.License.LicenseInfo.Licensee">
            <summary>
            Name of your organisation
            </summary>
        </member>
        <member name="P:UnderAutomation.UniversalRobots.License.LicenseInfo.TrialPeriodExpirationDate">
            <summary>
            The date the product will expire. Null if the product is licensed.
            </summary>
        </member>
        <member name="P:UnderAutomation.UniversalRobots.License.LicenseInfo.State">
            <summary>
            The current license state
            </summary>
        </member>
        <member name="P:UnderAutomation.UniversalRobots.License.LicenseInfo.ProductReleaseDate">
            <summary>
            The date this version of the product was released.
            </summary>
        </member>
        <member name="P:UnderAutomation.UniversalRobots.License.LicenseInfo.MaintenanceYears">
            <summary>
            Number of maintenance years included in your license
            </summary>
        </member>
        <member name="P:UnderAutomation.UniversalRobots.License.LicenseInfo.LicenseIssuedDate">
            <summary>
            The date you get the license
            </summary>
        </member>
        <member name="P:UnderAutomation.UniversalRobots.License.LicenseInfo.MaintenanceExpirationDate">
            <summary>
            The date your maintenance contract end and you no longer can use this license with newer versions.
            </summary>
        </member>
        <member name="M:UnderAutomation.UniversalRobots.License.LicenseInfo.ToString">
            <summary>
            A human description of the license
            </summary>
        </member>
        <member name="T:UnderAutomation.UniversalRobots.License.LicenseState">
            <summary>
            States that can take a license
            </summary>
        </member>
        <member name="F:UnderAutomation.UniversalRobots.License.LicenseState.Invalid">
            <summary>
            The pair License Identifier and License Key are incompatible, you cannot use the library
            </summary>
        </member>
        <member name="F:UnderAutomation.UniversalRobots.License.LicenseState.Trial">
            <summary>
            The library is in a trial period, you can use the library
            </summary>
        </member>
        <member name="F:UnderAutomation.UniversalRobots.License.LicenseState.ExtraTrial">
            <summary>
            The library is in an extra trial period, you can use the library
            </summary>
        </member>
        <member name="F:UnderAutomation.UniversalRobots.License.LicenseState.Expired">
            <summary>
            The trial period as expired, you no more can use the library
            </summary>
        </member>
        <member name="F:UnderAutomation.UniversalRobots.License.LicenseState.MaintenanceNeeded">
            <summary>
            Your license does not allow you to use such a recent release. Please buy maintenance to use this version
            </summary>
        </member>
        <member name="F:UnderAutomation.UniversalRobots.License.LicenseState.Licensed">
            <summary>
            Congratulations, the library is licensed.
            </summary>
        </member>
        <member name="T:UnderAutomation.UniversalRobots.License.InvalidLicenseException">
            <summary>
            Exception thrown while using the product if the license is not valid.
            </summary>
        </member>
        <member name="P:UnderAutomation.UniversalRobots.License.InvalidLicenseException.LicenseInfo">
            <summary>
            The license that causes this exception
            </summary>
        </member>
    </members>
</doc>
